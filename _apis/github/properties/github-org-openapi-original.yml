openapi: 3.0.3
info:
  version: 1.1.4
  title: ' org'
  description: Needs description.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: ghes
  x-github-release: 3.9
tags: []
servers:
  - url: '{protocol}://{hostname}/api/v3'
    variables:
      hostname:
        description: Self-hosted Enterprise Server hostname
        default: HOSTNAME
      protocol:
        description: Self-hosted Enterprise Server protocol
        default: http
externalDocs:
  description: GitHub Enterprise Developer Docs
  url: https://docs.github.com/enterprise-server@3.9/rest/
paths:
  /admin/organizations:
    post:
      summary: Create an organization
      description: ''
      operationId: enterprise-admin/create-org
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/orgs#create-an-organization
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-simple'
              examples:
                default:
                  $ref: '#/components/examples/organization-simple'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: The organization's username.
                admin:
                  type: string
                  description: The login of the user who will manage this organization.
                profile_name:
                  type: string
                  description: The organization's display name.
              required:
                - login
                - admin
            examples:
              default:
                value:
                  login: github
                  profile_name: GitHub, Inc.
                  admin: monalisaoctocat
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: orgs
  /admin/organizations/{org}:
    patch:
      summary: Update an organization name
      description: ''
      operationId: enterprise-admin/update-org-name
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/orgs#update-an-organization-name
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
              examples:
                default:
                  value:
                    message: >-
                      Job queued to rename organization. It may take a few
                      minutes to complete.
                    url: https://<hostname>/api/v3/organizations/1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: The organization's new name.
              required:
                - login
            examples:
              default:
                value:
                  login: the-new-octocats
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: orgs
  /enterprise/stats/orgs:
    get:
      summary: Get organization statistics
      description: ''
      operationId: enterprise-admin/get-org-stats
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/admin-stats#get-organization-statistics
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enterprise-organization-overview'
              examples:
                default:
                  value:
                    total_orgs: 50
                    disabled_orgs: 1
                    total_teams: 70
                    total_team_members: 700
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: admin-stats
  /enterprises/{enterprise}/actions/permissions/organizations:
    get:
      summary: List selected organizations enabled for GitHub Actions in an enterprise
      description: >-
        Lists the organizations that are selected to have GitHub Actions enabled
        in an enterprise. To use this endpoint, the enterprise permission policy
        for `enabled_organizations` must be configured to `selected`. For more
        information, see "[Set GitHub Actions permissions for an
        enterprise](#set-github-actions-permissions-for-an-enterprise)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:enterprise` scope to use this endpoint.
      operationId: >-
        enterprise-admin/list-selected-organizations-enabled-github-actions-enterprise
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#list-selected-organizations-enabled-for-github-actions-in-an-enterprise
      parameters:
        - $ref: '#/components/parameters/enterprise'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: number
                  organizations:
                    type: array
                    items:
                      $ref: '#/components/schemas/organization-simple'
                required:
                  - total_count
                  - organizations
              examples:
                default:
                  $ref: '#/components/examples/organization-targets'
      x-github:
        enabledForGitHubApps: false
        githubCloudOnly: true
        category: actions
        subcategory: permissions
    put:
      summary: Set selected organizations enabled for GitHub Actions in an enterprise
      description: >-
        Replaces the list of selected organizations that are enabled for GitHub
        Actions in an enterprise. To use this endpoint, the enterprise
        permission policy for `enabled_organizations` must be configured to
        `selected`. For more information, see "[Set GitHub Actions permissions
        for an enterprise](#set-github-actions-permissions-for-an-enterprise)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:enterprise` scope to use this endpoint.
      operationId: >-
        enterprise-admin/set-selected-organizations-enabled-github-actions-enterprise
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#set-selected-organizations-enabled-for-github-actions-in-an-enterprise
      parameters:
        - $ref: '#/components/parameters/enterprise'
      responses:
        '204':
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_organization_ids:
                  description: List of organization IDs to enable for GitHub Actions.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the organization.
              required:
                - selected_organization_ids
            examples:
              default:
                value:
                  selected_organization_ids:
                    - 32
                    - 91
      x-github:
        enabledForGitHubApps: false
        githubCloudOnly: true
        category: actions
        subcategory: permissions
  /enterprises/{enterprise}/actions/permissions/organizations/{org_id}:
    put:
      summary: Enable a selected organization for GitHub Actions in an enterprise
      description: >-
        Adds an organization to the list of selected organizations that are
        enabled for GitHub Actions in an enterprise. To use this endpoint, the
        enterprise permission policy for `enabled_organizations` must be
        configured to `selected`. For more information, see "[Set GitHub Actions
        permissions for an
        enterprise](#set-github-actions-permissions-for-an-enterprise)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:enterprise` scope to use this endpoint.
      operationId: enterprise-admin/enable-selected-organization-github-actions-enterprise
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#enable-a-selected-organization-for-github-actions-in-an-enterprise
      parameters:
        - $ref: '#/components/parameters/enterprise'
        - $ref: '#/components/parameters/org-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: false
        githubCloudOnly: true
        category: actions
        subcategory: permissions
    delete:
      summary: Disable a selected organization for GitHub Actions in an enterprise
      description: >-
        Removes an organization from the list of selected organizations that are
        enabled for GitHub Actions in an enterprise. To use this endpoint, the
        enterprise permission policy for `enabled_organizations` must be
        configured to `selected`. For more information, see "[Set GitHub Actions
        permissions for an
        enterprise](#set-github-actions-permissions-for-an-enterprise)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:enterprise` scope to use this endpoint.
      operationId: enterprise-admin/disable-selected-organization-github-actions-enterprise
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#disable-a-selected-organization-for-github-actions-in-an-enterprise
      parameters:
        - $ref: '#/components/parameters/enterprise'
        - $ref: '#/components/parameters/org-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: false
        githubCloudOnly: true
        category: actions
        subcategory: permissions
  /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations:
    get:
      summary: List organization access to a self-hosted runner group in an enterprise
      description: >-
        Lists the organizations with access to a self-hosted runner group.


        OAuth app tokens and personal access tokens (classic) need the
        `manage_runners:enterprise` scope to use this endpoint.
      operationId: >-
        enterprise-admin/list-org-access-to-self-hosted-runner-group-in-enterprise
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#list-organization-access-to-a-self-hosted-runner-group-in-an-enterprise
      parameters:
        - $ref: '#/components/parameters/enterprise'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: number
                  organizations:
                    type: array
                    items:
                      $ref: '#/components/schemas/organization-simple'
                required:
                  - total_count
                  - organizations
              examples:
                default:
                  $ref: '#/components/examples/organization-targets'
      x-github:
        enabledForGitHubApps: false
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
    put:
      summary: Set organization access for a self-hosted runner group in an enterprise
      description: >-
        Replaces the list of organizations that have access to a self-hosted
        runner configured in an enterprise.


        OAuth app tokens and personal access tokens (classic) need the
        `manage_runners:enterprise` scope to use this endpoint.
      operationId: >-
        enterprise-admin/set-org-access-to-self-hosted-runner-group-in-enterprise
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#set-organization-access-for-a-self-hosted-runner-group-in-an-enterprise
      parameters:
        - $ref: '#/components/parameters/enterprise'
        - $ref: '#/components/parameters/runner-group-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_organization_ids:
                  description: List of organization IDs that can access the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the organization.
              required:
                - selected_organization_ids
            examples:
              default:
                value:
                  selected_organization_ids:
                    - 32
                    - 91
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: false
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
  /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations/{org_id}:
    put:
      summary: Add organization access to a self-hosted runner group in an enterprise
      description: >-
        Adds an organization to the list of selected organizations that can
        access a self-hosted runner group. The runner group must have
        `visibility` set to `selected`. For more information, see "[Create a
        self-hosted runner group for an
        enterprise](#create-a-self-hosted-runner-group-for-an-enterprise)."


        OAuth app tokens and personal access tokens (classic) need the
        `manage_runners:enterprise` scope to use this endpoint.
      operationId: >-
        enterprise-admin/add-org-access-to-self-hosted-runner-group-in-enterprise
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#add-organization-access-to-a-self-hosted-runner-group-in-an-enterprise
      parameters:
        - $ref: '#/components/parameters/enterprise'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/org-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: false
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
    delete:
      summary: >-
        Remove organization access to a self-hosted runner group in an
        enterprise
      description: >-
        Removes an organization from the list of selected organizations that can
        access a self-hosted runner group. The runner group must have
        `visibility` set to `selected`. For more information, see "[Create a
        self-hosted runner group for an
        enterprise](#create-a-self-hosted-runner-group-for-an-enterprise)."


        OAuth app tokens and personal access tokens (classic) need the
        `manage_runners:enterprise` scope to use this endpoint.
      operationId: >-
        enterprise-admin/remove-org-access-to-self-hosted-runner-group-in-enterprise
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#remove-organization-access-to-a-self-hosted-runner-group-in-an-enterprise
      parameters:
        - $ref: '#/components/parameters/enterprise'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/org-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: false
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
  /organizations:
    get:
      summary: List organizations
      description: >-
        Lists all organizations, in the order that they were created on GitHub
        Enterprise Server.


        **Note:** Pagination is powered exclusively by the `since` parameter.
        Use the [Link
        header](https://docs.github.com/enterprise-server@3.9/rest/guides/using-pagination-in-the-rest-api#using-link-headers)
        to get the URL for the next page of organizations.
      tags:
        - - - - orgs
      operationId: orgs/list
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#list-organizations
      parameters:
        - $ref: '#/components/parameters/since-org'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-simple'
              examples:
                default:
                  $ref: '#/components/examples/organization-simple-items'
          headers:
            Link:
              example: <https://api.github.com/organizations?since=135>; rel="next"
              schema:
                type: string
        '304':
          $ref: '#/components/responses/not_modified'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  /organizations/{organization_id}/custom_roles:
    get:
      summary: Deprecated - List custom repository roles in an organization
      description: >-
        **Note**: This operation is deprecated and will be removed in the
        future.

        Use the "[List custom repository
        roles](https://docs.github.com/enterprise-server@3.9/rest/orgs/custom-roles#list-custom-repository-roles-in-an-organization)"
        endpoint instead.


        List the custom repository roles available in this organization. For
        more information on custom repository roles, see "[About custom
        repository
        roles](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles)."


        The authenticated user must be administrator of the organization or of a
        repository of the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` or `repo` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/list-custom-roles
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/custom-roles#deprecatedlist-custom-repository-roles-in-an-organization
      parameters:
        - name: organization_id
          description: The unique identifier of the organization.
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Response - list of custom role names
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    description: The number of custom roles in this organization
                    example: 3
                    type: integer
                  custom_roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/organization-custom-repository-role'
              examples:
                default:
                  $ref: >-
                    #/components/examples/organization-custom-repository-role-example
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        removalDate: '2025-02-15'
        deprecationDate: '2023-02-15'
        category: orgs
        subcategory: custom-roles
      deprecated: true
  /orgs/{org}:
    get:
      summary: Get an organization
      description: >-
        Gets information about an organization.


        When the value of `two_factor_requirement_enabled` is `true`, the
        organization requires all members, billing managers, and outside
        collaborators to enable [two-factor
        authentication](https://docs.github.com/enterprise-server@3.9/articles/securing-your-account-with-two-factor-authentication-2fa/).


        To see the full details about an organization, the authenticated user
        must be an organization owner.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to see the full details about an organization.


        To see information about an organization's GitHub Enterprise Server
        plan, GitHub Apps need the `Organization plan` permission.
      tags:
        - - - - orgs
      operationId: orgs/get
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#get-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-full'
              examples:
                default-response:
                  $ref: '#/components/examples/organization-full'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
    patch:
      summary: Update an organization
      description: >-
        **Parameter Deprecation Notice:** GitHub Enterprise Server will replace
        and discontinue `members_allowed_repository_creation_type` in favor of
        more granular permissions. The new input parameters are
        `members_can_create_public_repositories`,
        `members_can_create_private_repositories` for all organizations and
        `members_can_create_internal_repositories` for organizations associated
        with an enterprise account using GitHub Enterprise Cloud or GitHub
        Enterprise Server 2.20+. For more information, see the [blog
        post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).


        Updates the organization's profile and member privileges.


        The authenticated user must be an organization owner to use this
        endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` or `repo` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/update
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#update-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                billing_email:
                  type: string
                  description: Billing email address. This address is not publicized.
                company:
                  type: string
                  description: The company name.
                email:
                  type: string
                  description: The publicly visible email address.
                twitter_username:
                  type: string
                  description: The Twitter username of the company.
                location:
                  type: string
                  description: The location.
                name:
                  type: string
                  description: The shorthand name of the company.
                description:
                  type: string
                  description: The description of the company.
                has_organization_projects:
                  type: boolean
                  description: Whether an organization can use organization projects.
                has_repository_projects:
                  type: boolean
                  description: >-
                    Whether repositories that belong to the organization can use
                    repository projects.
                default_repository_permission:
                  type: string
                  description: >-
                    Default permission level members have for organization
                    repositories.
                  enum:
                    - read
                    - write
                    - admin
                    - none
                  default: read
                members_can_create_repositories:
                  type: boolean
                  description: >-
                    Whether of non-admin organization members can create
                    repositories. **Note:** A parameter can override this
                    parameter. See `members_allowed_repository_creation_type` in
                    this table for details.
                  default: true
                members_can_create_internal_repositories:
                  type: boolean
                  description: >-
                    Whether organization members can create internal
                    repositories, which are visible to all enterprise members.
                    You can only allow members to create internal repositories
                    if your organization is associated with an enterprise
                    account using GitHub Enterprise Cloud or GitHub Enterprise
                    Server 2.20+. For more information, see "[Restricting
                    repository creation in your
                    organization](https://docs.github.com/enterprise-server@3.9/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)"
                    in the GitHub Help documentation.
                members_can_create_private_repositories:
                  type: boolean
                  description: >-
                    Whether organization members can create private
                    repositories, which are visible to organization members with
                    permission. For more information, see "[Restricting
                    repository creation in your
                    organization](https://docs.github.com/enterprise-server@3.9/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)"
                    in the GitHub Help documentation.
                members_can_create_public_repositories:
                  type: boolean
                  description: >-
                    Whether organization members can create public repositories,
                    which are visible to anyone. For more information, see
                    "[Restricting repository creation in your
                    organization](https://docs.github.com/enterprise-server@3.9/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)"
                    in the GitHub Help documentation.
                members_allowed_repository_creation_type:
                  type: string
                  description: >-
                    Specifies which types of repositories non-admin organization
                    members can create. 

                    **Note:** This parameter is deprecated and will be removed
                    in the future. Its return value ignores internal
                    repositories. Using this parameter overrides values set in
                    `members_can_create_repositories`. See the parameter
                    deprecation notice in the operation description for details.
                  enum:
                    - all
                    - private
                    - none
                members_can_create_pages:
                  type: boolean
                  description: >-
                    Whether organization members can create GitHub Pages sites.
                    Existing published sites will not be impacted.
                  default: true
                members_can_fork_private_repositories:
                  type: boolean
                  description: >-
                    Whether organization members can fork private organization
                    repositories.
                  default: false
                web_commit_signoff_required:
                  type: boolean
                  description: >-
                    Whether contributors to organization repositories are
                    required to sign off on commits they make through GitHub's
                    web interface.
                  default: false
                blog:
                  type: string
                  example: '"http://github.blog"'
                advanced_security_enabled_for_new_repositories:
                  type: boolean
                  description: >-
                    Whether GitHub Advanced Security is automatically enabled
                    for new repositories.


                    To use this parameter, you must have admin permissions for
                    the repository or be an owner or security manager for the
                    organization that owns the repository. For more information,
                    see "[Managing security managers in your
                    organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    You can check which security and analysis features are
                    currently enabled by using a `GET /orgs/{org}` request.
                dependabot_alerts_enabled_for_new_repositories:
                  type: boolean
                  description: >-
                    Whether Dependabot alerts is automatically enabled for new
                    repositories.


                    To use this parameter, you must have admin permissions for
                    the repository or be an owner or security manager for the
                    organization that owns the repository. For more information,
                    see "[Managing security managers in your
                    organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    You can check which security and analysis features are
                    currently enabled by using a `GET /orgs/{org}` request.
                dependabot_security_updates_enabled_for_new_repositories:
                  type: boolean
                  description: >-
                    Whether Dependabot security updates is automatically enabled
                    for new repositories.


                    To use this parameter, you must have admin permissions for
                    the repository or be an owner or security manager for the
                    organization that owns the repository. For more information,
                    see "[Managing security managers in your
                    organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    You can check which security and analysis features are
                    currently enabled by using a `GET /orgs/{org}` request.
                dependency_graph_enabled_for_new_repositories:
                  type: boolean
                  description: >-
                    Whether dependency graph is automatically enabled for new
                    repositories.


                    To use this parameter, you must have admin permissions for
                    the repository or be an owner or security manager for the
                    organization that owns the repository. For more information,
                    see "[Managing security managers in your
                    organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    You can check which security and analysis features are
                    currently enabled by using a `GET /orgs/{org}` request.
                secret_scanning_enabled_for_new_repositories:
                  type: boolean
                  description: >-
                    Whether secret scanning is automatically enabled for new
                    repositories.


                    To use this parameter, you must have admin permissions for
                    the repository or be an owner or security manager for the
                    organization that owns the repository. For more information,
                    see "[Managing security managers in your
                    organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    You can check which security and analysis features are
                    currently enabled by using a `GET /orgs/{org}` request.
                secret_scanning_push_protection_enabled_for_new_repositories:
                  type: boolean
                  description: >-
                    Whether secret scanning push protection is automatically
                    enabled for new repositories.


                    To use this parameter, you must have admin permissions for
                    the repository or be an owner or security manager for the
                    organization that owns the repository. For more information,
                    see "[Managing security managers in your
                    organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    You can check which security and analysis features are
                    currently enabled by using a `GET /orgs/{org}` request.
                secret_scanning_push_protection_custom_link_enabled:
                  type: boolean
                  description: >-
                    Whether a custom link is shown to contributors who are
                    blocked from pushing a secret by push protection.
                secret_scanning_push_protection_custom_link:
                  type: string
                  description: >-
                    If `secret_scanning_push_protection_custom_link_enabled` is
                    true, the URL that will be displayed to contributors who are
                    blocked from pushing a secret.
            examples:
              default:
                value:
                  billing_email: mona@github.com
                  company: GitHub
                  email: mona@github.com
                  twitter_username: github
                  location: San Francisco
                  name: github
                  description: GitHub, the company.
                  default_repository_permission: read
                  members_can_create_repositories: true
                  members_allowed_repository_creation_type: all
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-full'
              examples:
                default:
                  $ref: '#/components/examples/organization-full'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/validation-error'
                  - $ref: '#/components/schemas/validation-error-simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
    delete:
      summary: Delete an organization
      description: >-
        Deletes an organization and all its repositories.


        The organization login will be unavailable for 90 days after deletion.


        Please review the Terms of Service regarding account deletion before
        using this endpoint:


        https://docs.github.com/enterprise-server@3.9/site-policy/github-terms/github-terms-of-service
      operationId: orgs/delete
      tags:
        - - - - orgs
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#delete-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '202':
          $ref: '#/components/responses/accepted'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  /orgs/{org}/actions/cache/usage:
    get:
      summary: Get GitHub Actions cache usage for an organization
      description: >-
        Gets the total GitHub Actions cache usage for an organization.

        The data fetched using this API is refreshed approximately every 5
        minutes, so values returned from this endpoint may take at least 5
        minutes to get updated.


        OAuth tokens and personal access tokens (classic) need the `read:org`
        scope to use this endpoint.
      tags:
        - - - - actions
      operationId: actions/get-actions-cache-usage-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/cache#get-github-actions-cache-usage-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions-cache-usage-org-enterprise'
              examples:
                default:
                  $ref: '#/components/examples/actions-cache-usage-org-enterprise'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: cache
  /orgs/{org}/actions/cache/usage-by-repository:
    get:
      summary: List repositories with GitHub Actions cache usage for an organization
      description: >-
        Lists repositories and their GitHub Actions cache usage for an
        organization.

        The data fetched using this API is refreshed approximately every 5
        minutes, so values returned from this endpoint may take at least 5
        minutes to get updated.


        OAuth tokens and personal access tokens (classic) need the `read:org`
        scope to use this endpoint.
      tags:
        - - - - actions
      operationId: actions/get-actions-cache-usage-by-repo-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/cache#list-repositories-with-github-actions-cache-usage-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repository_cache_usages
                properties:
                  total_count:
                    type: integer
                  repository_cache_usages:
                    type: array
                    items:
                      $ref: '#/components/schemas/actions-cache-usage-by-repository'
              examples:
                default:
                  $ref: '#/components/examples/org-actions-cache-usage-by-repo'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: cache
  /orgs/{org}/actions/oidc/customization/sub:
    get:
      summary: >-
        Get the customization template for an OIDC subject claim for an
        organization
      description: >-
        Gets the customization template for an OpenID Connect (OIDC) subject
        claim.


        OAuth app tokens and personal access tokens (classic) need the
        `read:org` scope to use this endpoint.
      tags:
        - - - - oidc
      operationId: oidc/get-oidc-custom-sub-template-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/oidc#get-the-customization-template-for-an-oidc-subject-claim-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: A JSON serialized template for OIDC subject claim customization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oidc-custom-sub'
              examples:
                default:
                  $ref: '#/components/examples/oidc-custom-sub'
      x-github:
        enabledForGitHubApps: true
        category: actions
        subcategory: oidc
    put:
      summary: >-
        Set the customization template for an OIDC subject claim for an
        organization
      description: >-
        Creates or updates the customization template for an OpenID Connect
        (OIDC) subject claim.


        OAuth app tokens and personal access tokens (classic) need the
        `write:org` scope to use this endpoint.
      tags:
        - - - - oidc
      operationId: oidc/update-oidc-custom-sub-template-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/oidc#set-the-customization-template-for-an-oidc-subject-claim-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oidc-custom-sub'
            examples:
              default:
                $ref: '#/components/examples/oidc-custom-sub'
      responses:
        '201':
          description: Empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty-object'
              examples:
                default:
                  value: null
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: oidc
  /orgs/{org}/actions/permissions:
    get:
      summary: Get GitHub Actions permissions for an organization
      description: >-
        Gets the GitHub Actions permissions policy for repositories and allowed
        actions in an organization.


        You must authenticate using an access token with the `admin:org` scope
        to use this endpoint. GitHub Apps must have the `administration`
        organization permission to use this API.
      operationId: actions/get-github-actions-permissions-organization
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#get-github-actions-permissions-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions-organization-permissions'
              examples:
                default:
                  $ref: '#/components/examples/actions-organization-permissions'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set GitHub Actions permissions for an organization
      description: >-
        Sets the GitHub Actions permissions policy for repositories and allowed
        actions in an organization.


        If the organization belongs to an enterprise that has set restrictive
        permissions at the enterprise level, such as `allowed_actions` to
        `selected` actions, then you cannot override them for the organization.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/set-github-actions-permissions-organization
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#set-github-actions-permissions-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '204':
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled_repositories:
                  $ref: '#/components/schemas/enabled-repositories'
                allowed_actions:
                  $ref: '#/components/schemas/allowed-actions'
              required:
                - enabled_repositories
            examples:
              default:
                value:
                  enabled_repositories: all
                  allowed_actions: selected
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/permissions/repositories:
    get:
      summary: List selected repositories enabled for GitHub Actions in an organization
      description: >-
        Lists the selected repositories that are enabled for GitHub Actions in
        an organization. To use this endpoint, the organization permission
        policy for `enabled_repositories` must be configured to `selected`. For
        more information, see "[Set GitHub Actions permissions for an
        organization](#set-github-actions-permissions-for-an-organization)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/list-selected-repositories-enabled-github-actions-organization
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#list-selected-repositories-enabled-for-github-actions-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: number
                  repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/repository'
              examples:
                default:
                  $ref: '#/components/examples/repository-paginated'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set selected repositories enabled for GitHub Actions in an organization
      description: >-
        Replaces the list of selected repositories that are enabled for GitHub
        Actions in an organization. To use this endpoint, the organization
        permission policy for `enabled_repositories` must be configured to
        `selected`. For more information, see "[Set GitHub Actions permissions
        for an
        organization](#set-github-actions-permissions-for-an-organization)."



        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/set-selected-repositories-enabled-github-actions-organization
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#set-selected-repositories-enabled-for-github-actions-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '204':
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  description: List of repository IDs to enable for GitHub Actions.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the repository.
              required:
                - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                    - 32
                    - 42
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/permissions/repositories/{repository_id}:
    put:
      summary: Enable a selected repository for GitHub Actions in an organization
      description: >-
        Adds a repository to the list of selected repositories that are enabled
        for GitHub Actions in an organization. To use this endpoint, the
        organization permission policy for `enabled_repositories` must be must
        be configured to `selected`. For more information, see "[Set GitHub
        Actions permissions for an
        organization](#set-github-actions-permissions-for-an-organization)."


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/enable-selected-repository-github-actions-organization
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#enable-a-selected-repository-for-github-actions-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/repository-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    delete:
      summary: Disable a selected repository for GitHub Actions in an organization
      description: >-
        Removes a repository from the list of selected repositories that are
        enabled for GitHub Actions in an organization. To use this endpoint, the
        organization permission policy for `enabled_repositories` must be
        configured to `selected`. For more information, see "[Set GitHub Actions
        permissions for an
        organization](#set-github-actions-permissions-for-an-organization)."


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/disable-selected-repository-github-actions-organization
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#disable-a-selected-repository-for-github-actions-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/repository-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/permissions/selected-actions:
    get:
      summary: Get allowed actions for an organization
      description: >-
        Gets the selected actions that are allowed in an organization. To use
        this endpoint, the organization permission policy for `allowed_actions`
        must be configured to `selected`. For more information, see "[Set GitHub
        Actions permissions for an
        organization](#set-github-actions-permissions-for-an-organization).""


        You must authenticate using an access token with the `admin:org` scope
        to use this endpoint. GitHub Apps must have the `administration`
        organization permission to use this API.
      operationId: actions/get-allowed-actions-organization
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#get-allowed-actions-and-reusable-workflows-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selected-actions'
              examples:
                default:
                  $ref: '#/components/examples/selected-actions'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set allowed actions for an organization
      description: >-
        Sets the actions that are allowed in an organization. To use this
        endpoint, the organization permission policy for `allowed_actions` must
        be configured to `selected`. For more information, see "[Set GitHub
        Actions permissions for an
        organization](#set-github-actions-permissions-for-an-organization)."


        If the organization belongs to an enterprise that has `selected` actions
        set at the enterprise level, then you cannot override any of the
        enterprise's allowed actions settings.


        To use the `patterns_allowed` setting for private repositories, the
        organization must belong to an enterprise. If the organization does not
        belong to an enterprise, then the `patterns_allowed` setting only
        applies to public repositories in the organization.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/set-allowed-actions-organization
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#set-allowed-actions-and-reusable-workflows-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '204':
          description: Response
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/selected-actions'
            examples:
              selected_actions:
                $ref: '#/components/examples/selected-actions'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/permissions/workflow:
    get:
      summary: Get default workflow permissions for an organization
      description: >-
        Gets the default workflow permissions granted to the `GITHUB_TOKEN` when
        running workflows in an organization,

        as well as whether GitHub Actions can submit approving pull request
        reviews. For more information, see

        "[Setting the permissions of the GITHUB_TOKEN for your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#setting-the-permissions-of-the-github_token-for-your-organization)."


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      tags:
        - - - - actions
      operationId: actions/get-github-actions-default-workflow-permissions-organization
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#get-default-workflow-permissions-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions-get-default-workflow-permissions'
              examples:
                default:
                  $ref: '#/components/examples/actions-default-workflow-permissions'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: permissions
    put:
      summary: Set default workflow permissions for an organization
      description: >-
        Sets the default workflow permissions granted to the `GITHUB_TOKEN` when
        running workflows in an organization, and sets if GitHub Actions

        can submit approving pull request reviews. For more information, see

        "[Setting the permissions of the GITHUB_TOKEN for your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#setting-the-permissions-of-the-github_token-for-your-organization)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - actions
      operationId: actions/set-github-actions-default-workflow-permissions-organization
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/permissions#set-default-workflow-permissions-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '204':
          description: Success response
        '409':
          description: >-
            Conflict response when changing a setting is prevented by the owning
            enterprise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actions-set-default-workflow-permissions'
            examples:
              default:
                $ref: '#/components/examples/actions-default-workflow-permissions'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/runner-groups:
    get:
      summary: List self-hosted runner groups for an organization
      description: >-
        Lists all self-hosted runner groups configured in an organization and
        inherited from an enterprise.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/list-self-hosted-runner-groups-for-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#list-self-hosted-runner-groups-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/visible-to-repository'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runner_groups
                properties:
                  total_count:
                    type: number
                  runner_groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/runner-groups-org'
              examples:
                default:
                  $ref: '#/components/examples/runner-groups-org'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
    post:
      summary: Create a self-hosted runner group for an organization
      description: >-
        Creates a new self-hosted runner group for an organization.


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/create-self-hosted-runner-group-for-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#create-a-self-hosted-runner-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the runner group.
                  type: string
                visibility:
                  description: >-
                    Visibility of a runner group. You can select all
                    repositories, select individual repositories, or limit
                    access to private repositories.
                  type: string
                  enum:
                    - selected
                    - all
                    - private
                  default: all
                selected_repository_ids:
                  description: List of repository IDs that can access the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the repository.
                runners:
                  description: List of runner IDs to add to the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the runner.
                allows_public_repositories:
                  description: >-
                    Whether the runner group can be used by `public`
                    repositories.
                  type: boolean
                  default: false
                restricted_to_workflows:
                  description: >-
                    If `true`, the runner group will be restricted to running
                    only the workflows specified in the `selected_workflows`
                    array.
                  type: boolean
                  default: false
                selected_workflows:
                  description: >-
                    List of workflows the runner group should be allowed to run.
                    This setting will be ignored unless
                    `restricted_to_workflows` is set to `true`.
                  type: array
                  items:
                    type: string
                    description: >-
                      Name of workflow the runner group should be allowed to
                      run. Note that a ref, tag, or long SHA is required.
                    example: octo-org/octo-repo/.github/workflows/deploy.yaml@main
              required:
                - name
            examples:
              default:
                value:
                  name: Expensive hardware runners
                  visibility: selected
                  selected_repository_ids:
                    - 32
                    - 91
                  runners:
                    - 9
                    - 2
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runner-groups-org'
              examples:
                default:
                  $ref: '#/components/examples/runner-group'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}:
    get:
      summary: Get a self-hosted runner group for an organization
      description: >-
        Gets a specific self-hosted runner group for an organization.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/get-self-hosted-runner-group-for-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#get-a-self-hosted-runner-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runner-groups-org'
              examples:
                default:
                  $ref: '#/components/examples/runner-group-item'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
    patch:
      summary: Update a self-hosted runner group for an organization
      description: >-
        Updates the `name` and `visibility` of a self-hosted runner group in an
        organization.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/update-self-hosted-runner-group-for-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#update-a-self-hosted-runner-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the runner group.
                  type: string
                visibility:
                  description: >-
                    Visibility of a runner group. You can select all
                    repositories, select individual repositories, or all private
                    repositories.
                  type: string
                  enum:
                    - selected
                    - all
                    - private
                allows_public_repositories:
                  description: >-
                    Whether the runner group can be used by `public`
                    repositories.
                  type: boolean
                  default: false
                restricted_to_workflows:
                  description: >-
                    If `true`, the runner group will be restricted to running
                    only the workflows specified in the `selected_workflows`
                    array.
                  type: boolean
                  default: false
                selected_workflows:
                  description: >-
                    List of workflows the runner group should be allowed to run.
                    This setting will be ignored unless
                    `restricted_to_workflows` is set to `true`.
                  type: array
                  items:
                    type: string
                    description: >-
                      Name of workflow the runner group should be allowed to
                      run. Note that a ref, tag, or long SHA is required.
                    example: octo-org/octo-repo/.github/workflows/deploy.yaml@main
              required:
                - name
            examples:
              default:
                value:
                  name: Expensive hardware runners
                  visibility: selected
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runner-groups-org'
              examples:
                default:
                  $ref: '#/components/examples/runner-group'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
    delete:
      summary: Delete a self-hosted runner group from an organization
      description: >-
        Deletes a self-hosted runner group for an organization.


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/delete-self-hosted-runner-group-from-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#delete-a-self-hosted-runner-group-from-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories:
    get:
      summary: List repository access to a self-hosted runner group in an organization
      description: >-
        Lists the repositories with access to a self-hosted runner group
        configured in an organization.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/list-repo-access-to-self-hosted-runner-group-in-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#list-repository-access-to-a-self-hosted-runner-group-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: number
                  repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-paginated'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
    put:
      summary: Set repository access for a self-hosted runner group in an organization
      description: >-
        Replaces the list of repositories that have access to a self-hosted
        runner group configured in an organization.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/set-repo-access-to-self-hosted-runner-group-in-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#set-repository-access-for-a-self-hosted-runner-group-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  description: List of repository IDs that can access the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the repository.
              required:
                - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                    - 32
                    - 91
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}:
    put:
      summary: Add repository access to a self-hosted runner group in an organization
      description: >-
        Adds a repository to the list of repositories that can access a
        self-hosted runner group. The runner group must have `visibility` set to
        `selected`. For more information, see "[Create a self-hosted runner
        group for an
        organization](#create-a-self-hosted-runner-group-for-an-organization)."


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/add-repo-access-to-self-hosted-runner-group-in-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#add-repository-access-to-a-self-hosted-runner-group-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/repository-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
    delete:
      summary: >-
        Remove repository access to a self-hosted runner group in an
        organization
      description: >-
        Removes a repository from the list of selected repositories that can
        access a self-hosted runner group. The runner group must have
        `visibility` set to `selected`. For more information, see "[Create a
        self-hosted runner group for an
        organization](#create-a-self-hosted-runner-group-for-an-organization)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/remove-repo-access-to-self-hosted-runner-group-in-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#remove-repository-access-to-a-self-hosted-runner-group-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/repository-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/runners:
    get:
      summary: List self-hosted runners in a group for an organization
      description: >-
        Lists self-hosted runners that are in a specific organization group.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/list-self-hosted-runners-in-group-for-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#list-self-hosted-runners-in-a-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runners
                properties:
                  total_count:
                    type: number
                  runners:
                    type: array
                    items:
                      $ref: '#/components/schemas/runner'
              examples:
                default:
                  $ref: '#/components/examples/runner-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
    put:
      summary: Set self-hosted runners in a group for an organization
      description: >-
        Replaces the list of self-hosted runners that are part of an
        organization runner group.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/set-self-hosted-runners-in-group-for-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#set-self-hosted-runners-in-a-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                runners:
                  description: List of runner IDs to add to the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the runner.
              required:
                - runners
            examples:
              default:
                value:
                  runners:
                    - 9
                    - 2
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}:
    put:
      summary: Add a self-hosted runner to a group for an organization
      description: >-
        Adds a self-hosted runner to a runner group configured in an
        organization.


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/add-self-hosted-runner-to-group-for-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#add-a-self-hosted-runner-to-a-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
    delete:
      summary: Remove a self-hosted runner from a group for an organization
      description: >-
        Removes a self-hosted runner from a group configured in an organization.
        The runner is then returned to the default group.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/remove-self-hosted-runner-from-group-for-org
      tags:
        - - - - actions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runner-groups#remove-a-self-hosted-runner-from-a-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runners:
    get:
      summary: List self-hosted runners for an organization
      description: >-
        Lists all self-hosted runners configured in an organization.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/list-self-hosted-runners-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runners#list-self-hosted-runners-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runners
                properties:
                  total_count:
                    type: integer
                  runners:
                    type: array
                    items:
                      $ref: '#/components/schemas/runner'
              examples:
                default:
                  $ref: '#/components/examples/runner-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/downloads:
    get:
      summary: List runner applications for an organization
      description: >-
        Lists binaries for the runner application that you can download and run.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.  If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/list-runner-applications-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runners#list-runner-applications-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/runner-application'
              examples:
                default:
                  $ref: '#/components/examples/runner-application-items-airgap'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/registration-token:
    post:
      summary: Create a registration token for an organization
      description: >-
        Returns a token that you can pass to the `config` script. The token
        expires after one hour.


        For example, you can replace `TOKEN` in the following example with the
        registration token provided by this endpoint to configure your
        self-hosted runner:


        ```

        ./config.sh --url https://github.com/octo-org --token TOKEN

        ```


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - - - - actions
      operationId: actions/create-registration-token-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runners#create-a-registration-token-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication-token'
              examples:
                default:
                  $ref: '#/components/examples/authentication-token'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/remove-token:
    post:
      summary: Create a remove token for an organization
      description: >-
        Returns a token that you can pass to the `config` script to remove a
        self-hosted runner from an organization. The token expires after one
        hour.


        For example, you can replace `TOKEN` in the following example with the
        registration token provided by this endpoint to remove your self-hosted
        runner from an organization:


        ```

        ./config.sh remove --token TOKEN

        ```


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - - - - actions
      operationId: actions/create-remove-token-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runners#create-a-remove-token-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication-token'
              examples:
                default:
                  $ref: '#/components/examples/authentication-token-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/{runner_id}:
    get:
      summary: Get a self-hosted runner for an organization
      description: >-
        Gets a specific self-hosted runner configured in an organization.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/get-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runners#get-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runner'
              examples:
                default:
                  $ref: '#/components/examples/runner'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Delete a self-hosted runner from an organization
      description: >-
        Forces the removal of a self-hosted runner from an organization. You can
        use this endpoint to completely remove the runner when the machine you
        were using no longer exists.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - - - - actions
      operationId: actions/delete-self-hosted-runner-from-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runners#delete-a-self-hosted-runner-from-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/{runner_id}/labels:
    get:
      summary: List labels for a self-hosted runner for an organization
      description: >-
        Lists all labels for a self-hosted runner configured in an organization.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/list-labels-for-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runners#list-labels-for-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    post:
      summary: Add custom labels to a self-hosted runner for an organization
      description: >-
        Adds custom labels to a self-hosted runner configured in an
        organization.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      tags:
        - - - - actions
      operationId: actions/add-custom-labels-to-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runners#add-custom-labels-to-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - labels
              properties:
                labels:
                  type: array
                  minItems: 1
                  maxItems: 100
                  description: The names of the custom labels to add to the runner.
                  items:
                    type: string
            examples:
              default:
                value:
                  labels:
                    - gpu
                    - accelerated
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    put:
      summary: Set custom labels for a self-hosted runner for an organization
      description: >-
        Remove all previous custom labels and set the new custom labels for a
        specific

        self-hosted runner configured in an organization.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/set-custom-labels-for-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runners#set-custom-labels-for-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - labels
              properties:
                labels:
                  type: array
                  minItems: 0
                  maxItems: 100
                  description: >-
                    The names of the custom labels to set for the runner. You
                    can pass an empty array to remove all custom labels.
                  items:
                    type: string
            examples:
              default:
                value:
                  labels:
                    - gpu
                    - accelerated
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Remove all custom labels from a self-hosted runner for an organization
      description: >-
        Remove all custom labels from a self-hosted runner configured in an

        organization. Returns the remaining read-only labels from the runner.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/remove-all-custom-labels-from-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runners#remove-all-custom-labels-from-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels_readonly'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/{runner_id}/labels/{name}:
    delete:
      summary: Remove a custom label from a self-hosted runner for an organization
      description: >-
        Remove a custom label from a self-hosted runner configured

        in an organization. Returns the remaining labels from the runner.


        This endpoint returns a `404 Not Found` status if the custom label is
        not

        present on the runner.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/remove-custom-label-from-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/self-hosted-runners#remove-a-custom-label-from-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
        - $ref: '#/components/parameters/runner-label-name'
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/secrets:
    get:
      summary: List organization secrets
      description: >-
        Lists all secrets available in an organization without revealing their

        encrypted values.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/list-org-secrets
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#list-organization-secrets
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - secrets
                properties:
                  total_count:
                    type: integer
                  secrets:
                    type: array
                    items:
                      $ref: '#/components/schemas/organization-actions-secret'
              examples:
                default:
                  $ref: '#/components/examples/organization-actions-secret-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/secrets/public-key:
    get:
      summary: Get an organization public key
      description: >-
        Gets your public key, which you need to encrypt secrets. You need to

        encrypt a secret before you can create or update secrets.


        The authenticated user must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - - - - actions
      operationId: actions/get-org-public-key
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#get-an-organization-public-key
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions-public-key'
              examples:
                default:
                  $ref: '#/components/examples/actions-public-key'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/secrets/{secret_name}:
    get:
      summary: Get an organization secret
      description: >-
        Gets a single organization secret without revealing its encrypted value.


        The authenticated user must have collaborator access to a repository to
        create, update, or read secrets


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - - - - actions
      operationId: actions/get-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#get-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-actions-secret'
              examples:
                default:
                  $ref: '#/components/examples/organization-actions-secret'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Create or update an organization secret
      description: >-
        Creates or updates an organization secret with an encrypted value.
        Encrypt your secret using

        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages).
        For more information, see "[Encrypting secrets for the REST
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/encrypting-secrets-for-the-rest-api)."


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - - - - actions
      operationId: actions/create-or-update-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#create-or-update-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: >-
                    Value for your secret, encrypted with
                    [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get an organization
                    public
                    key](https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#get-an-organization-public-key)
                    endpoint.
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
                visibility:
                  type: string
                  description: >-
                    Which type of organization repositories have access to the
                    organization secret. `selected` means only the repositories
                    specified by `selected_repository_ids` can access the
                    secret.
                  enum:
                    - all
                    - private
                    - selected
                selected_repository_ids:
                  type: array
                  description: >-
                    An array of repository ids that can access the organization
                    secret. You can only provide a list of repository ids when
                    the `visibility` is set to `selected`. You can manage the
                    list of selected repositories using the [List selected
                    repositories for an organization
                    secret](https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#list-selected-repositories-for-an-organization-secret),
                    [Set selected repositories for an organization
                    secret](https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#set-selected-repositories-for-an-organization-secret),
                    and [Remove selected repository from an organization
                    secret](https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#remove-selected-repository-from-an-organization-secret)
                    endpoints.
                  items:
                    type: integer
              required:
                - visibility
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: '012345678912345678'
                  visibility: selected
                  selected_repository_ids:
                    - 1296269
                    - 1296280
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty-object'
              examples:
                default:
                  value: null
        '204':
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Delete an organization secret
      description: >-
        Deletes a secret in an organization using the secret name.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - - - - actions
      operationId: actions/delete-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#delete-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/secrets/{secret_name}/repositories:
    get:
      summary: List selected repositories for an organization secret
      description: >-
        Lists all repositories that have been selected when the `visibility`

        for repository access to a secret is set to `selected`.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/list-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#list-selected-repositories-for-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: integer
                  repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/public-repository-paginated'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Set selected repositories for an organization secret
      description: >-
        Replaces all repositories for an organization secret when the
        `visibility`

        for repository access is set to `selected`. The visibility is set when
        you [Create

        or update an organization
        secret](https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#create-or-update-an-organization-secret).


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/set-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#set-selected-repositories-for-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  type: array
                  description: >-
                    An array of repository ids that can access the organization
                    secret. You can only provide a list of repository ids when
                    the `visibility` is set to `selected`. You can add and
                    remove individual repositories using the [Add selected
                    repository to an organization
                    secret](https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#add-selected-repository-to-an-organization-secret)
                    and [Remove selected repository from an organization
                    secret](https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#remove-selected-repository-from-an-organization-secret)
                    endpoints.
                  items:
                    type: integer
              required:
                - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                    - 64780797
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}:
    put:
      summary: Add selected repository to an organization secret
      description: >-
        Adds a repository to an organization secret when the `visibility` for

        repository access is set to `selected`. For more information about
        setting the visibility, see [Create or

        update an organization
        secret](https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#create-or-update-an-organization-secret).


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - - - - actions
      operationId: actions/add-selected-repo-to-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#add-selected-repository-to-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
        - name: repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content when repository was added to the selected list
        '409':
          description: Conflict when visibility type is not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Remove selected repository from an organization secret
      description: >-
        Removes a repository from an organization secret when the `visibility`

        for repository access is set to `selected`. The visibility is set when
        you [Create

        or update an organization
        secret](https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#create-or-update-an-organization-secret).


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/remove-selected-repo-from-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#remove-selected-repository-from-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
        - name: repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Response when repository was removed from the selected list
        '409':
          description: Conflict when visibility type not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/variables:
    get:
      summary: List organization variables
      description: >-
        Lists all organization variables.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/list-org-variables
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/variables#list-organization-variables
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/variables-per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - variables
                properties:
                  total_count:
                    type: integer
                  variables:
                    type: array
                    items:
                      $ref: '#/components/schemas/organization-actions-variable'
              examples:
                default:
                  $ref: >-
                    #/components/examples/organization-actions-variables-paginated
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    post:
      summary: Create an organization variable
      description: >-
        Creates an organization variable that you can reference in a GitHub
        Actions workflow.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - - - - actions
      operationId: actions/create-org-variable
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/variables#create-an-organization-variable
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
                visibility:
                  type: string
                  description: >-
                    The type of repositories in the organization that can access
                    the variable. `selected` means only the repositories
                    specified by `selected_repository_ids` can access the
                    variable.
                  enum:
                    - all
                    - private
                    - selected
                selected_repository_ids:
                  type: array
                  description: >-
                    An array of repository ids that can access the organization
                    variable. You can only provide a list of repository ids when
                    the `visibility` is set to `selected`.
                  items:
                    type: integer
              required:
                - name
                - value
                - visibility
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
                  visibility: selected
                  selected_repository_ids:
                    - 1296269
                    - 1296280
      responses:
        '201':
          description: Response when creating a variable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty-object'
              examples:
                default:
                  value: null
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /orgs/{org}/actions/variables/{name}:
    get:
      summary: Get an organization variable
      description: >-
        Gets a specific variable in an organization.


        The authenticated user must have collaborator access to a repository to
        create, update, or read variables.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - - - - actions
      operationId: actions/get-org-variable
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/variables#get-an-organization-variable
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/variable-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-actions-variable'
              examples:
                default:
                  $ref: '#/components/examples/organization-actions-variable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    patch:
      summary: Update an organization variable
      description: >-
        Updates an organization variable that you can reference in a GitHub
        Actions workflow.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/update-org-variable
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/variables#update-an-organization-variable
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/variable-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
                visibility:
                  type: string
                  description: >-
                    The type of repositories in the organization that can access
                    the variable. `selected` means only the repositories
                    specified by `selected_repository_ids` can access the
                    variable.
                  enum:
                    - all
                    - private
                    - selected
                selected_repository_ids:
                  type: array
                  description: >-
                    An array of repository ids that can access the organization
                    variable. You can only provide a list of repository ids when
                    the `visibility` is set to `selected`.
                  items:
                    type: integer
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
                  visibility: selected
                  selected_repository_ids:
                    - 1296269
                    - 1296280
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    delete:
      summary: Delete an organization variable
      description: >-
        Deletes an organization variable using the variable name.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - - - - actions
      operationId: actions/delete-org-variable
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/variables#delete-an-organization-variable
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/variable-name'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /orgs/{org}/actions/variables/{name}/repositories:
    get:
      summary: List selected repositories for an organization variable
      description: >-
        Lists all repositories that can access an organization variable

        that is available to selected repositories.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/list-selected-repos-for-org-variable
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/variables#list-selected-repositories-for-an-organization-variable
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/variable-name'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: integer
                  repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/public-repository-paginated'
        '409':
          description: >-
            Response when the visibility of the variable is not set to
            `selected`
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    put:
      summary: Set selected repositories for an organization variable
      description: >-
        Replaces all repositories for an organization variable that is available

        to selected repositories. Organization variables that are available to
        selected

        repositories have their `visibility` field set to `selected`.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/set-selected-repos-for-org-variable
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/variables#set-selected-repositories-for-an-organization-variable
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/variable-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  type: array
                  description: >-
                    The IDs of the repositories that can access the organization
                    variable.
                  items:
                    type: integer
              required:
                - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                    - 64780797
      responses:
        '204':
          description: Response
        '409':
          description: >-
            Response when the visibility of the variable is not set to
            `selected`
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /orgs/{org}/actions/variables/{name}/repositories/{repository_id}:
    put:
      summary: Add selected repository to an organization variable
      description: >-
        Adds a repository to an organization variable that is available to
        selected repositories.

        Organization variables that are available to selected repositories have
        their `visibility` field set to `selected`.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - - - - actions
      operationId: actions/add-selected-repo-to-org-variable
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/variables#add-selected-repository-to-an-organization-variable
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/variable-name'
        - name: repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Response
        '409':
          description: >-
            Response when the visibility of the variable is not set to
            `selected`
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    delete:
      summary: Remove selected repository from an organization variable
      description: >-
        Removes a repository from an organization variable that is

        available to selected repositories. Organization variables that are
        available to

        selected repositories have their `visibility` field set to `selected`.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - - - - actions
      operationId: actions/remove-selected-repo-from-org-variable
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/variables#remove-selected-repository-from-an-organization-variable
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/variable-name'
        - name: repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Response
        '409':
          description: >-
            Response when the visibility of the variable is not set to
            `selected`
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /orgs/{org}/announcement:
    get:
      summary: Get announcement banner for organization
      description: >-
        Gets the announcement banner currently set for the organization. Only
        returns the announcement banner set at the

        organization level. Organization members may also see an
        enterprise-level announcement banner. To get an

        announcement banner displayed at the enterprise level, use the
        enterprise-level endpoint.
      tags:
        - - - - orgs
      operationId: announcement-banners/get-announcement-banner-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/announcement-banners/organizations#get-announcement-banner-for-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/announcement-banner'
              examples:
                default:
                  $ref: '#/components/examples/announcement'
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: announcement-banners
        subcategory: organizations
    patch:
      summary: Set announcement banner for organization
      description: Sets the announcement banner to display for the organization.
      tags:
        - - - - orgs
      operationId: announcement-banners/set-announcement-banner-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/announcement-banners/organizations#set-announcement-banner-for-organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/announcement'
            examples:
              default:
                $ref: '#/components/examples/announcement'
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/announcement-banner'
              examples:
                default:
                  $ref: '#/components/examples/announcement'
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: announcement-banners
        subcategory: organizations
    delete:
      summary: Remove announcement banner from organization
      description: Removes the announcement banner currently set for the organization.
      tags:
        - - - - orgs
      operationId: announcement-banners/remove-announcement-banner-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/announcement-banners/organizations#remove-announcement-banner-from-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: announcement-banners
        subcategory: organizations
  /orgs/{org}/audit-log:
    get:
      summary: Get the audit log for an organization
      description: >-
        Gets the audit log for an organization. For more information, see
        "[Reviewing the audit log for your
        organization](https://docs.github.com/enterprise-server@3.9/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization)."


        By default, the response includes up to 30 events from the past three
        months. Use the `phrase` parameter to filter results and retrieve older
        events. For example, use the `phrase` parameter with the `created`
        qualifier to filter events based on when the events occurred. For more
        information, see "[Reviewing the audit log for your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization#searching-the-audit-log)."


        Use pagination to retrieve fewer or more than 30 events. For more
        information, see "[Using pagination in the REST
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/using-pagination-in-the-rest-api)."


        The authenticated user must be an organization owner to use this
        endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `read:audit_log` scope to use this endpoint.
      operationId: orgs/get-audit-log
      tags:
        - - - - orgs
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#get-the-audit-log-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/audit-log-phrase'
        - $ref: '#/components/parameters/audit-log-include'
        - $ref: '#/components/parameters/audit-log-after'
        - $ref: '#/components/parameters/audit-log-before'
        - $ref: '#/components/parameters/audit-log-order'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/audit-log-event'
              examples:
                default:
                  $ref: '#/components/examples/audit-log'
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  /orgs/{org}/code-scanning/alerts:
    get:
      summary: List code scanning alerts for an organization
      description: >-
        Lists code scanning alerts for the default branch for all eligible
        repositories in an organization. Eligible repositories are repositories
        that are owned by organizations that you own or for which you are a
        security manager. For more information, see "[Managing security managers
        in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


        The authenticated user must be an owner or security manager for the
        organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `security_events` or `repo`s cope to use this endpoint with private or
        public repositories, or the `public_repo` scope to use this endpoint
        with only public repositories.
      tags:
        - - - - code-scanning
      operationId: code-scanning/list-alerts-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/code-scanning/code-scanning#list-code-scanning-alerts-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/tool-name'
        - $ref: '#/components/parameters/tool-guid'
        - $ref: '#/components/parameters/pagination-before'
        - $ref: '#/components/parameters/pagination-after'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/direction'
        - name: state
          description: >-
            If specified, only code scanning alerts with this state will be
            returned.
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/code-scanning-alert-state-query'
        - name: sort
          description: The property by which to sort the results.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
            default: created
        - name: severity
          description: >-
            If specified, only code scanning alerts with this severity will be
            returned.
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/code-scanning-alert-severity'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code-scanning-organization-alert-items'
              examples:
                default:
                  $ref: '#/components/examples/code-scanning-organization-alert-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: code-scanning
        subcategory: code-scanning
  /orgs/{org}/custom-repository-roles:
    get:
      summary: List custom repository roles in an organization
      description: >-
        List the custom repository roles available in this organization. For
        more information on custom repository roles, see "[About custom
        repository
        roles](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles)."


        The authenticated user must be an administrator of the organization or
        of a repository of the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` or `repo` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/list-custom-repo-roles
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/custom-roles#list-custom-repository-roles-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response - list of custom role names
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    description: The number of custom roles in this organization
                    example: 3
                    type: integer
                  custom_roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/organization-custom-repository-role'
              examples:
                default:
                  $ref: >-
                    #/components/examples/organization-custom-repository-role-list-example
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-roles
    post:
      summary: Create a custom repository role
      description: >-
        Creates a custom repository role that can be used by all repositories
        owned by the organization. For more information on custom repository
        roles, see "[About custom repository
        roles](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles)."


        The authenticated user must be an administrator for the organization to
        use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/create-custom-repo-role
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/custom-roles#create-a-custom-repository-role
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/organization-custom-repository-role-create-schema
            examples:
              default:
                value:
                  name: Labeler
                  description: A role for issue and pull request labelers
                  base_role: read
                  permissions:
                    - add_label
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-custom-repository-role'
              examples:
                default:
                  $ref: >-
                    #/components/examples/organization-custom-repository-role-example
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-roles
  /orgs/{org}/custom-repository-roles/{role_id}:
    get:
      summary: Get a custom repository role
      description: >-
        Gets a custom repository role that is available to all repositories
        owned by the organization. For more information on custom repository
        roles, see "[About custom repository
        roles](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles)."


        The authenticated user must be an administrator of the organization or
        of a repository of the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` or `repo` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/get-custom-repo-role
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/custom-roles#get-a-custom-repository-role
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/role-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-custom-repository-role'
              examples:
                default:
                  $ref: >-
                    #/components/examples/organization-custom-repository-role-example
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-roles
    patch:
      summary: Update a custom repository role
      description: >-
        Updates a custom repository role that can be used by all repositories
        owned by the organization. For more information about custom repository
        roles, see "[About custom repository
        roles](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles)."


        The authenticated user must be an administrator for the organization to
        use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/update-custom-repo-role
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/custom-roles#update-a-custom-repository-role
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/role-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/organization-custom-repository-role-update-schema
            examples:
              default:
                value:
                  name: Labeler
                  description: A role for issue and PR labelers
                  base_role: read
                  permissions:
                    - add_label
                    - remove_label
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-custom-repository-role'
              examples:
                default:
                  $ref: >-
                    #/components/examples/organization-custom-repository-role-example
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-roles
    delete:
      summary: Delete a custom repository role
      description: >-
        Deletes a custom role from an organization. Once the custom role has
        been deleted, any

        user, team, or invitation with the deleted custom role will be
        reassigned the inherited role. For more information about custom
        repository roles, see "[About custom repository
        roles](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles)."


        The authenticated user must be an administrator for the organization to
        use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/delete-custom-repo-role
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/custom-roles#delete-a-custom-repository-role
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/role-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-roles
  /orgs/{org}/dependabot/alerts:
    get:
      summary: List Dependabot alerts for an organization
      description: >-
        Lists Dependabot alerts for an organization.


        The authenticated user must be an owner or security manager for the
        organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `security_events` scope to use this endpoint. If this endpoint is only
        used with public repositories, the token can use the `public_repo` scope
        instead.
      tags:
        - - - - dependabot
      operationId: dependabot/list-alerts-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts#list-dependabot-alerts-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/dependabot-alert-comma-separated-states'
        - $ref: '#/components/parameters/dependabot-alert-comma-separated-severities'
        - $ref: '#/components/parameters/dependabot-alert-comma-separated-ecosystems'
        - $ref: '#/components/parameters/dependabot-alert-comma-separated-packages'
        - $ref: '#/components/parameters/dependabot-alert-scope'
        - $ref: '#/components/parameters/dependabot-alert-sort'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/pagination-before'
        - $ref: '#/components/parameters/pagination-after'
        - $ref: '#/components/parameters/pagination-first'
        - $ref: '#/components/parameters/pagination-last'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dependabot-alert-with-repository'
              examples:
                default:
                  $ref: '#/components/examples/dependabot-alerts-for-organization'
        '304':
          $ref: '#/components/responses/not_modified'
        '400':
          $ref: '#/components/responses/bad_request'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: alerts
  /orgs/{org}/dependabot/secrets:
    get:
      summary: List organization secrets
      description: >-
        Lists all secrets available in an organization without revealing their

        encrypted values.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - dependabot
      operationId: dependabot/list-org-secrets
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#list-organization-secrets
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - secrets
                properties:
                  total_count:
                    type: integer
                  secrets:
                    type: array
                    items:
                      $ref: '#/components/schemas/organization-dependabot-secret'
              examples:
                default:
                  $ref: >-
                    #/components/examples/organization-dependabot-secret-paginated
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  /orgs/{org}/dependabot/secrets/public-key:
    get:
      summary: Get an organization public key
      description: >-
        Gets your public key, which you need to encrypt secrets. You need to

        encrypt a secret before you can create or update secrets.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - dependabot
      operationId: dependabot/get-org-public-key
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#get-an-organization-public-key
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dependabot-public-key'
              examples:
                default:
                  $ref: '#/components/examples/dependabot-public-key'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  /orgs/{org}/dependabot/secrets/{secret_name}:
    get:
      summary: Get an organization secret
      description: >-
        Gets a single organization secret without revealing its encrypted value.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - dependabot
      operationId: dependabot/get-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#get-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-dependabot-secret'
              examples:
                default:
                  $ref: '#/components/examples/organization-dependabot-secret'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
    put:
      summary: Create or update an organization secret
      description: >-
        Creates or updates an organization secret with an encrypted value.
        Encrypt your secret using

        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages).
        For more information, see "[Encrypting secrets for the REST
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/encrypting-secrets-for-the-rest-api)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - dependabot
      operationId: dependabot/create-or-update-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#create-or-update-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: >-
                    Value for your secret, encrypted with
                    [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get an organization
                    public
                    key](https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#get-an-organization-public-key)
                    endpoint.
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
                visibility:
                  type: string
                  description: >-
                    Which type of organization repositories have access to the
                    organization secret. `selected` means only the repositories
                    specified by `selected_repository_ids` can access the
                    secret.
                  enum:
                    - all
                    - private
                    - selected
                selected_repository_ids:
                  type: array
                  description: >-
                    An array of repository ids that can access the organization
                    secret. You can only provide a list of repository ids when
                    the `visibility` is set to `selected`. You can manage the
                    list of selected repositories using the [List selected
                    repositories for an organization
                    secret](https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#list-selected-repositories-for-an-organization-secret),
                    [Set selected repositories for an organization
                    secret](https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#set-selected-repositories-for-an-organization-secret),
                    and [Remove selected repository from an organization
                    secret](https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#remove-selected-repository-from-an-organization-secret)
                    endpoints.
                  items:
                    type: string
              required:
                - visibility
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: '012345678912345678'
                  visibility: selected
                  selected_repository_ids:
                    - '1296269'
                    - '1296280'
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty-object'
              examples:
                default:
                  value: null
        '204':
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
    delete:
      summary: Delete an organization secret
      description: >-
        Deletes a secret in an organization using the secret name.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - dependabot
      operationId: dependabot/delete-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#delete-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  /orgs/{org}/dependabot/secrets/{secret_name}/repositories:
    get:
      summary: List selected repositories for an organization secret
      description: >-
        Lists all repositories that have been selected when the `visibility`

        for repository access to a secret is set to `selected`.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - dependabot
      operationId: dependabot/list-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#list-selected-repositories-for-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: integer
                  repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/public-repository-paginated'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
    put:
      summary: Set selected repositories for an organization secret
      description: >-
        Replaces all repositories for an organization secret when the
        `visibility`

        for repository access is set to `selected`. The visibility is set when
        you [Create

        or update an organization
        secret](https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#create-or-update-an-organization-secret).


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - dependabot
      operationId: dependabot/set-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#set-selected-repositories-for-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  type: array
                  description: >-
                    An array of repository ids that can access the organization
                    secret. You can only provide a list of repository ids when
                    the `visibility` is set to `selected`. You can add and
                    remove individual repositories using the [Set selected
                    repositories for an organization
                    secret](https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#set-selected-repositories-for-an-organization-secret)
                    and [Remove selected repository from an organization
                    secret](https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#remove-selected-repository-from-an-organization-secret)
                    endpoints.
                  items:
                    type: integer
              required:
                - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                    - 64780797
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}:
    put:
      summary: Add selected repository to an organization secret
      description: >-
        Adds a repository to an organization secret when the `visibility` for

        repository access is set to `selected`. The visibility is set when you
        [Create or

        update an organization
        secret](https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#create-or-update-an-organization-secret).


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - dependabot
      operationId: dependabot/add-selected-repo-to-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#add-selected-repository-to-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
        - name: repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content when repository was added to the selected list
        '409':
          description: Conflict when visibility type is not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
    delete:
      summary: Remove selected repository from an organization secret
      description: >-
        Removes a repository from an organization secret when the `visibility`

        for repository access is set to `selected`. The visibility is set when
        you [Create

        or update an organization
        secret](https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#create-or-update-an-organization-secret).


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - dependabot
      operationId: dependabot/remove-selected-repo-from-org-secret
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/dependabot/secrets#remove-selected-repository-from-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
        - name: repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Response when repository was removed from the selected list
        '409':
          description: Conflict when visibility type not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  /orgs/{org}/docker/conflicts:
    get:
      summary: >-
        Get list of conflicting packages during Docker migration for
        organization
      description: >-
        Lists all packages that are in a specific organization, are readable by
        the requesting user, and that encountered a conflict during a Docker
        migration.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint.
      tags:
        - - - - packages
      operationId: packages/list-docker-migration-conflicting-packages-for-organization
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#get-list-of-conflicting-packages-during-docker-migration-for-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/packages-for-org'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /orgs/{org}/events:
    get:
      summary: List public organization events
      description: ''
      tags:
        - - - - activity
      operationId: activity/list-public-org-events
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/events#list-public-organization-events
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/event'
              examples:
                200-response:
                  $ref: '#/components/examples/public-org-events-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /orgs/{org}/external-group/{group_id}:
    get:
      summary: Get an external group
      description: >-
        Displays information about the specific group's usage.  Provides a list
        of the group's external members as well as a list of teams that this
        group is connected to.


        You can manage team membership with your identity provider using
        Enterprise Managed Users for GitHub Enterprise Cloud. For more
        information, see "[GitHub's
        products](https://docs.github.com/enterprise-server@3.9/github/getting-started-with-github/githubs-products)"
        in the GitHub Help documentation.
      tags:
        - - - - teams
      operationId: teams/external-idp-group-info-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/external-groups#get-an-external-group
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/group-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/external-group'
              examples:
                default:
                  $ref: '#/components/examples/external-group'
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: teams
        subcategory: external-groups
  /orgs/{org}/external-groups:
    get:
      summary: List external groups in an organization
      description: >-
        Lists external groups available in an organization. You can query the
        groups using the `display_name` parameter, only groups with a
        `group_name` containing the text provided in the `display_name`
        parameter will be returned.  You can also limit your page results using
        the `per_page` parameter. GitHub Enterprise Server generates a
        url-encoded `page` token using a cursor value for where the next page
        begins. For more information on cursor pagination, see "[Offset and
        Cursor Pagination
        explained](https://dev.to/jackmarchant/offset-and-cursor-pagination-explained-b89)."


        You can manage team membership with your identity provider using
        Enterprise Managed Users for GitHub Enterprise Cloud. For more
        information, see "[GitHub's
        products](https://docs.github.com/enterprise-server@3.9/github/getting-started-with-github/githubs-products)"
        in the GitHub Help documentation.
      tags:
        - - - - teams
      operationId: teams/list-external-idp-groups-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/external-groups#list-external-groups-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - name: page
          description: Page token
          in: query
          schema:
            type: integer
        - name: display_name
          description: Limits the list to groups containing the text in the group name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/external-groups'
              examples:
                default:
                  $ref: '#/components/examples/external-groups'
          headers:
            Link:
              example: >-
                <https://api.github.com/resource?per_page=2&page=url-encoded-next-page-token>;
                rel="next"
              schema:
                type: string
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: teams
        subcategory: external-groups
  /orgs/{org}/hooks:
    get:
      summary: List organization webhooks
      description: ''
      tags:
        - - - - orgs
      operationId: orgs/list-webhooks
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/webhooks#list-organization-webhooks
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/org-hook'
              examples:
                default:
                  $ref: '#/components/examples/org-hook-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
    post:
      summary: Create an organization webhook
      description: 'Here''s how you can create a hook that posts payloads in JSON format:'
      tags:
        - - - - orgs
      operationId: orgs/create-webhook
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/webhooks#create-an-organization-webhook
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Must be passed as "web".
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    url:
                      $ref: '#/components/schemas/webhook-config-url'
                    content_type:
                      $ref: '#/components/schemas/webhook-config-content-type'
                    secret:
                      $ref: '#/components/schemas/webhook-config-secret'
                    insecure_ssl:
                      $ref: '#/components/schemas/webhook-config-insecure-ssl'
                    username:
                      type: string
                      example: '"kdaigle"'
                    password:
                      type: string
                      example: '"password"'
                  required:
                    - url
                events:
                  type: array
                  description: >-
                    Determines what
                    [events](https://docs.github.com/enterprise-server@3.9/webhooks/event-payloads)
                    the hook is triggered for. Set to `["*"]` to receive all
                    possible events.
                  default:
                    - push
                  items:
                    type: string
                active:
                  type: boolean
                  description: >-
                    Determines if notifications are sent when the webhook is
                    triggered. Set to `true` to send notifications.
                  default: true
              required:
                - name
                - config
            examples:
              default:
                value:
                  name: web
                  active: true
                  events:
                    - push
                    - pull_request
                  config:
                    url: http://example.com/webhook
                    content_type: json
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-hook'
              examples:
                default:
                  $ref: '#/components/examples/org-hook'
          headers:
            Location:
              example: https://api.github.com/orgs/octocat/hooks/1
              schema:
                type: string
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/hooks/{hook_id}:
    get:
      summary: Get an organization webhook
      description: >-
        Returns a webhook configured in an organization. To get only the webhook
        `config` properties, see "[Get a webhook configuration for an
        organization](/rest/orgs/webhooks#get-a-webhook-configuration-for-an-organization)."
      tags:
        - - - - orgs
      operationId: orgs/get-webhook
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/webhooks#get-an-organization-webhook
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/hook-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-hook'
              examples:
                default:
                  $ref: '#/components/examples/org-hook'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
    patch:
      summary: Update an organization webhook
      description: >-
        Updates a webhook configured in an organization. When you update a
        webhook, the `secret` will be overwritten. If you previously had a
        `secret` set, you must provide the same `secret` or set a new `secret`
        or the secret will be removed. If you are only updating individual
        webhook `config` properties, use "[Update a webhook configuration for an
        organization](/rest/orgs/webhooks#update-a-webhook-configuration-for-an-organization)."
      tags:
        - - - - orgs
      operationId: orgs/update-webhook
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/webhooks#update-an-organization-webhook
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/hook-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    url:
                      $ref: '#/components/schemas/webhook-config-url'
                    content_type:
                      $ref: '#/components/schemas/webhook-config-content-type'
                    secret:
                      $ref: '#/components/schemas/webhook-config-secret'
                    insecure_ssl:
                      $ref: '#/components/schemas/webhook-config-insecure-ssl'
                  required:
                    - url
                events:
                  type: array
                  description: >-
                    Determines what
                    [events](https://docs.github.com/enterprise-server@3.9/webhooks/event-payloads)
                    the hook is triggered for.
                  default:
                    - push
                  items:
                    type: string
                active:
                  type: boolean
                  description: >-
                    Determines if notifications are sent when the webhook is
                    triggered. Set to `true` to send notifications.
                  default: true
                name:
                  type: string
                  example: '"web"'
            examples:
              default:
                value:
                  active: true
                  events:
                    - pull_request
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-hook'
              examples:
                default:
                  $ref: '#/components/examples/org-hook-2'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
    delete:
      summary: Delete an organization webhook
      description: ''
      tags:
        - - - - orgs
      operationId: orgs/delete-webhook
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/webhooks#delete-an-organization-webhook
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/hook-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/hooks/{hook_id}/config:
    get:
      summary: Get a webhook configuration for an organization
      description: >-
        Returns the webhook configuration for an organization. To get more
        information about the webhook, including the `active` state and
        `events`, use "[Get an organization webhook
        ](/rest/orgs/webhooks#get-an-organization-webhook)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org_hook` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/get-webhook-config-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/webhooks#get-a-webhook-configuration-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/hook-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-config'
              examples:
                default:
                  $ref: '#/components/examples/webhook-config'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
    patch:
      summary: Update a webhook configuration for an organization
      description: >-
        Updates the webhook configuration for an organization. To update more
        information about the webhook, including the `active` state and
        `events`, use "[Update an organization webhook
        ](/rest/orgs/webhooks#update-an-organization-webhook)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org_hook` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/update-webhook-config-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/webhooks#update-a-webhook-configuration-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/hook-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  $ref: '#/components/schemas/webhook-config-url'
                content_type:
                  $ref: '#/components/schemas/webhook-config-content-type'
                secret:
                  $ref: '#/components/schemas/webhook-config-secret'
                insecure_ssl:
                  $ref: '#/components/schemas/webhook-config-insecure-ssl'
            examples:
              default:
                summary: Update an existing webhook
                value:
                  url: http://example.com/webhook
                  content_type: json
                  insecure_ssl: '0'
                  secret: '********'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-config'
              examples:
                default:
                  $ref: '#/components/examples/webhook-config'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/hooks/{hook_id}/deliveries:
    get:
      summary: List deliveries for an organization webhook
      description: >-
        Returns a list of webhook deliveries for a webhook configured in an
        organization.
      tags:
        - - - - orgs
      operationId: orgs/list-webhook-deliveries
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/webhooks#list-deliveries-for-an-organization-webhook
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/hook-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/cursor'
        - name: redelivery
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/hook-delivery-item'
              examples:
                default:
                  $ref: '#/components/examples/hook-delivery-items'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}:
    get:
      summary: Get a webhook delivery for an organization webhook
      description: Returns a delivery for a webhook configured in an organization.
      tags:
        - - - - orgs
      operationId: orgs/get-webhook-delivery
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/webhooks#get-a-webhook-delivery-for-an-organization-webhook
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/hook-id'
        - $ref: '#/components/parameters/delivery-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook-delivery'
              examples:
                default:
                  $ref: '#/components/examples/hook-delivery'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts:
    post:
      summary: Redeliver a delivery for an organization webhook
      description: Redeliver a delivery for a webhook configured in an organization.
      tags:
        - - - - orgs
      operationId: orgs/redeliver-webhook-delivery
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/webhooks#redeliver-a-delivery-for-an-organization-webhook
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/hook-id'
        - $ref: '#/components/parameters/delivery-id'
      responses:
        '202':
          $ref: '#/components/responses/accepted'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/hooks/{hook_id}/pings:
    post:
      summary: Ping an organization webhook
      description: >-
        This will trigger a [ping
        event](https://docs.github.com/enterprise-server@3.9/webhooks/#ping-event)
        to be sent to the hook.
      tags:
        - - - - orgs
      operationId: orgs/ping-webhook
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/webhooks#ping-an-organization-webhook
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/hook-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/installation:
    get:
      summary: Get an organization installation for the authenticated app
      description: >-
        Enables an authenticated GitHub App to find the organization's
        installation information.


        You must use a
        [JWT](https://docs.github.com/enterprise-server@3.9/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      tags:
        - - - - apps
      operationId: apps/get-org-installation
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/apps/apps#get-an-organization-installation-for-the-authenticated-app
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installation'
              examples:
                default:
                  $ref: '#/components/examples/installation'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: apps
  /orgs/{org}/installations:
    get:
      summary: List app installations for an organization
      description: >-
        Lists all GitHub Apps in an organization. The installation count
        includes

        all GitHub Apps installed on repositories in the organization.


        The authenticated user must be an organization owner to use this
        endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:read` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/list-app-installations
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#list-app-installations-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - installations
                properties:
                  total_count:
                    type: integer
                  installations:
                    type: array
                    items:
                      $ref: '#/components/schemas/installation'
              examples:
                default:
                  $ref: '#/components/examples/installation-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  /orgs/{org}/issues:
    get:
      summary: List organization issues assigned to the authenticated user
      description: >-
        List issues in an organization assigned to the authenticated user.


        **Note**: GitHub's REST API considers every pull request an issue, but
        not every issue is a pull request. For this

        reason, "Issues" endpoints may return both issues and pull requests in
        the response. You can identify pull requests by

        the `pull_request` key. Be aware that the `id` of a pull request
        returned from "Issues" endpoints will be an _issue id_. To find out the
        pull

        request id, use the "[List pull
        requests](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls#list-pull-requests)"
        endpoint.


        This endpoint supports the following custom media types. For more
        information, see "[Media
        types](https://docs.github.com/enterprise-server@3.9/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.raw+json`**: Returns the raw markdown body.
        Response will include `body`. This is the default if you do not pass any
        specific media type.

        - **`application/vnd.github.text+json`**: Returns a text only
        representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github.html+json`**: Returns HTML rendered from the
        body's markdown. Response will include `body_html`.

        - **`application/vnd.github.full+json`**: Returns raw, text, and HTML
        representations. Response will include `body`, `body_text`, and
        `body_html`.
      tags:
        - - - - issues
      operationId: issues/list-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/issues/issues#list-organization-issues-assigned-to-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/org'
        - name: filter
          description: >-
            Indicates which sorts of issues to return. `assigned` means issues
            assigned to you. `created` means issues created by you. `mentioned`
            means issues mentioning you. `subscribed` means issues you're
            subscribed to updates for. `all` or `repos` means all issues you can
            see, regardless of participation or creation.
          in: query
          required: false
          schema:
            type: string
            enum:
              - assigned
              - created
              - mentioned
              - subscribed
              - repos
              - all
            default: assigned
        - name: state
          description: Indicates the state of the issues to return.
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
              - all
            default: open
        - $ref: '#/components/parameters/labels'
        - name: sort
          description: What to sort results by.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - comments
            default: created
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issue'
              examples:
                default:
                  $ref: '#/components/examples/issue-with-repo-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: issues
        subcategory: issues
  /orgs/{org}/members:
    get:
      summary: List organization members
      description: >-
        List all users who are members of an organization. If the authenticated
        user is also a member of this organization then both concealed and
        public members will be returned.
      tags:
        - - - - orgs
      operationId: orgs/list-members
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#list-organization-members
      parameters:
        - $ref: '#/components/parameters/org'
        - name: filter
          description: >-
            Filter members returned in the list. `2fa_disabled` means that only
            members without [two-factor
            authentication](https://github.com/blog/1614-two-factor-authentication)
            enabled will be returned. This options is only available for
            organization owners.
          in: query
          required: false
          schema:
            type: string
            enum:
              - 2fa_disabled
              - all
            default: all
        - name: role
          description: Filter members returned by their role.
          in: query
          required: false
          schema:
            type: string
            enum:
              - all
              - admin
              - member
            default: all
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /orgs/{org}/members/{username}:
    get:
      summary: Check organization membership for a user
      description: Check if a user is, publicly or privately, a member of the organization.
      tags:
        - - - - orgs
      operationId: orgs/check-membership-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#check-organization-membership-for-a-user
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response if requester is an organization member and user is a member
        '302':
          description: Response if requester is not an organization member
          headers:
            Location:
              example: https://api.github.com/orgs/github/public_members/pezra
              schema:
                type: string
        '404':
          description: >-
            Not Found if requester is an organization member and user is not a
            member
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    delete:
      summary: Remove an organization member
      description: >-
        Removing a user from this list will remove them from all teams and they
        will no longer have any access to the organization's repositories.
      tags:
        - - - - orgs
      operationId: orgs/remove-member
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#remove-an-organization-member
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /orgs/{org}/memberships/{username}:
    get:
      summary: Get organization membership for a user
      description: >-
        In order to get a user's membership with an organization, the
        authenticated user must be an organization member. The `state` parameter
        in the response can be used to identify the user's membership status.
      tags:
        - - - - orgs
      operationId: orgs/get-membership-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#get-organization-membership-for-a-user
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-membership'
              examples:
                response-if-user-has-an-active-admin-membership-with-organization:
                  $ref: >-
                    #/components/examples/org-membership-response-if-user-has-an-active-admin-membership-with-organization
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    put:
      summary: Set organization membership for a user
      description: >-
        Only authenticated organization owners can add a member to the
        organization or update the member's role.


        *   If the authenticated user is _adding_ a member to the organization,
        the invited user will receive an email inviting them to the
        organization. The user's [membership
        status](https://docs.github.com/enterprise-server@3.9/rest/orgs/members#get-organization-membership-for-a-user)
        will be `pending` until they accept the invitation.
            
        *   Authenticated users can _update_ a user's membership by passing the
        `role` parameter. If the authenticated user changes a member's role to
        `admin`, the affected user will receive an email notifying them that
        they've been made an organization owner. If the authenticated user
        changes an owner's role to `member`, no email will be sent.


        **Rate limits**


        To prevent abuse, the authenticated user is limited to 50 organization
        invitations per 24 hour period. If the organization is more than one
        month old or on a paid plan, the limit is 500 invitations per 24 hour
        period.
      tags:
        - - - - orgs
      operationId: orgs/set-membership-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#set-organization-membership-for-a-user
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/username'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: >-
                    The role to give the user in the organization. Can be one
                    of:  
                     * `admin` - The user will become an owner of the organization.  
                     * `member` - The user will become a non-owner member of the organization.
                  enum:
                    - admin
                    - member
                  default: member
            examples:
              default:
                summary: Set an organization membership role for a user
                value:
                  role: member
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-membership'
              examples:
                response-if-user-already-had-membership-with-organization:
                  $ref: >-
                    #/components/examples/org-membership-response-if-user-has-an-active-admin-membership-with-organization
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    delete:
      summary: Remove organization membership for a user
      description: >-
        In order to remove a user's membership with an organization, the
        authenticated user must be an organization owner.


        If the specified user is an active member of the organization, this will
        remove them from the organization. If the specified user has been
        invited to the organization, this will cancel their invitation. The
        specified user will receive an email notification in both cases.
      tags:
        - - - - orgs
      operationId: orgs/remove-membership-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#remove-organization-membership-for-a-user
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /orgs/{org}/migrations:
    get:
      summary: List organization migrations
      description: >-
        Lists the most recent migrations, including both exports (which can be
        started through the REST API) and imports (which cannot be started using
        the REST API).


        A list of `repositories` is only returned for export migrations.
      tags:
        - - - - migrations
      operationId: migrations/list-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/migrations/orgs#list-organization-migrations
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
        - name: exclude
          description: Exclude attributes from the API response to improve performance
          in: query
          schema:
            type: array
            items:
              description: Allowed values that can be passed to the exclude param.
              enum:
                - repositories
              example: repositories
              type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/migration'
              examples:
                default:
                  $ref: '#/components/examples/migration-with-short-org-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
    post:
      summary: Start an organization migration
      description: >-
        Initiates the generation of a migration archive.


        Before you can use this endpoint, you must configure a blob storage
        provider in the "Migrations" section in the Management Console. For more
        details, see "[Migrating repositories from GitHub Enterprise Server to
        GitHub Enterprise
        Cloud](https://docs.github.com/enterprise-server@3.9/migrations/using-github-enterprise-importer/migrating-repositories-with-github-enterprise-importer/migrating-repositories-from-github-enterprise-server-to-github-enterprise-cloud#step-4-set-up-blob-storage)."
      tags:
        - - - - migrations
      operationId: migrations/start-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/migrations/orgs#start-an-organization-migration
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repositories:
                  type: array
                  description: >-
                    A list of arrays indicating which repositories should be
                    migrated.
                  items:
                    type: string
                lock_repositories:
                  type: boolean
                  example: true
                  description: >-
                    Indicates whether repositories should be locked (to prevent
                    manipulation) while migrating data.
                  default: false
                exclude_metadata:
                  type: boolean
                  description: >-
                    Indicates whether metadata should be excluded and only git
                    source should be included for the migration.
                  default: false
                exclude_git_data:
                  type: boolean
                  description: >-
                    Indicates whether the repository git data should be excluded
                    from the migration.
                  default: false
                exclude_attachments:
                  type: boolean
                  example: true
                  description: >-
                    Indicates whether attachments should be excluded from the
                    migration (to reduce migration archive file size).
                  default: false
                exclude_releases:
                  type: boolean
                  example: true
                  description: >-
                    Indicates whether releases should be excluded from the
                    migration (to reduce migration archive file size).
                  default: false
                exclude_owner_projects:
                  type: boolean
                  example: true
                  description: >-
                    Indicates whether projects owned by the organization or
                    users should be excluded. from the migration.
                  default: false
                org_metadata_only:
                  type: boolean
                  example: true
                  description: >-
                    Indicates whether this should only include organization
                    metadata (repositories array should be empty and will ignore
                    other flags).
                  default: false
                exclude:
                  type: array
                  description: >-
                    Exclude related items from being returned in the response in
                    order to improve performance of the request.
                  items:
                    type: string
                    enum:
                      - repositories
              required:
                - repositories
            examples:
              default:
                value:
                  repositories:
                    - github/Hello-World
                  lock_repositories: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/migration'
              examples:
                default:
                  $ref: '#/components/examples/migration-with-short-org-2'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
  /orgs/{org}/migrations/{migration_id}:
    get:
      summary: Get an organization migration status
      description: |-
        Fetches the status of a migration.

        The `state` of a migration can be one of the following values:

        *   `pending`, which means the migration hasn't started yet.
        *   `exporting`, which means the migration is in progress.
        *   `exported`, which means the migration finished successfully.
        *   `failed`, which means the migration failed.
      tags:
        - - - - migrations
      operationId: migrations/get-status-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/migrations/orgs#get-an-organization-migration-status
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/migration-id'
        - name: exclude
          description: Exclude attributes from the API response to improve performance
          in: query
          schema:
            type: array
            items:
              description: Allowed values that can be passed to the exclude param.
              enum:
                - repositories
              example: repositories
              type: string
      responses:
        '200':
          description: |-
            *   `pending`, which means the migration hasn't started yet.
            *   `exporting`, which means the migration is in progress.
            *   `exported`, which means the migration finished successfully.
            *   `failed`, which means the migration failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/migration'
              examples:
                default:
                  $ref: '#/components/examples/migration-with-short-org'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
  /orgs/{org}/migrations/{migration_id}/archive:
    get:
      summary: Download an organization migration archive
      description: Fetches the URL to a migration archive.
      tags:
        - - - - migrations
      operationId: migrations/download-archive-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/migrations/orgs#download-an-organization-migration-archive
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/migration-id'
      responses:
        '302':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
    delete:
      summary: Delete an organization migration archive
      description: >-
        Deletes a previous migration archive. Migration archives are
        automatically deleted after seven days.
      tags:
        - - - - migrations
      operationId: migrations/delete-archive-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/migrations/orgs#delete-an-organization-migration-archive
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/migration-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
  /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock:
    delete:
      summary: Unlock an organization repository
      description: >-
        Unlocks a repository that was locked for migration. You should unlock
        each migrated repository and [delete
        them](https://docs.github.com/enterprise-server@3.9/rest/repos/repos#delete-a-repository)
        when the migration is complete and you no longer need the source data.
      tags:
        - - - - migrations
      operationId: migrations/unlock-repo-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/migrations/orgs#unlock-an-organization-repository
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/migration-id'
        - $ref: '#/components/parameters/repo-name'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
  /orgs/{org}/migrations/{migration_id}/repositories:
    get:
      summary: List repositories in an organization migration
      description: List all the repositories for this organization migration.
      tags:
        - - - - migrations
      operationId: migrations/list-repos-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/migrations/orgs#list-repositories-in-an-organization-migration
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/migration-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
  /orgs/{org}/outside_collaborators:
    get:
      summary: List outside collaborators for an organization
      description: List all users who are outside collaborators of an organization.
      tags:
        - - - - orgs
      operationId: orgs/list-outside-collaborators
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/outside-collaborators#list-outside-collaborators-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - name: filter
          description: >-
            Filter the list of outside collaborators. `2fa_disabled` means that
            only outside collaborators without [two-factor
            authentication](https://github.com/blog/1614-two-factor-authentication)
            enabled will be returned.
          in: query
          required: false
          schema:
            type: string
            enum:
              - 2fa_disabled
              - all
            default: all
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: outside-collaborators
  /orgs/{org}/outside_collaborators/{username}:
    put:
      summary: Convert an organization member to outside collaborator
      description: >-
        When an organization member is converted to an outside collaborator,
        they'll only have access to the repositories that their current team
        membership allows. The user will no longer be a member of the
        organization. For more information, see "[Converting an organization
        member to an outside
        collaborator](https://docs.github.com/enterprise-server@3.9/articles/converting-an-organization-member-to-an-outside-collaborator/)".
        Converting an organization member to an outside collaborator may be
        restricted by enterprise administrators. For more information, see
        "[Enforcing repository management policies in your
        enterprise](https://docs.github.com/enterprise-server@3.9/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-for-inviting-outside-collaborators-to-repositories)."
      tags:
        - - - - orgs
      operationId: orgs/convert-member-to-outside-collaborator
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/outside-collaborators#convert-an-organization-member-to-outside-collaborator
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/username'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                async:
                  type: boolean
                  description: >-
                    When set to `true`, the request will be performed
                    asynchronously. Returns a 202 status code when the job is
                    successfully queued.
                  default: false
            examples:
              '202':
                summary: Status code 202, asynchronous request
                value:
                  async: true
              '204':
                summary: Status code 204, synchronous request
                value: null
      responses:
        '202':
          description: User is getting converted asynchronously
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
              examples:
                '202':
                  value: null
        '204':
          description: User was converted
        '403':
          description: >-
            Forbidden if user is the last owner of the organization, not a
            member of the organization, or if the enterprise enforces a policy
            for inviting outside collaborators. For more information, see
            "[Enforcing repository management policies in your
            enterprise](https://docs.github.com/enterprise-server@3.9/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-for-inviting-outside-collaborators-to-repositories)."
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: outside-collaborators
    delete:
      summary: Remove outside collaborator from an organization
      description: >-
        Removing a user from this list will remove them from all the
        organization's repositories.
      tags:
        - - - - orgs
      operationId: orgs/remove-outside-collaborator
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/outside-collaborators#remove-outside-collaborator-from-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '422':
          description: Unprocessable Entity if user is a member of the organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-user-is-a-member-of-the-organization:
                  value:
                    message: >-
                      You cannot specify an organization member to remove as an
                      outside collaborator.
                    documentation_url: >-
                      https://docs.github.com/enterprise-server@3.9/rest/orgs/outside-collaborators#remove-outside-collaborator-from-an-organization
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: outside-collaborators
  /orgs/{org}/packages:
    get:
      summary: List packages for an organization
      description: >-
        Lists packages in an organization readable by the user.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint. If the `package_type`
        belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/list-packages-for-organization
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#list-packages-for-an-organization
      parameters:
        - name: package_type
          description: >-
            The type of supported package. Packages in GitHub's Gradle registry
            have the type `maven`. Docker images pushed to GitHub's Container
            registry (`ghcr.io`) have the type `container`. You can use the type
            `docker` to find images that were pushed to GitHub's Docker registry
            (`docker.pkg.github.com`), even if these have now been migrated to
            the Container registry.
          in: query
          required: true
          schema:
            type: string
            enum:
              - npm
              - maven
              - rubygems
              - docker
              - nuget
              - container
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/package-visibility'
        - name: page
          description: >-
            The page number of the results to fetch. For more information, see
            "[Using pagination in the REST
            API](https://docs.github.com/enterprise-server@3.9/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          description: >-
            The number of results per page (max 100). For more information, see
            "[Using pagination in the REST
            API](https://docs.github.com/enterprise-server@3.9/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
          in: query
          schema:
            type: integer
            default: 30
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/packages-for-org'
        '400':
          $ref: '#/components/responses/package_es_list_error'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /orgs/{org}/packages/{package_type}/{package_name}:
    get:
      summary: Get a package for an organization
      description: >-
        Gets a specific package in an organization.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint. If the `package_type`
        belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/get-package-for-organization
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#get-a-package-for-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/package-org'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
    delete:
      summary: Delete a package for an organization
      description: >-
        Deletes an entire package in an organization. You cannot delete a public
        package if any version of the package has more than 5,000 downloads. In
        this scenario, contact GitHub support for further assistance.


        The authenticated user must have admin permissions in the organization
        to use this endpoint. If the `package_type` belongs to a GitHub Packages
        registry that supports granular permissions, the authenticated user must
        also have admin permissions to the package. For the list of these
        registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` and `delete:packages` scopes to use this endpoint. If
        the `package_type` belongs to a GitHub Packages registry that only
        supports repository-scoped permissions, the `repo` scope is also
        required. For the list of these registries, see "[About permissions for
        GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/delete-package-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#delete-a-package-for-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /orgs/{org}/packages/{package_type}/{package_name}/restore:
    post:
      summary: Restore a package for an organization
      description: >-
        Restores an entire package in an organization.


        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        The authenticated user must have admin permissions in the organization
        to use this endpoint. If the `package_type` belongs to a GitHub Packages
        registry that supports granular permissions, the authenticated user must
        also have admin permissions to the package. For the list of these
        registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` and `write:packages` scopes to use this endpoint. If the
        `package_type` belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/restore-package-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#restore-a-package-for-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
        - name: token
          description: package token
          schema:
            type: string
          required: false
          in: query
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /orgs/{org}/packages/{package_type}/{package_name}/versions:
    get:
      summary: List package versions for a package owned by an organization
      description: >-
        Lists package versions for a package owned by an organization.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint if the `package_type` belongs to a GitHub
        Packages registry that only supports repository-scoped permissions. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/get-all-package-versions-for-package-owned-by-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#list-package-versions-for-a-package-owned-by-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
        - name: state
          in: query
          required: false
          description: The state of the package, either active or deleted.
          schema:
            type: string
            enum:
              - active
              - deleted
            default: active
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package-version'
              examples:
                default:
                  $ref: '#/components/examples/package-versions-for-org'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}:
    get:
      summary: Get a package version for an organization
      description: >-
        Gets a specific package version in an organization.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint. If the `package_type`
        belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/get-package-version-for-organization
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#get-a-package-version-for-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package-version'
              examples:
                default:
                  $ref: '#/components/examples/package-version-org'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
    delete:
      summary: Delete package version for an organization
      description: >-
        Deletes a specific package version in an organization. If the package is
        public and the package version has more than 5,000 downloads, you cannot
        delete the package version. In this scenario, contact GitHub support for
        further assistance.


        The authenticated user must have admin permissions in the organization
        to use this endpoint. If the `package_type` belongs to a GitHub Packages
        registry that supports granular permissions, the authenticated user must
        also have admin permissions to the package. For the list of these
        registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` and `delete:packages` scopes to use this endpoint. If
        the `package_type` belongs to a GitHub Packages registry that only
        supports repository-scoped permissions, the `repo` scope is also
        required. For the list of these registries, see "[About permissions for
        GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/delete-package-version-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#delete-package-version-for-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore:
    post:
      summary: Restore package version for an organization
      description: >-
        Restores a specific package version in an organization.


        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        The authenticated user must have admin permissions in the organization
        to use this endpoint. If the `package_type` belongs to a GitHub Packages
        registry that supports granular permissions, the authenticated user must
        also have admin permissions to the package. For the list of these
        registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` and `write:packages` scopes to use this endpoint. If the
        `package_type` belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/restore-package-version-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#restore-package-version-for-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /orgs/{org}/pre-receive-hooks:
    get:
      summary: List pre-receive hooks for an organization
      description: >-
        List all pre-receive hooks that are enabled or testing for this
        organization as well as any disabled hooks that can be configured at the
        organization level. Globally disabled pre-receive hooks that do not
        allow downstream configuration are not listed.
      operationId: enterprise-admin/list-pre-receive-hooks-for-org
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/org-pre-receive-hooks#list-pre-receive-hooks-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/direction'
        - name: sort
          description: The sort order for the response collection.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - name
            default: created
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/org-pre-receive-hook'
              examples:
                default:
                  $ref: '#/components/examples/org-pre-receive-hook-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: enterprise-admin
        subcategory: org-pre-receive-hooks
  /orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}:
    get:
      summary: Get a pre-receive hook for an organization
      description: ''
      operationId: enterprise-admin/get-pre-receive-hook-for-org
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/org-pre-receive-hooks#get-a-pre-receive-hook-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/pre-receive-hook-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-pre-receive-hook'
              examples:
                default:
                  $ref: '#/components/examples/org-pre-receive-hook'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: enterprise-admin
        subcategory: org-pre-receive-hooks
    patch:
      summary: Update pre-receive hook enforcement for an organization
      description: >-
        For pre-receive hooks which are allowed to be configured at the org
        level, you can set `enforcement` and `allow_downstream_configuration`
      operationId: enterprise-admin/update-pre-receive-hook-enforcement-for-org
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/org-pre-receive-hooks#update-pre-receive-hook-enforcement-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/pre-receive-hook-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-pre-receive-hook'
              examples:
                default:
                  $ref: '#/components/examples/org-pre-receive-hook-2'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                enforcement:
                  description: The state of enforcement for the hook on this repository.
                  type: string
                allow_downstream_configuration:
                  description: Whether repositories can override enforcement.
                  type: boolean
            examples:
              default:
                value:
                  enforcement: enabled
                  allow_downstream_configuration: false
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: enterprise-admin
        subcategory: org-pre-receive-hooks
    delete:
      summary: Remove pre-receive hook enforcement for an organization
      description: Removes any overrides for this hook at the org level for this org.
      operationId: enterprise-admin/remove-pre-receive-hook-enforcement-for-org
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/org-pre-receive-hooks#remove-pre-receive-hook-enforcement-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/pre-receive-hook-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-pre-receive-hook'
              examples:
                default:
                  $ref: '#/components/examples/org-pre-receive-hook'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: enterprise-admin
        subcategory: org-pre-receive-hooks
  /orgs/{org}/projects:
    get:
      summary: List organization projects
      description: >-
        Lists the projects in an organization. Returns a `404 Not Found` status
        if projects are disabled in the organization. If you do not have
        sufficient privileges to perform this action, a `401 Unauthorized` or
        `410 Gone` status is returned.
      tags:
        - - - - projects
      operationId: projects/list-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/projects/projects#list-organization-projects
      parameters:
        - $ref: '#/components/parameters/org'
        - name: state
          description: Indicates the state of the projects to return.
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
              - all
            default: open
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/project'
              examples:
                default:
                  $ref: '#/components/examples/project-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: projects
    post:
      summary: Create an organization project
      description: >-
        Creates an organization project board. Returns a `410 Gone` status if
        projects are disabled in the organization or if the organization does
        not have existing classic projects. If you do not have sufficient
        privileges to perform this action, a `401 Unauthorized` or `410 Gone`
        status is returned.
      tags:
        - - - - projects
      operationId: projects/create-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/projects/projects#create-an-organization-project
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the project.
                body:
                  type: string
                  description: The description of the project.
              required:
                - name
            examples:
              default:
                value:
                  name: Organization Roadmap
                  body: High-level roadmap for the upcoming year.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
              examples:
                default:
                  $ref: '#/components/examples/project-2'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: projects
  /orgs/{org}/public_members:
    get:
      summary: List public organization members
      description: >-
        Members of an organization can choose to have their membership
        publicized or not.
      tags:
        - - - - orgs
      operationId: orgs/list-public-members
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#list-public-organization-members
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /orgs/{org}/public_members/{username}:
    get:
      summary: Check public organization membership for a user
      description: Check if the provided user is a public member of the organization.
      tags:
        - - - - orgs
      operationId: orgs/check-public-membership-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#check-public-organization-membership-for-a-user
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response if user is a public member
        '404':
          description: Not Found if user is not a public member
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    put:
      summary: Set public organization membership for the authenticated user
      description: >-
        The user can publicize their own membership. (A user cannot publicize
        the membership for another user.)


        Note that you'll need to set `Content-Length` to zero when calling out
        to this endpoint. For more information, see "[HTTP
        method](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-rest-api#http-method)."
      tags:
        - - - - orgs
      operationId: orgs/set-public-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#set-public-organization-membership-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: orgs
        subcategory: members
    delete:
      summary: Remove public organization membership for the authenticated user
      description: >-
        Removes the public membership for the authenticated user from the
        specified organization, unless public visibility is enforced by default.
      tags:
        - - - - orgs
      operationId: orgs/remove-public-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#remove-public-organization-membership-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: orgs
        subcategory: members
  /orgs/{org}/repos:
    get:
      summary: List organization repositories
      description: >-
        Lists repositories for the specified organization.


        **Note:** In order to see the `security_and_analysis` block for a
        repository you must have admin permissions for the repository or be an
        owner or security manager for the organization that owns the repository.
        For more information, see "[Managing security managers in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."
      tags:
        - - - - repos
      operationId: repos/list-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/repos/repos#list-organization-repositories
      parameters:
        - $ref: '#/components/parameters/org'
        - name: type
          description: >-
            Specifies the types of repositories you want returned. `internal` is
            not yet supported when a GitHub App calls this endpoint with an
            installation access token.
          in: query
          required: false
          schema:
            type: string
            enum:
              - all
              - public
              - private
              - forks
              - sources
              - member
              - internal
        - name: sort
          description: The property to sort the results by.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - pushed
              - full_name
            default: created
        - name: direction
          description: >-
            The order to sort by. Default: `asc` when using `full_name`,
            otherwise `desc`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    post:
      summary: Create an organization repository
      description: >-
        Creates a new repository in the specified organization. The
        authenticated user must be a member of the organization.


        OAuth app tokens and personal access tokens (classic) need the
        `public_repo` or `repo` scope to create a public repository, and `repo`
        scope to create a private repository.
      tags:
        - - - - repos
      operationId: repos/create-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/repos/repos#create-an-organization-repository
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the repository.
                description:
                  type: string
                  description: A short description of the repository.
                homepage:
                  type: string
                  description: A URL with more information about the repository.
                private:
                  type: boolean
                  description: Whether the repository is private.
                  default: false
                visibility:
                  type: string
                  description: >-
                    The visibility of the repository. **Note**: For GitHub
                    Enterprise Server, this endpoint will only list repositories
                    available to all users on the enterprise. For more
                    information, see "[Creating an internal
                    repository](https://docs.github.com/enterprise-server@3.9/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories)"
                    in the GitHub Help documentation.  

                    The `visibility` parameter overrides the `private` parameter
                    when you use both parameters with the `nebula-preview`
                    preview header.
                  enum:
                    - public
                    - private
                    - internal
                has_issues:
                  type: boolean
                  description: >-
                    Either `true` to enable issues for this repository or
                    `false` to disable them.
                  default: true
                has_projects:
                  type: boolean
                  description: >-
                    Either `true` to enable projects for this repository or
                    `false` to disable them. **Note:** If you're creating a
                    repository in an organization that has disabled repository
                    projects, the default is `false`, and if you pass `true`,
                    the API returns an error.
                  default: true
                has_wiki:
                  type: boolean
                  description: >-
                    Either `true` to enable the wiki for this repository or
                    `false` to disable it.
                  default: true
                has_downloads:
                  description: Whether downloads are enabled.
                  default: true
                  type: boolean
                  example: true
                is_template:
                  type: boolean
                  description: >-
                    Either `true` to make this repo available as a template
                    repository or `false` to prevent it.
                  default: false
                team_id:
                  type: integer
                  description: >-
                    The id of the team that will be granted access to this
                    repository. This is only valid when creating a repository in
                    an organization.
                auto_init:
                  type: boolean
                  description: Pass `true` to create an initial commit with empty README.
                  default: false
                gitignore_template:
                  type: string
                  description: >-
                    Desired language or platform [.gitignore
                    template](https://github.com/github/gitignore) to apply. Use
                    the name of the template without the extension. For example,
                    "Haskell".
                license_template:
                  type: string
                  description: >-
                    Choose an [open source license
                    template](https://choosealicense.com/) that best suits your
                    needs, and then use the [license
                    keyword](https://docs.github.com/enterprise-server@3.9/articles/licensing-a-repository/#searching-github-by-license-type)
                    as the `license_template` string. For example, "mit" or
                    "mpl-2.0".
                allow_squash_merge:
                  type: boolean
                  description: >-
                    Either `true` to allow squash-merging pull requests, or
                    `false` to prevent squash-merging.
                  default: true
                allow_merge_commit:
                  type: boolean
                  description: >-
                    Either `true` to allow merging pull requests with a merge
                    commit, or `false` to prevent merging pull requests with
                    merge commits.
                  default: true
                allow_rebase_merge:
                  type: boolean
                  description: >-
                    Either `true` to allow rebase-merging pull requests, or
                    `false` to prevent rebase-merging.
                  default: true
                allow_auto_merge:
                  type: boolean
                  description: >-
                    Either `true` to allow auto-merge on pull requests, or
                    `false` to disallow auto-merge.
                  default: false
                delete_branch_on_merge:
                  type: boolean
                  description: >-
                    Either `true` to allow automatically deleting head branches
                    when pull requests are merged, or `false` to prevent
                    automatic deletion. **The authenticated user must be an
                    organization owner to set this property to `true`.**
                  default: false
                use_squash_pr_title_as_default:
                  type: boolean
                  description: >-
                    Either `true` to allow squash-merge commits to use pull
                    request title, or `false` to use commit message. **This
                    property has been deprecated. Please use
                    `squash_merge_commit_title` instead.
                  default: false
                  deprecated: true
                squash_merge_commit_title:
                  type: string
                  enum:
                    - PR_TITLE
                    - COMMIT_OR_PR_TITLE
                  description: >-
                    The default value for a squash merge commit title:


                    - `PR_TITLE` - default to the pull request's title.

                    - `COMMIT_OR_PR_TITLE` - default to the commit's title (if
                    only one commit) or the pull request's title (when more than
                    one commit).
                squash_merge_commit_message:
                  type: string
                  enum:
                    - PR_BODY
                    - COMMIT_MESSAGES
                    - BLANK
                  description: >-
                    The default value for a squash merge commit message:


                    - `PR_BODY` - default to the pull request's body.

                    - `COMMIT_MESSAGES` - default to the branch's commit
                    messages.

                    - `BLANK` - default to a blank commit message.
                merge_commit_title:
                  type: string
                  enum:
                    - PR_TITLE
                    - MERGE_MESSAGE
                  description: >-
                    The default value for a merge commit title.


                    - `PR_TITLE` - default to the pull request's title.

                    - `MERGE_MESSAGE` - default to the classic title for a merge
                    message (e.g., Merge pull request #123 from branch-name).
                merge_commit_message:
                  type: string
                  enum:
                    - PR_BODY
                    - PR_TITLE
                    - BLANK
                  description: |-
                    The default value for a merge commit message.

                    - `PR_TITLE` - default to the pull request's title.
                    - `PR_BODY` - default to the pull request's body.
                    - `BLANK` - default to a blank commit message.
              required:
                - name
            examples:
              default:
                value:
                  name: Hello-World
                  description: This is your first repository
                  homepage: https://github.com
                  private: false
                  has_issues: true
                  has_projects: true
                  has_wiki: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/full-repository'
              examples:
                default:
                  $ref: '#/components/examples/full-repository'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /orgs/{org}/repository-fine-grained-permissions:
    get:
      summary: List repository fine-grained permissions for an organization
      description: >-
        Lists the fine-grained permissions that can be used in custom repository
        roles for an organization. For more information, see "[About custom
        repository
        roles](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles)."


        The authenticated user must be an administrator of the organization or
        of a repository of the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` or `repo` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/list-repo-fine-grained-permissions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/custom-roles#list-repository-fine-grained-permissions-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository-fine-grained-permission'
              examples:
                default:
                  $ref: >-
                    #/components/examples/repository-fine-grained-permission-example
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-roles
  /orgs/{org}/secret-scanning/alerts:
    get:
      summary: List secret scanning alerts for an organization
      description: >-
        Lists secret scanning alerts for eligible repositories in an
        organization, from newest to oldest.


        The authenticated user must be an administrator or security manager for
        the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` or
        `security_events` scope to use this endpoint. If this endpoint is only
        used with public repositories, the token can use the `public_repo` scope
        instead.
      tags:
        - - - - secret-scanning
      operationId: secret-scanning/list-alerts-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/secret-scanning/secret-scanning#list-secret-scanning-alerts-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-scanning-alert-state'
        - $ref: '#/components/parameters/secret-scanning-alert-secret-type'
        - $ref: '#/components/parameters/secret-scanning-alert-resolution'
        - $ref: '#/components/parameters/secret-scanning-alert-sort'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/secret-scanning-pagination-before-org-repo'
        - $ref: '#/components/parameters/secret-scanning-pagination-after-org-repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-secret-scanning-alert'
              examples:
                default:
                  $ref: >-
                    #/components/examples/organization-secret-scanning-alert-list
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: secret-scanning
        subcategory: secret-scanning
  /orgs/{org}/security-managers:
    get:
      summary: List security manager teams
      description: >-
        Lists teams that are security managers for an organization. For more
        information, see "[Managing security managers in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


        The authenticated user must be an administrator or security manager for
        the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `read:org` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/list-security-manager-teams
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/security-managers#list-security-manager-teams
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-simple'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: security-managers
  /orgs/{org}/security-managers/teams/{team_slug}:
    put:
      summary: Add a security manager team
      description: >-
        Adds a team as a security manager for an organization. For more
        information, see "[Managing security for an
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)
        for an organization."


        The authenticated user must be an administrator for the organization to
        use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `write:org` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/add-security-manager-team
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/security-managers#add-a-security-manager-team
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
      responses:
        '204':
          description: Response
        '409':
          description: >-
            The organization has reached the maximum number of security manager
            teams.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: security-managers
    delete:
      summary: Remove a security manager team
      description: >-
        Removes the security manager role from a team for an organization. For
        more information, see "[Managing security managers in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)
        team from an organization."


        The authenticated user must be an administrator for the organization to
        use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/remove-security-manager-team
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/security-managers#remove-a-security-manager-team
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: security-managers
  /orgs/{org}/settings/billing/advanced-security:
    get:
      summary: Get GitHub Advanced Security active committers for an organization
      description: >-
        Gets the GitHub Advanced Security active committers for an organization
        per repository.


        Each distinct user login across all repositories is counted as a single
        Advanced Security seat, so the `total_advanced_security_committers` is
        not the sum of advanced_security_committers for each repository.


        If this organization defers to an enterprise for billing, the
        `total_advanced_security_committers` returned from the organization API
        may include some users that are in more than one organization, so they
        will only consume a single Advanced Security seat at the enterprise
        level.


        The total number of repositories with committer information is tracked
        by the `total_count` field.
      tags:
        - - - - billing
      operationId: billing/get-github-advanced-security-billing-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/billing/billing#get-github-advanced-security-active-committers-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/advanced-security-active-committers'
              examples:
                default:
                  $ref: '#/components/examples/advanced-security-active-committers'
        '403':
          $ref: '#/components/responses/code_scanning_forbidden_read'
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: billing
        subcategory: billing
  /orgs/{org}/teams:
    get:
      summary: List teams
      description: >-
        Lists all teams in an organization that are visible to the authenticated
        user.
      tags:
        - - - - teams
      operationId: teams/list
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#list-teams
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    post:
      summary: Create a team
      description: >-
        To create a team, the authenticated user must be a member or owner of
        `{org}`. By default, organization members can create teams. Organization
        owners can limit team creation to organization owners. For more
        information, see "[Setting team creation
        permissions](https://docs.github.com/enterprise-server@3.9/articles/setting-team-creation-permissions-in-your-organization)."


        When you create a new team, you automatically become a team maintainer
        without explicitly adding yourself to the optional array of
        `maintainers`. For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/github/setting-up-and-managing-organizations-and-teams/about-teams)".
      tags:
        - - - - teams
      operationId: teams/create
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#create-a-team
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                description:
                  type: string
                  description: The description of the team.
                maintainers:
                  type: array
                  description: >-
                    List GitHub IDs for organization members who will become
                    team maintainers.
                  items:
                    type: string
                repo_names:
                  type: array
                  description: >-
                    The full name (e.g., "organization-name/repository-name") of
                    repositories to add the team to.
                  items:
                    type: string
                privacy:
                  type: string
                  description: >-
                    The level of privacy this team should have. The options
                    are:  

                    **For a non-nested team:**  
                     * `secret` - only visible to organization owners and members of this team.  
                     * `closed` - visible to all members of this organization.  
                    Default: `secret`  

                    **For a parent or child team:**  
                     * `closed` - visible to all members of this organization.  
                    Default for child team: `closed`
                  enum:
                    - secret
                    - closed
                permission:
                  type: string
                  description: >-
                    **Deprecated**. The permission that new repositories will be
                    added to the team with when none is specified.
                  enum:
                    - pull
                    - push
                  default: pull
                parent_team_id:
                  type: integer
                  description: The ID of a team to set as the parent team.
                ldap_dn:
                  type: string
                  description: >-
                    The [distinguished
                    name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the
                    LDAP entry to map to a team. LDAP synchronization must be
                    enabled to map LDAP entries to a team. Use the "[Update LDAP
                    mapping for a
                    team](https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/ldap#update-ldap-mapping-for-a-team)"
                    endpoint to change the LDAP DN. For more information, see
                    "[Using
                    LDAP](https://docs.github.com/enterprise-server@3.9/admin/identity-and-access-management/authenticating-users-for-your-github-enterprise-server-instance/using-ldap#enabling-ldap-sync)."
              required:
                - name
            examples:
              default:
                value:
                  name: Justice League
                  description: A great team
                  permission: push
                  privacy: closed
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  /orgs/{org}/teams/{team_slug}:
    get:
      summary: Get a team by name
      description: >-
        Gets a team using the team's `slug`. To create the `slug`, GitHub
        Enterprise Server replaces special characters in the `name` string,
        changes all words to lowercase, and replaces spaces with a `-`
        separator. For example, `"My TEam Näme"` would become `my-team-name`.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET /organizations/{org_id}/team/{team_id}`.
      tags:
        - - - - teams
      operationId: teams/get-by-name
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#get-a-team-by-name
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    patch:
      summary: Update a team
      description: >-
        To edit a team, the authenticated user must either be an organization
        owner or a team maintainer.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PATCH /organizations/{org_id}/team/{team_id}`.
      tags:
        - - - - teams
      operationId: teams/update-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#update-a-team
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                description:
                  type: string
                  description: The description of the team.
                privacy:
                  type: string
                  description: >-
                    The level of privacy this team should have. Editing teams
                    without specifying this parameter leaves `privacy` intact.
                    When a team is nested, the `privacy` for parent teams cannot
                    be `secret`. The options are:  

                    **For a non-nested team:**  
                     * `secret` - only visible to organization owners and members of this team.  
                     * `closed` - visible to all members of this organization.  
                    **For a parent or child team:**  
                     * `closed` - visible to all members of this organization.
                  enum:
                    - secret
                    - closed
                permission:
                  type: string
                  description: >-
                    **Deprecated**. The permission that new repositories will be
                    added to the team with when none is specified.
                  enum:
                    - pull
                    - push
                    - admin
                  default: pull
                parent_team_id:
                  type: integer
                  description: The ID of a team to set as the parent team.
                  nullable: true
            examples:
              default:
                value:
                  name: new team name
                  description: new team description
                  privacy: closed
      responses:
        '200':
          description: Response when the updated information already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full'
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    delete:
      summary: Delete a team
      description: >-
        To delete a team, the authenticated user must be an organization owner
        or team maintainer.


        If you are an organization owner, deleting a parent team will delete all
        of its child teams as well.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `DELETE /organizations/{org_id}/team/{team_id}`.
      tags:
        - - - - teams
      operationId: teams/delete-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#delete-a-team
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  /orgs/{org}/teams/{team_slug}/discussions:
    get:
      summary: List discussions
      description: >-
        List all discussions on a team's page.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET /organizations/{org_id}/team/{team_id}/discussions`.


        OAuth app tokens and personal access tokens (classic) need the
        `read:discussion` scope to use this endpoint.
      tags:
        - - - - teams
      operationId: teams/list-discussions-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/discussions#list-discussions
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
        - name: pinned
          in: query
          required: false
          description: Pinned discussions only filter
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-discussion'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
    post:
      summary: Create a discussion
      description: >-
        Creates a new discussion post on a team's page.


        This endpoint triggers
        [notifications](https://docs.github.com/enterprise-server@3.9/github/managing-subscriptions-and-notifications-on-github/about-notifications).
        Creating content too quickly using this endpoint may result in secondary
        rate limiting. For more information, see "[Rate limits for the
        API](https://docs.github.com/enterprise-server@3.9/rest/overview/rate-limits-for-the-rest-api#about-secondary-rate-limits)"
        and "[Best practices for using the REST
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/best-practices-for-using-the-rest-api)."


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `POST /organizations/{org_id}/team/{team_id}/discussions`.


        OAuth app tokens and personal access tokens (classic) need the
        `write:discussion` scope to use this endpoint.
      tags:
        - - - - teams
      operationId: teams/create-discussion-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/discussions#create-a-discussion
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
                private:
                  type: boolean
                  description: >-
                    Private posts are only visible to team members, organization
                    owners, and team maintainers. Public posts are visible to
                    all members of the organization. Set to `true` to create a
                    private post.
                  default: false
              required:
                - title
                - body
            examples:
              default:
                value:
                  title: Our first team post
                  body: Hi! This is an area for us to collaborate as a team.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}:
    get:
      summary: Get a discussion
      description: >-
        Get a specific discussion on a team's page.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.


        OAuth app tokens and personal access tokens (classic) need the
        `read:discussion` scope to use this endpoint.
      tags:
        - - - - teams
      operationId: teams/get-discussion-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/discussions#get-a-discussion
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
    patch:
      summary: Update a discussion
      description: >-
        Edits the title and body text of a discussion post. Only the parameters
        you provide are updated.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PATCH
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.


        OAuth app tokens and personal access tokens (classic) need the
        `write:discussion` scope to use this endpoint.
      tags:
        - - - - teams
      operationId: teams/update-discussion-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/discussions#update-a-discussion
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
            examples:
              default:
                value:
                  title: Welcome to our first team post
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
    delete:
      summary: Delete a discussion
      description: >-
        Delete a discussion from a team's page.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `DELETE
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.


        OAuth app tokens and personal access tokens (classic) need the
        `write:discussion` scope to use this endpoint.
      tags:
        - - - - teams
      operationId: teams/delete-discussion-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/discussions#delete-a-discussion
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments:
    get:
      summary: List discussion comments
      description: >-
        List all comments on a team discussion.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.


        OAuth app tokens and personal access tokens (classic) need the
        `read:discussion` scope to use this endpoint.
      tags:
        - - - - teams
      operationId: teams/list-discussion-comments-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/discussion-comments#list-discussion-comments
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-discussion-comment'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-comment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
    post:
      summary: Create a discussion comment
      description: >-
        Creates a new comment on a team discussion.


        This endpoint triggers
        [notifications](https://docs.github.com/enterprise-server@3.9/github/managing-subscriptions-and-notifications-on-github/about-notifications).
        Creating content too quickly using this endpoint may result in secondary
        rate limiting. For more information, see "[Rate limits for the
        API](https://docs.github.com/enterprise-server@3.9/rest/overview/rate-limits-for-the-rest-api#about-secondary-rate-limits)"
        and "[Best practices for using the REST
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/best-practices-for-using-the-rest-api)."


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `POST
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.


        OAuth app tokens and personal access tokens (classic) need the
        `write:discussion` scope to use this endpoint.
      tags:
        - - - - teams
      operationId: teams/create-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/discussion-comments#create-a-discussion-comment
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
                - body
            examples:
              default:
                value:
                  body: Do you like apples?
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion-comment'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-comment'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}:
    get:
      summary: Get a discussion comment
      description: >-
        Get a specific comment on a team discussion.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.


        OAuth app tokens and personal access tokens (classic) need the
        `read:discussion` scope to use this endpoint.
      tags:
        - - - - teams
      operationId: teams/get-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/discussion-comments#get-a-discussion-comment
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
        - $ref: '#/components/parameters/comment-number'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion-comment'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-comment'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
    patch:
      summary: Update a discussion comment
      description: >-
        Edits the body text of a discussion comment.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PATCH
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.


        OAuth app tokens and personal access tokens (classic) need the
        `write:discussion` scope to use this endpoint.
      tags:
        - - - - teams
      operationId: teams/update-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/discussion-comments#update-a-discussion-comment
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
        - $ref: '#/components/parameters/comment-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
                - body
            examples:
              default:
                value:
                  body: Do you like pineapples?
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion-comment'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-comment-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
    delete:
      summary: Delete a discussion comment
      description: >-
        Deletes a comment on a team discussion.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `DELETE
        /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.


        OAuth app tokens and personal access tokens (classic) need the
        `write:discussion` scope to use this endpoint.
      tags:
        - - - - teams
      operationId: teams/delete-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/discussion-comments#delete-a-discussion-comment
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
        - $ref: '#/components/parameters/comment-number'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions:
    get:
      summary: List reactions for a team discussion comment
      description: >-
        List the reactions to a [team discussion
        comment](https://docs.github.com/enterprise-server@3.9/rest/teams/discussion-comments#get-a-discussion-comment).


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.


        OAuth app tokens and personal access tokens (classic) need the
        `read:discussion` scope to use this endpoint.
      tags:
        - - - - reactions
      operationId: reactions/list-for-team-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/reactions/reactions#list-reactions-for-a-team-discussion-comment
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
        - $ref: '#/components/parameters/comment-number'
        - name: content
          description: >-
            Returns a single [reaction
            type](https://docs.github.com/enterprise-server@3.9/rest/reactions/reactions#about-reactions).
            Omit this parameter to list all reactions to a team discussion
            comment.
          in: query
          required: false
          schema:
            type: string
            enum:
              - '+1'
              - '-1'
              - laugh
              - confused
              - heart
              - hooray
              - rocket
              - eyes
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for a team discussion comment
      description: >-
        Create a reaction to a [team discussion
        comment](https://docs.github.com/enterprise-server@3.9/rest/teams/discussion-comments#get-a-discussion-comment).


        A response with an HTTP `200` status means that you already added the
        reaction type to this team discussion comment.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `POST
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.


        OAuth app tokens and personal access tokens (classic) need the
        `write:discussion` scope to use this endpoint.
      tags:
        - - - - reactions
      operationId: reactions/create-for-team-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/reactions/reactions#create-reaction-for-a-team-discussion-comment
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
        - $ref: '#/components/parameters/comment-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: >-
                    The [reaction
                    type](https://docs.github.com/enterprise-server@3.9/rest/reactions/reactions#about-reactions)
                    to add to the team discussion comment.
                  enum:
                    - '+1'
                    - '-1'
                    - laugh
                    - confused
                    - heart
                    - hooray
                    - rocket
                    - eyes
              required:
                - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: >-
            Response when the reaction type has already been added to this team
            discussion comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}:
    delete:
      summary: Delete team discussion comment reaction
      description: >-
        **Note:** You can also specify a team or organization with `team_id` and
        `org_id` using the route `DELETE
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id`.


        Delete a reaction to a [team discussion
        comment](https://docs.github.com/enterprise-server@3.9/rest/teams/discussion-comments#get-a-discussion-comment).


        OAuth app tokens and personal access tokens (classic) need the
        `write:discussion` scope to use this endpoint.
      tags:
        - - - - reactions
      operationId: reactions/delete-for-team-discussion-comment
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/reactions/reactions#delete-team-discussion-comment-reaction
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
        - $ref: '#/components/parameters/comment-number'
        - $ref: '#/components/parameters/reaction-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions:
    get:
      summary: List reactions for a team discussion
      description: >-
        List the reactions to a [team
        discussion](https://docs.github.com/enterprise-server@3.9/rest/teams/discussions#get-a-discussion).


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.


        OAuth app tokens and personal access tokens (classic) need the
        `read:discussion` scope to use this endpoint.
      tags:
        - - - - reactions
      operationId: reactions/list-for-team-discussion-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/reactions/reactions#list-reactions-for-a-team-discussion
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
        - name: content
          description: >-
            Returns a single [reaction
            type](https://docs.github.com/enterprise-server@3.9/rest/reactions/reactions#about-reactions).
            Omit this parameter to list all reactions to a team discussion.
          in: query
          required: false
          schema:
            type: string
            enum:
              - '+1'
              - '-1'
              - laugh
              - confused
              - heart
              - hooray
              - rocket
              - eyes
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for a team discussion
      description: >-
        Create a reaction to a [team
        discussion](https://docs.github.com/enterprise-server@3.9/rest/teams/discussions#get-a-discussion).


        A response with an HTTP `200` status means that you already added the
        reaction type to this team discussion.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `POST
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.


        OAuth app tokens and personal access tokens (classic) need the
        `write:discussion` scope to use this endpoint.
      tags:
        - - - - reactions
      operationId: reactions/create-for-team-discussion-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/reactions/reactions#create-reaction-for-a-team-discussion
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: >-
                    The [reaction
                    type](https://docs.github.com/enterprise-server@3.9/rest/reactions/reactions#about-reactions)
                    to add to the team discussion.
                  enum:
                    - '+1'
                    - '-1'
                    - laugh
                    - confused
                    - heart
                    - hooray
                    - rocket
                    - eyes
              required:
                - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: reactions
        subcategory: reactions
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}:
    delete:
      summary: Delete team discussion reaction
      description: >-
        **Note:** You can also specify a team or organization with `team_id` and
        `org_id` using the route `DELETE
        /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions/:reaction_id`.


        Delete a reaction to a [team
        discussion](https://docs.github.com/enterprise-server@3.9/rest/teams/discussions#get-a-discussion).


        OAuth app tokens and personal access tokens (classic) need the
        `write:discussion` scope to use this endpoint.
      tags:
        - - - - reactions
      operationId: reactions/delete-for-team-discussion
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/reactions/reactions#delete-team-discussion-reaction
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/discussion-number'
        - $ref: '#/components/parameters/reaction-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /orgs/{org}/teams/{team_slug}/external-groups:
    get:
      summary: List a connection between an external group and a team
      description: >-
        Lists a connection between a team and an external group.


        You can manage team membership with your identity provider using
        Enterprise Managed Users for GitHub Enterprise Cloud. For more
        information, see "[GitHub's
        products](https://docs.github.com/enterprise-server@3.9/github/getting-started-with-github/githubs-products)"
        in the GitHub Help documentation.
      tags:
        - - - - teams
      operationId: teams/list-linked-external-idp-groups-to-team-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/external-groups#list-a-connection-between-an-external-group-and-a-team
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/external-groups'
              examples:
                default:
                  $ref: '#/components/examples/external-groups'
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: true
        category: teams
        subcategory: external-groups
    patch:
      summary: Update the connection between an external group and a team
      description: >-
        Creates a connection between a team and an external group.  Only one
        external group can be linked to a team.


        You can manage team membership with your identity provider using
        Enterprise Managed Users for GitHub Enterprise Cloud. For more
        information, see "[GitHub's
        products](https://docs.github.com/enterprise-server@3.9/github/getting-started-with-github/githubs-products)"
        in the GitHub Help documentation.
      tags:
        - - - - teams
      operationId: teams/link-external-idp-group-to-team-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/external-groups#update-the-connection-between-an-external-group-and-a-team
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                  description: External Group Id
                  example: 1
              required:
                - group_id
            examples:
              default:
                value:
                  group_id: 123
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/external-group'
              examples:
                default:
                  $ref: '#/components/examples/external-group'
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: false
        category: teams
        subcategory: external-groups
    delete:
      summary: Remove the connection between an external group and a team
      description: >-
        Deletes a connection between a team and an external group.


        You can manage team membership with your IdP using Enterprise Managed
        Users for GitHub Enterprise Cloud. For more information, see [GitHub's
        products](https://docs.github.com/enterprise-server@3.9/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
        - - - - teams
      operationId: teams/unlink-external-idp-group-from-team-for-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/external-groups#remove-the-connection-between-an-external-group-and-a-team
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: true
        enabledForGitHubApps: false
        category: teams
        subcategory: external-groups
  /orgs/{org}/teams/{team_slug}/members:
    get:
      summary: List team members
      description: >-
        Team members will include the members of child teams.


        To list members in a team, the team must be visible to the authenticated
        user.
      tags:
        - - - - teams
      operationId: teams/list-members-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/members#list-team-members
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - name: role
          description: Filters members returned by their role in the team.
          in: query
          required: false
          schema:
            type: string
            enum:
              - member
              - maintainer
              - all
            default: all
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
  /orgs/{org}/teams/{team_slug}/memberships/{username}:
    get:
      summary: Get team membership for a user
      description: >-
        Team members will include the members of child teams.


        To get a user's membership with a team, the team must be visible to the
        authenticated user.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/memberships/{username}`.


        **Note:**

        The response contains the `state` of the membership and the member's
        `role`.


        The `role` for organization owners is set to `maintainer`. For more
        information about `maintainer` roles, see [Create a
        team](https://docs.github.com/enterprise-server@3.9/rest/teams/teams#create-a-team).
      tags:
        - - - - teams
      operationId: teams/get-membership-for-user-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/members#get-team-membership-for-a-user
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-membership'
              examples:
                response-if-user-is-a-team-maintainer:
                  $ref: >-
                    #/components/examples/team-membership-response-if-user-is-a-team-maintainer
        '404':
          description: if user has no team membership
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
    put:
      summary: Add or update team membership for a user
      description: >-
        Adds an organization member to a team. An authenticated organization
        owner or team maintainer can add organization members to a team.


        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://docs.github.com/enterprise-server@3.9/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        **Note:** When you have team synchronization set up for a team with your
        organization's identity provider (IdP), you will see an error if you
        attempt to use the API for making changes to the team's membership. If
        you have access to manage group membership in your IdP, you can manage
        GitHub Enterprise Server team membership through your identity provider,
        which automatically adds and removes team members in an organization.
        For more information, see "[Synchronizing teams between your identity
        provider and GitHub Enterprise
        Server](https://docs.github.com/enterprise-server@3.9/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        An organization owner can add someone who is not part of the team's
        organization to a team. When an organization owner adds someone to a
        team who is not an organization member, this endpoint will send an
        invitation to the person via email. This newly-created membership will
        be in the "pending" state until the person accepts the invitation, at
        which point the membership will transition to the "active" state and the
        user will be added as a member of the team.


        If the user is already a member of the team, this endpoint will update
        the role of the team member's role. To update the membership of a team
        member, the authenticated user must be an organization owner or a team
        maintainer.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PUT
        /organizations/{org_id}/team/{team_id}/memberships/{username}`.
      tags:
        - - - - teams
      operationId: teams/add-or-update-membership-for-user-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/members#add-or-update-team-membership-for-a-user
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/username'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: The role that this user should have in the team.
                  enum:
                    - member
                    - maintainer
                  default: member
            examples:
              default:
                summary: Add or update team membership for an organization member
                value:
                  role: maintainer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-membership'
              examples:
                response-if-users-membership-with-team-is-now-pending:
                  $ref: >-
                    #/components/examples/team-membership-response-if-users-membership-with-team-is-now-pending
        '403':
          description: Forbidden if team synchronization is set up
        '422':
          description: Unprocessable Entity if you attempt to add an organization to a team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
    delete:
      summary: Remove team membership for a user
      description: >-
        To remove a membership between a user and a team, the authenticated user
        must have 'admin' permissions to the team or be an owner of the
        organization that the team is associated with. Removing team membership
        does not delete the user, it just removes their membership from the
        team.


        Team synchronization is available for organizations using GitHub
        Enterprise Cloud. For more information, see [GitHub's
        products](https://docs.github.com/enterprise-server@3.9/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        **Note:** When you have team synchronization set up for a team with your
        organization's identity provider (IdP), you will see an error if you
        attempt to use the API for making changes to the team's membership. If
        you have access to manage group membership in your IdP, you can manage
        GitHub Enterprise Server team membership through your identity provider,
        which automatically adds and removes team members in an organization.
        For more information, see "[Synchronizing teams between your identity
        provider and GitHub Enterprise
        Server](https://docs.github.com/enterprise-server@3.9/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `DELETE
        /organizations/{org_id}/team/{team_id}/memberships/{username}`.
      tags:
        - - - - teams
      operationId: teams/remove-membership-for-user-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/members#remove-team-membership-for-a-user
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '403':
          description: Forbidden if team synchronization is set up
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
  /orgs/{org}/teams/{team_slug}/projects:
    get:
      summary: List team projects
      description: >-
        Lists the organization projects for a team.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET /organizations/{org_id}/team/{team_id}/projects`.
      tags:
        - - - - teams
      operationId: teams/list-projects-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#list-team-projects
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-project'
              examples:
                default:
                  $ref: '#/components/examples/team-project-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  /orgs/{org}/teams/{team_slug}/projects/{project_id}:
    get:
      summary: Check team permissions for a project
      description: >-
        Checks whether a team has `read`, `write`, or `admin` permissions for an
        organization project. The response includes projects inherited from a
        parent team.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      tags:
        - - - - teams
      operationId: teams/check-permissions-for-project-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#check-team-permissions-for-a-project
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/project-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-project'
              examples:
                default:
                  $ref: '#/components/examples/team-project'
        '404':
          description: Not Found if project is not managed by this team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    put:
      summary: Add or update team project permissions
      description: >-
        Adds an organization project to a team. To add a project to a team or
        update the team's permission on a project, the authenticated user must
        have `admin` permissions for the project. The project and team must be
        part of the same organization.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PUT
        /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      tags:
        - - - - teams
      operationId: teams/add-or-update-project-permissions-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#add-or-update-team-project-permissions
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/project-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: >-
                    The permission to grant to the team for this project.
                    Default: the team's `permission` attribute will be used to
                    determine what permission to grant the team on this project.
                    Note that, if you choose not to pass any parameters, you'll
                    need to set `Content-Length` to zero when calling this
                    endpoint. For more information, see "[HTTP
                    method](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-rest-api#http-method)."
                  enum:
                    - read
                    - write
                    - admin
              nullable: true
            examples:
              default:
                summary: Updates the permissions for the team to write for the project
                value:
                  permission: write
      responses:
        '204':
          description: Response
        '403':
          description: Forbidden if the project is not owned by the organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-the-project-is-not-owned-by-the-organization:
                  value:
                    message: Must have admin rights to Repository.
                    documentation_url: >-
                      https://docs.github.com/enterprise-server@3.9/rest/teams/teams#add-or-update-team-project-permissions
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    delete:
      summary: Remove a project from a team
      description: >-
        Removes an organization project from a team. An organization owner or a
        team maintainer can remove any project from the team. To remove a
        project from a team as an organization member, the authenticated user
        must have `read` access to both the team and project, or `admin` access
        to the team or project. This endpoint removes the project from the team,
        but does not delete the project.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `DELETE
        /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      tags:
        - - - - teams
      operationId: teams/remove-project-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#remove-a-project-from-a-team
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/project-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  /orgs/{org}/teams/{team_slug}/repos:
    get:
      summary: List team repositories
      description: >-
        Lists a team's repositories visible to the authenticated user.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET /organizations/{org_id}/team/{team_id}/repos`.
      tags:
        - - - - teams
      operationId: teams/list-repos-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#list-team-repositories
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}:
    get:
      summary: Check team permissions for a repository
      description: >-
        Checks whether a team has `admin`, `push`, `maintain`, `triage`, or
        `pull` permission for a repository. Repositories inherited through a
        parent team will also be checked.


        You can also get information about the specified repository, including
        what permissions the team grants on it, by passing the following custom
        [media
        type](https://docs.github.com/enterprise-server@3.9/rest/overview/media-types/)
        via the `application/vnd.github.v3.repository+json` accept header.


        If a team doesn't have permission for the repository, you will receive a
        `404 Not Found` response status.


        If the repository is private, you must have at least `read` permission
        for that repository, and your token must have the `repo` or `admin:org`
        scope. Otherwise, you will receive a `404 Not Found` response status.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET
        /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
      tags:
        - - - - teams
      operationId: teams/check-permissions-for-repo-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#check-team-permissions-for-a-repository
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Alternative response with repository permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-repository'
              examples:
                alternative-response-with-repository-permissions:
                  $ref: >-
                    #/components/examples/team-repository-alternative-response-with-repository-permissions
        '204':
          description: >-
            Response if team has permission for the repository. This is the
            response when the repository media type hasn't been provded in the
            Accept header.
        '404':
          description: Not Found if team does not have permission for the repository
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    put:
      summary: Add or update team repository permissions
      description: >-
        To add a repository to a team or update the team's permission on a
        repository, the authenticated user must have admin access to the
        repository, and must be able to see the team. The repository must be
        owned by the organization, or a direct fork of a repository owned by the
        organization. You will get a `422 Unprocessable Entity` status if you
        attempt to add a repository to a team that is not owned by the
        organization. Note that, if you choose not to pass any parameters,
        you'll need to set `Content-Length` to zero when calling out to this
        endpoint. For more information, see "[HTTP
        method](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-rest-api#http-method)."


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `PUT
        /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.


        For more information about the permission levels, see "[Repository
        permission levels for an
        organization](https://docs.github.com/enterprise-server@3.9/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)".
      tags:
        - - - - teams
      operationId: teams/add-or-update-repo-permissions-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#add-or-update-team-repository-permissions
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: >-
                    The permission to grant the team on this repository. We
                    accept the following permissions to be set: `pull`,
                    `triage`, `push`, `maintain`, `admin` and you can also
                    specify a custom repository role name, if the owning
                    organization has defined any. If no permission is specified,
                    the team's `permission` attribute will be used to determine
                    what permission to grant the team on this repository.
                  default: push
            examples:
              default:
                summary: >-
                  Adding a team to an organization repository with the write
                  role
                value:
                  permission: push
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    delete:
      summary: Remove a repository from a team
      description: >-
        If the authenticated user is an organization owner or a team maintainer,
        they can remove any repositories from the team. To remove a repository
        from a team as an organization member, the authenticated user must have
        admin access to the repository and must be able to see the team. This
        does not delete the repository, it just removes it from the team.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `DELETE
        /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
      tags:
        - - - - teams
      operationId: teams/remove-repo-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#remove-a-repository-from-a-team
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  /orgs/{org}/teams/{team_slug}/teams:
    get:
      summary: List child teams
      description: >-
        Lists the child teams of the team specified by `{team_slug}`.


        **Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET /organizations/{org_id}/team/{team_id}/teams`.
      tags:
        - - - - teams
      operationId: teams/list-child-in-org
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#list-child-teams
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/team-slug'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: if child teams exist
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                response-if-child-teams-exist:
                  $ref: >-
                    #/components/examples/team-items-response-if-child-teams-exist
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  /orgs/{org}/{security_product}/{enablement}:
    post:
      summary: Enable or disable a security feature for an organization
      description: >-
        Enables or disables the specified security feature for all eligible
        repositories in an organization. For more information, see "[Managing
        security managers in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


        The authenticated user must be an organization owner or be member of a
        team with the security manager role to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `write:org` scope to use this endpoint.
      tags:
        - - - - orgs
      operationId: orgs/enable-or-disable-security-product-on-all-org-repos
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/security-product'
        - $ref: '#/components/parameters/org-security-product-enablement'
      responses:
        '204':
          description: Action started
        '422':
          description: >-
            The action could not be taken due to an in progress enablement, or a
            policy is preventing enablement
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: orgs
  /repos/{owner}/{repo}/actions/organization-secrets:
    get:
      summary: List repository organization secrets
      description: >-
        Lists all organization secrets shared with a repository without
        revealing their encrypted

        values.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - - - - actions
      operationId: actions/list-repo-organization-secrets
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/secrets#list-repository-organization-secrets
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - secrets
                properties:
                  total_count:
                    type: integer
                  secrets:
                    type: array
                    items:
                      $ref: '#/components/schemas/actions-secret'
              examples:
                default:
                  $ref: '#/components/examples/actions-secret-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repos/{owner}/{repo}/actions/organization-variables:
    get:
      summary: List repository organization variables
      description: >-
        Lists all organization variables shared with a repository.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - - - - actions
      operationId: actions/list-repo-organization-variables
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/actions/variables#list-repository-organization-variables
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/variables-per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - variables
                properties:
                  total_count:
                    type: integer
                  variables:
                    type: array
                    items:
                      $ref: '#/components/schemas/actions-variable'
              examples:
                default:
                  $ref: '#/components/examples/actions-variables-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /user/memberships/orgs:
    get:
      summary: List organization memberships for the authenticated user
      description: Lists all of the authenticated user's organization memberships.
      tags:
        - - - - orgs
      operationId: orgs/list-memberships-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#list-organization-memberships-for-the-authenticated-user
      parameters:
        - name: state
          description: >-
            Indicates the state of the memberships to return. If not specified,
            the API returns both active and pending memberships.
          in: query
          required: false
          schema:
            type: string
            enum:
              - active
              - pending
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/org-membership'
              examples:
                default:
                  $ref: '#/components/examples/org-membership-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /user/memberships/orgs/{org}:
    get:
      summary: Get an organization membership for the authenticated user
      description: >-
        If the authenticated user is an active or pending member of the
        organization, this endpoint will return the user's membership. If the
        authenticated user is not affiliated with the organization, a `404` is
        returned. This endpoint will return a `403` if the request is made by a
        GitHub App that is blocked by the organization.
      tags:
        - - - - orgs
      operationId: orgs/get-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#get-an-organization-membership-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-membership'
              examples:
                default:
                  $ref: '#/components/examples/org-membership'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    patch:
      summary: Update an organization membership for the authenticated user
      description: >-
        Converts the authenticated user to an active member of the organization,
        if that user has a pending invitation from the organization.
      tags:
        - - - - orgs
      operationId: orgs/update-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#update-an-organization-membership-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: >-
                    The state that the membership should be in. Only `"active"`
                    will be accepted.
                  enum:
                    - active
              required:
                - state
            examples:
              default:
                value:
                  state: active
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-membership'
              examples:
                default:
                  $ref: '#/components/examples/org-membership-2'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /user/orgs:
    get:
      summary: List organizations for the authenticated user
      description: >-
        List organizations for the authenticated user.


        For OAuth app tokens and personal access tokens (classic), this endpoint
        only lists organizations that your authorization allows you to operate
        on in some way (e.g., you can list teams with `read:org` scope, you can
        publicize your organization membership with `user` scope, etc.).
        Therefore, this API requires at least `user` or `read:org` scope for
        OAuth app tokens and personal access tokens (classic). Requests with
        insufficient scope will receive a `403 Forbidden` response.
      tags:
        - - - - orgs
      operationId: orgs/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#list-organizations-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-simple'
              examples:
                default:
                  $ref: '#/components/examples/organization-simple-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: orgs
        subcategory: orgs
  /users/{username}/events/orgs/{org}:
    get:
      summary: List organization events for the authenticated user
      description: >-
        This is the user's organization dashboard. You must be authenticated as
        the user to view this.
      tags:
        - - - - activity
      operationId: activity/list-org-events-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/events#list-organization-events-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/event'
              examples:
                default:
                  $ref: '#/components/examples/user-org-events-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: events
  /users/{username}/orgs:
    get:
      summary: List organizations for a user
      description: >-
        List [public organization
        memberships](https://docs.github.com/enterprise-server@3.9/articles/publicizing-or-concealing-organization-membership)
        for the specified user.


        This method only lists _public_ memberships, regardless of
        authentication. If you need to fetch all of the organization memberships
        (public and private) for the authenticated user, use the [List
        organizations for the authenticated
        user](https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#list-organizations-for-the-authenticated-user)
        API instead.
      tags:
        - - - - orgs
      operationId: orgs/list-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#list-organizations-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-simple'
              examples:
                default:
                  $ref: '#/components/examples/organization-simple-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
x-webhooks:
  branch-protection-rule-created:
    post:
      summary: >-
        This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected
        branches](https://docs.github.com/enterprise-server@3.9/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see
        [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#branchprotectionrule)
        or "[Branch
        protection](https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Administration" repository permission.
      description: A branch protection rule was created.
      operationId: branch-protection-rule/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#branch_protection_rule
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: branch_protection_rule
        supported-webhook-types:
          - repository
          - organization
          - app
  branch-protection-rule-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected
        branches](https://docs.github.com/enterprise-server@3.9/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see
        [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#branchprotectionrule)
        or "[Branch
        protection](https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Administration" repository permission.
      description: A branch protection rule was deleted.
      operationId: branch-protection-rule/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#branch_protection_rule
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: branch_protection_rule
        supported-webhook-types:
          - repository
          - organization
          - app
  branch-protection-rule-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected
        branches](https://docs.github.com/enterprise-server@3.9/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see
        [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#branchprotectionrule)
        or "[Branch
        protection](https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Administration" repository permission.
      description: A branch protection rule was edited.
      operationId: branch-protection-rule/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#branch_protection_rule
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: branch_protection_rule
        supported-webhook-types:
          - repository
          - organization
          - app
  cache-sync:
    post:
      summary: >-
        This event occurs when a Git ref has been successfully synced to a cache
        replica. For more information, see "[About repository
        caching](https://docs.github.com/enterprise-server@3.9/admin/enterprise-management/caching-repositories/about-repository-caching)."
      operationId: cache-sync
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#cache_sync
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-cache-sync'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: cache_sync
        supported-webhook-types:
          - repository
          - organization
          - app
  check-run-completed:
    post:
      summary: >-
        This event occurs when there is activity relating to a check run. For
        information about check runs, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checkrun)
        or "[Check
        Runs](https://docs.github.com/enterprise-server@3.9/rest/checks/runs)"
        in the REST API documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" repository permission. To receive the
        `rerequested` and `requested_action` event types, the app must have at
        least write-level access for the "Checks" permission. GitHub Apps with
        write-level access for the "Checks" permission are automatically
        subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `created` and `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check run was created. Pushes to a branch in a forked repository are not
        detected and return an empty `pull_requests` array and a `null` value
        for `head_branch`.
      description: A check run was completed, and a conclusion is available.
      operationId: check-run/completed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-completed'
            examples:
              default:
                $ref: '#/components/examples/check-run-completed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-completed-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/check-run-completed-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: check_run
        supported-webhook-types:
          - repository
          - organization
          - app
  check-run-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a check run. For
        information about check runs, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checkrun)
        or "[Check
        Runs](https://docs.github.com/enterprise-server@3.9/rest/checks/runs)"
        in the REST API documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" repository permission. To receive the
        `rerequested` and `requested_action` event types, the app must have at
        least write-level access for the "Checks" permission. GitHub Apps with
        write-level access for the "Checks" permission are automatically
        subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `created` and `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check run was created. Pushes to a branch in a forked repository are not
        detected and return an empty `pull_requests` array and a `null` value
        for `head_branch`.
      description: A new check run was created.
      operationId: check-run/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-created'
            examples:
              default:
                $ref: '#/components/examples/check-run-created'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-created-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/check-run-created-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: check_run
        supported-webhook-types:
          - repository
          - organization
          - app
  check-run-requested-action:
    post:
      summary: >-
        This event occurs when there is activity relating to a check run. For
        information about check runs, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checkrun)
        or "[Check
        Runs](https://docs.github.com/enterprise-server@3.9/rest/checks/runs)"
        in the REST API documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" repository permission. To receive the
        `rerequested` and `requested_action` event types, the app must have at
        least write-level access for the "Checks" permission. GitHub Apps with
        write-level access for the "Checks" permission are automatically
        subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `created` and `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check run was created. Pushes to a branch in a forked repository are not
        detected and return an empty `pull_requests` array and a `null` value
        for `head_branch`.
      description: >-
        A check run completed, and someone requested a followup action that your
        app provides. Only the GitHub App someone requests to perform an action
        will receive the `requested_action` payload. For more information, see
        "[Creating CI tests with the Checks
        API](https://docs.github.com/enterprise-server@3.9/developers/apps/guides/creating-ci-tests-with-the-checks-api)."
      operationId: check-run/requested-action
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-requested-action'
            examples:
              default:
                $ref: '#/components/examples/check-run-requested-action'
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/webhook-check-run-requested-action-form-encoded
            examples:
              default:
                $ref: '#/components/examples/check-run-requested-action-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: check_run
        supported-webhook-types:
          - repository
          - organization
          - app
  check-run-rerequested:
    post:
      summary: >-
        This event occurs when there is activity relating to a check run. For
        information about check runs, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checkrun)
        or "[Check
        Runs](https://docs.github.com/enterprise-server@3.9/rest/checks/runs)"
        in the REST API documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" repository permission. To receive the
        `rerequested` and `requested_action` event types, the app must have at
        least write-level access for the "Checks" permission. GitHub Apps with
        write-level access for the "Checks" permission are automatically
        subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `created` and `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check run was created. Pushes to a branch in a forked repository are not
        detected and return an empty `pull_requests` array and a `null` value
        for `head_branch`.
      description: >-
        Someone requested to re-run a check run. Only the GitHub App that
        someone requests to re-run the check will receive the `rerequested`
        payload.
      operationId: check-run/rerequested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-rerequested'
            examples:
              default:
                $ref: '#/components/examples/check-run-rerequested'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-rerequested-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/check-run-rerequested-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: check_run
        supported-webhook-types:
          - repository
          - organization
          - app
  check-suite-completed:
    post:
      summary: >-
        This event occurs when there is activity relating to a check suite. For
        information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checksuite)
        or "[Check
        Suites](https://docs.github.com/enterprise-server@3.9/rest/checks/suites)"
        in the REST API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" permission. To receive the `requested` and
        `rerequested` event types, the app must have at least write-level access
        for the "Checks" permission. GitHub Apps with write-level access for the
        "Checks" permission are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check suite was created. Pushes to a branch in a forked repository are
        not detected and return an empty `pull_requests` array and a `null`
        value for `head_branch`.
      description: >-
        All check runs in a check suite have completed, and a conclusion is
        available.
      operationId: check-suite/completed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_suite
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-completed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: check_suite
        supported-webhook-types:
          - repository
          - organization
          - app
  check-suite-requested:
    post:
      summary: >-
        This event occurs when there is activity relating to a check suite. For
        information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checksuite)
        or "[Check
        Suites](https://docs.github.com/enterprise-server@3.9/rest/checks/suites)"
        in the REST API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" permission. To receive the `requested` and
        `rerequested` event types, the app must have at least write-level access
        for the "Checks" permission. GitHub Apps with write-level access for the
        "Checks" permission are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check suite was created. Pushes to a branch in a forked repository are
        not detected and return an empty `pull_requests` array and a `null`
        value for `head_branch`.
      description: >-
        Someone requested to run a check suite. By default, check suites are
        automatically created when you create a check run. For more information,
        see [the GraphQL API documentation for creating a check
        run](https://docs.github.com/enterprise-server@3.9/graphql/reference/mutations#createcheckrun)
        or "[Create a check
        run](https://docs.github.com/enterprise-server@3.9/rest/checks/runs#create-a-check-run)"
        in the REST API documentation.
      operationId: check-suite/requested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_suite
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-requested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: check_suite
        supported-webhook-types:
          - repository
          - organization
          - app
  check-suite-rerequested:
    post:
      summary: >-
        This event occurs when there is activity relating to a check suite. For
        information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checksuite)
        or "[Check
        Suites](https://docs.github.com/enterprise-server@3.9/rest/checks/suites)"
        in the REST API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" permission. To receive the `requested` and
        `rerequested` event types, the app must have at least write-level access
        for the "Checks" permission. GitHub Apps with write-level access for the
        "Checks" permission are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check suite was created. Pushes to a branch in a forked repository are
        not detected and return an empty `pull_requests` array and a `null`
        value for `head_branch`.
      description: >-
        Someone requested to re-run the check runs in a check suite. For more
        information, see [the GraphQL API documentation for creating a check
        suite](https://docs.github.com/enterprise-server@3.9/graphql/reference/mutations#createchecksuite)
        or "[Create a check
        suite](https://docs.github.com/enterprise-server@3.9/rest/checks/suites#create-a-check-suite)"
        in the REST API documentation.
      operationId: check-suite/rerequested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_suite
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-rerequested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: check_suite
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-appeared-in-branch:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: >-
        A previously created code scanning alert appeared in another branch.
        This can happen when a branch is merged into or created from a branch
        with a pre-existing code scanning alert.
      operationId: code-scanning-alert/appeared-in-branch
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-code-scanning-alert-appeared-in-branch
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-closed-by-user:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: Someone closed a code scanning alert.
      operationId: code-scanning-alert/closed-by-user
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-closed-by-user'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-created:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: A code scanning alert was created in a repository.
      operationId: code-scanning-alert/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-fixed:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: A code scanning alert was fixed in a branch by a commit.
      operationId: code-scanning-alert/fixed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-fixed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: A previously fixed code scanning alert reappeared in a branch.
      operationId: code-scanning-alert/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-reopened-by-user:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: Someone reopened a code scanning alert.
      operationId: code-scanning-alert/reopened-by-user
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-code-scanning-alert-reopened-by-user
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  commit-comment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to commit comments.
        For more information about commit comments, see "[Commenting on a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request)."
        For information about the APIs to manage commit comments, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#commitcomment)
        or "[Commit
        comments](https://docs.github.com/enterprise-server@3.9/rest/commits/comments)"
        in the REST API documentation.


        For activity relating to comments on pull request reviews, use the
        `pull_request_review_comment` event. For activity relating to issue
        comments, use the `issue_comment` event. For activity relating to
        discussion comments, use the `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: Someone commented on a commit.
      operationId: commit-comment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#commit_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-commit-comment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: commit_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  create:
    post:
      summary: >-
        This event occurs when a Git branch or tag is created.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.


        **Notes**:

        - This event will not occur when more than three tags are created at
        once.

        - Payloads are capped at 25 MB. If an event generates a larger payload,
        GitHub will not deliver a payload for that webhook event. This may
        happen, for example, if many branches or tags are pushed at once. We
        suggest monitoring your payload size to ensure delivery.
      operationId: create
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#create
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-create'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: create
        supported-webhook-types:
          - repository
          - organization
          - app
  delete:
    post:
      summary: >-
        This event occurs when a Git branch or tag is deleted. To subscribe to
        all pushes to a repository, including

        branch and tag deletions, use the [`push`](#push) webhook event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.


        **Note**: This event will not occur when more than three tags are
        deleted at once.
      operationId: delete
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#delete
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-delete'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: delete
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-created:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: >-
        A manifest file change introduced a vulnerable dependency, or a GitHub
        Security Advisory was published and an existing dependency was found to
        be vulnerable.
      operationId: dependabot-alert/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-dismissed:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: A Dependabot alert was manually closed.
      operationId: dependabot-alert/dismissed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-dismissed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-fixed:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: A manifest file change removed a vulnerability.
      operationId: dependabot-alert/fixed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-fixed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-reintroduced:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: >-
        A manifest file change introduced a vulnerable dependency that had
        previously been fixed.
      operationId: dependabot-alert/reintroduced
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-reintroduced'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: A Dependabot alert was manually reopened.
      operationId: dependabot-alert/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  deploy-key-created:
    post:
      summary: >-
        This event occurs when there is activity relating to deploy keys. For
        more information, see "[Managing deploy
        keys](https://docs.github.com/enterprise-server@3.9/developers/overview/managing-deploy-keys)."
        For information about the APIs to manage deploy keys, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deploykey)
        or "[Deploy
        keys](https://docs.github.com/enterprise-server@3.9/rest/deploy-keys)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deploy key was created.
      operationId: deploy-key/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deploy_key
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deploy-key-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deploy_key
        supported-webhook-types:
          - repository
          - organization
          - app
  deploy-key-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to deploy keys. For
        more information, see "[Managing deploy
        keys](https://docs.github.com/enterprise-server@3.9/developers/overview/managing-deploy-keys)."
        For information about the APIs to manage deploy keys, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deploykey)
        or "[Deploy
        keys](https://docs.github.com/enterprise-server@3.9/rest/deploy-keys)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deploy key was deleted.
      operationId: deploy-key/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deploy_key
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deploy-key-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deploy_key
        supported-webhook-types:
          - repository
          - organization
          - app
  deployment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to deployments. For
        more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment status, use the `deployment_status`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deployment was created.
      operationId: deployment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment
        supported-webhook-types:
          - repository
          - organization
          - app
  deployment-review-approved:
    post:
      summary: >-
        This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment creation or deployment status, use
        the `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deployment review was approved.
      operationId: deployment-review/approved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-approved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment_review
        supported-webhook-types:
          - app
  deployment-review-rejected:
    post:
      summary: >-
        This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment creation or deployment status, use
        the `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deployment review was rejected.
      operationId: deployment-review/rejected
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-rejected'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment_review
        supported-webhook-types:
          - app
  deployment-review-requested:
    post:
      summary: >-
        This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment creation or deployment status, use
        the `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deployment review was requested.
      operationId: deployment-review/requested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-requested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment_review
        supported-webhook-types:
          - app
  deployment-status-created:
    post:
      summary: >-
        This event occurs when there is activity relating to deployment
        statuses. For more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment creation, use the `deployment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A new deployment status was created.
      operationId: deployment-status/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment_status
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-status-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment_status
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-answered:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on the discussion was marked as the answer.
      operationId: discussion/answered
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-answered'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-category-changed:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: The category of a discussion was changed.
      operationId: discussion/category-changed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-category-changed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was closed.
      operationId: discussion/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: discussions
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.9.0
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-comment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on a
        discussion. For more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a
        discussion, use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on a discussion was created.
      operationId: discussion-comment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-comment-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on a
        discussion. For more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a
        discussion, use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on a discussion was deleted.
      operationId: discussion-comment/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-comment-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on a
        discussion. For more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a
        discussion, use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on a discussion was edited.
      operationId: discussion-comment/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was created.
      operationId: discussion/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was deleted.
      operationId: discussion/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: >-
        The title or body on a discussion was edited, or the category of the
        discussion was changed.
      operationId: discussion/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-labeled:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A label was added to a discussion.
      operationId: discussion/labeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-labeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-locked:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was locked.
      operationId: discussion/locked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-locked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-pinned:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was pinned.
      operationId: discussion/pinned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-pinned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was reopened.
      operationId: discussion/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: discussions
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.9.0
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-transferred:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was transferred to another repository.
      operationId: discussion/transferred
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-transferred'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-unanswered:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on the discussion was unmarked as the answer.
      operationId: discussion/unanswered
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unanswered'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-unlabeled:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A label was removed from a discussion.
      operationId: discussion/unlabeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unlabeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-unlocked:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was unlocked.
      operationId: discussion/unlocked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unlocked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-unpinned:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was unpinned.
      operationId: discussion/unpinned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unpinned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  enterprise-anonymous-access-disabled:
    post:
      summary: >-
        This event occurs when there is activity relating to anonymous Git read
        access in an enterprise. For more information, see "[Enforcing
        repository management policies in your
        enterprise](https://docs.github.com/enterprise-server@3.9/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#configuring-anonymous-git-read-access)."
      description: Anonymous Git read access was disabled.
      operationId: enterprise/anonymous-access-disabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#enterprise
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-enterprise-anonymous-access-disabled
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: enterprise
        supported-webhook-types:
          - business
  enterprise-anonymous-access-enabled:
    post:
      summary: >-
        This event occurs when there is activity relating to anonymous Git read
        access in an enterprise. For more information, see "[Enforcing
        repository management policies in your
        enterprise](https://docs.github.com/enterprise-server@3.9/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#configuring-anonymous-git-read-access)."
      description: Anonymous Git read access was enabled.
      operationId: enterprise/anonymous-access-enabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#enterprise
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-enterprise-anonymous-access-enabled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: enterprise
        supported-webhook-types:
          - business
  fork:
    post:
      summary: >-
        This event occurs when someone forks a repository. For more information,
        see "[Fork a
        repo](https://docs.github.com/enterprise-server@3.9/get-started/quickstart/fork-a-repo)."
        For information about the API to manage forks, see
        "[Forks](https://docs.github.com/enterprise-server@3.9/rest/repos/forks)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      operationId: fork
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#fork
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-fork'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: fork
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  github-app-authorization-revoked:
    post:
      summary: >-
        This event occurs when a user revokes their authorization of a GitHub
        App. For more information, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the API to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.


        A GitHub App receives this webhook by default and cannot unsubscribe
        from this event.


        Anyone can revoke their authorization of a GitHub App from their [GitHub
        account settings page](https://github.com/settings/apps/authorizations).
        Revoking the authorization of a GitHub App does not uninstall the GitHub
        App. You should program your GitHub App so that when it receives this
        webhook, it stops calling the API on behalf of the person who revoked
        the token. If your GitHub App continues to use a revoked access token,
        it will receive the `401 Bad Credentials` error. For details about
        requests with a user access token, which require GitHub App
        authorization, see "[Authenticating with a GitHub App on behalf of a
        user](https://docs.github.com/enterprise-server@3.9/apps/creating-github-apps/authenticating-with-a-github-app/authenticating-with-a-github-app-on-behalf-of-a-user)."
      description: Someone revoked their authorization of a GitHub App.
      operationId: github-app-authorization/revoked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#github_app_authorization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-github-app-authorization-revoked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: github_app_authorization
        supported-webhook-types:
          - app
  gollum:
    post:
      summary: >-
        This event occurs when someone creates or updates a wiki page. For more
        information, see "[About
        wikis](https://docs.github.com/enterprise-server@3.9/communities/documenting-your-project-with-wikis/about-wikis)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      operationId: gollum
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#gollum
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-gollum'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: gollum
        supported-webhook-types:
          - repository
          - organization
          - app
  installation-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: Someone installed a GitHub App on a user or organization account.
      operationId: installation/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  installation-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        Someone uninstalled a GitHub App from their user or organization
        account.
      operationId: installation/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  installation-new-permissions-accepted:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: Someone granted new permissions to a GitHub App.
      operationId: installation/new-permissions-accepted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-installation-new-permissions-accepted
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  installation-repositories-added:
    post:
      summary: >-
        This event occurs when there is activity relating to which repositories
        a GitHub App installation can access. All GitHub Apps receive this event
        by default. You cannot manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        A GitHub App installation was granted access to one or more
        repositories.
      operationId: installation-repositories/added
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation_repositories
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-repositories-added'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation_repositories
        supported-webhook-types:
          - app
  installation-repositories-removed:
    post:
      summary: >-
        This event occurs when there is activity relating to which repositories
        a GitHub App installation can access. All GitHub Apps receive this event
        by default. You cannot manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        Access to one or more repositories was revoked for a GitHub App
        installation.
      operationId: installation-repositories/removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation_repositories
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-repositories-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation_repositories
        supported-webhook-types:
          - app
  installation-suspend:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        Someone blocked access by a GitHub App to their user or organization
        account.
      operationId: installation/suspend
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-suspend'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  installation-target-renamed:
    post:
      summary: >-
        This event occurs when there is activity relating to the user or
        organization account that a GitHub App is installed on. For more
        information, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        Somebody renamed the user or organization account that a GitHub App is
        installed on.
      operationId: installation-target/renamed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation_target
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-target-renamed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation_target
        supported-webhook-types:
          - app
  installation-unsuspend:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        A GitHub App that was blocked from accessing a user or organization
        account was given access the account again.
      operationId: installation/unsuspend
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-unsuspend'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  issue-comment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on an
        issue or pull request. For more information about issues and pull
        requests, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the
        GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issuecomment)
        or "[Issue
        comments](https://docs.github.com/enterprise-server@3.9/rest/issues/comments)"
        in the REST API documentation.


        For activity relating to an issue as opposed to comments on an issue,
        use the `issue` event. For activity related to pull request reviews or
        pull request review comments, use the `pull_request_review` or
        `pull_request_review_comment` events. For more information about the
        different types of pull request comments, see "[Working with
        comments](https://docs.github.com/enterprise-server@3.9/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A comment on an issue or pull request was created.
      operationId: issue-comment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issue_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issue_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  issue-comment-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on an
        issue or pull request. For more information about issues and pull
        requests, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the
        GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issuecomment)
        or "[Issue
        comments](https://docs.github.com/enterprise-server@3.9/rest/issues/comments)"
        in the REST API documentation.


        For activity relating to an issue as opposed to comments on an issue,
        use the `issue` event. For activity related to pull request reviews or
        pull request review comments, use the `pull_request_review` or
        `pull_request_review_comment` events. For more information about the
        different types of pull request comments, see "[Working with
        comments](https://docs.github.com/enterprise-server@3.9/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A comment on an issue or pull request was deleted.
      operationId: issue-comment/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issue_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issue_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  issue-comment-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on an
        issue or pull request. For more information about issues and pull
        requests, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the
        GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issuecomment)
        or "[Issue
        comments](https://docs.github.com/enterprise-server@3.9/rest/issues/comments)"
        in the REST API documentation.


        For activity relating to an issue as opposed to comments on an issue,
        use the `issue` event. For activity related to pull request reviews or
        pull request review comments, use the `pull_request_review` or
        `pull_request_review_comment` events. For more information about the
        different types of pull request comments, see "[Working with
        comments](https://docs.github.com/enterprise-server@3.9/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A comment on an issue or pull request was edited.
      operationId: issue-comment/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issue_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issue_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-assigned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was assigned to a user.
      operationId: issues/assigned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-assigned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was closed.
      operationId: issues/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was deleted.
      operationId: issues/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-demilestoned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was removed from a milestone.
      operationId: issues/demilestoned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-demilestoned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: The title or body on an issue was edited.
      operationId: issues/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-labeled:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A label was added to an issue.
      operationId: issues/labeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-labeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-locked:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        Conversation on an issue was locked. For more information, see "[Locking
        conversations](https://docs.github.com/enterprise-server@3.9/communities/moderating-comments-and-conversations/locking-conversations)."
      operationId: issues/locked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-locked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-milestoned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was added to a milestone.
      operationId: issues/milestoned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-milestoned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-opened:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        An issue was created. When a closed issue is reopened, the action will
        be `reopened` instead.
      operationId: issues/opened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-opened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-pinned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        An issue was pinned to a repository. For more information, see "[Pinning
        an issue to your
        repository](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository)."
      operationId: issues/pinned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-pinned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A closed issue was reopened.
      operationId: issues/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-transferred:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        An issue was transferred to another repository. For more information,
        see "[Transferring an issue to another
        repository](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/transferring-an-issue-to-another-repository)."
      operationId: issues/transferred
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-transferred'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-unassigned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A user was unassigned from an issue.
      operationId: issues/unassigned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unassigned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-unlabeled:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A label was removed from an issue.
      operationId: issues/unlabeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unlabeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-unlocked:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        Conversation on an issue was locked. For more information, see "[Locking
        conversations](https://docs.github.com/enterprise-server@3.9/communities/moderating-comments-and-conversations/locking-conversations)."
      operationId: issues/unlocked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unlocked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-unpinned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        An issue was unpinned from a repository. For more information, see
        "[Pinning an issue to your
        repository](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository)."
      operationId: issues/unpinned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unpinned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  label-created:
    post:
      summary: >-
        This event occurs when there is activity relating to labels. For more
        information, see "[Managing
        labels](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#label)
        or
        "[Labels](https://docs.github.com/enterprise-server@3.9/rest/issues/labels)"
        in the REST API documentation.


        If you want to receive an event when a label is added to or removed from
        an issue, pull request, or discussion, use the `labeled` or `unlabeled`
        action type for the `issues`, `pull_request`, or `discussion` events
        instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A label was created.
      operationId: label/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#label
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: label
        supported-webhook-types:
          - repository
          - organization
          - app
  label-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to labels. For more
        information, see "[Managing
        labels](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#label)
        or
        "[Labels](https://docs.github.com/enterprise-server@3.9/rest/issues/labels)"
        in the REST API documentation.


        If you want to receive an event when a label is added to or removed from
        an issue, pull request, or discussion, use the `labeled` or `unlabeled`
        action type for the `issues`, `pull_request`, or `discussion` events
        instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A label was deleted.
      operationId: label/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#label
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: label
        supported-webhook-types:
          - repository
          - organization
          - app
  label-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to labels. For more
        information, see "[Managing
        labels](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#label)
        or
        "[Labels](https://docs.github.com/enterprise-server@3.9/rest/issues/labels)"
        in the REST API documentation.


        If you want to receive an event when a label is added to or removed from
        an issue, pull request, or discussion, use the `labeled` or `unlabeled`
        action type for the `issues`, `pull_request`, or `discussion` events
        instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A label's name, description, or color was changed.
      operationId: label/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#label
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: label
        supported-webhook-types:
          - repository
          - organization
          - app
  member-added:
    post:
      summary: >-
        This event occurs when there is activity relating to collaborators in a
        repository. For more information, see "[Adding outside collaborators to
        repositories in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repositorycollaboratorconnection)
        or
        "[Collaborators](https://docs.github.com/enterprise-server@3.9/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A GitHub user accepted an invitation to a repository.
      operationId: member/added
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#member
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-added'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: member
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  member-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to collaborators in a
        repository. For more information, see "[Adding outside collaborators to
        repositories in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repositorycollaboratorconnection)
        or
        "[Collaborators](https://docs.github.com/enterprise-server@3.9/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: Permissions were changed for a collaborator on a repository.
      operationId: member/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#member
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: member
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  member-removed:
    post:
      summary: >-
        This event occurs when there is activity relating to collaborators in a
        repository. For more information, see "[Adding outside collaborators to
        repositories in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repositorycollaboratorconnection)
        or
        "[Collaborators](https://docs.github.com/enterprise-server@3.9/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A collaborator was removed from a repository.
      operationId: member/removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#member
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: member
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  membership-added:
    post:
      summary: >-
        This event occurs when there is activity relating to team membership.
        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."
        For more information about the APIs to manage team memberships, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#team)
        or "[Team
        members](https://docs.github.com/enterprise-server@3.9/rest/teams/members)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: An organization member was added to a team.
      operationId: membership/added
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#membership
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-membership-added'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: membership
        supported-webhook-types:
          - organization
          - business
          - app
  membership-removed:
    post:
      summary: >-
        This event occurs when there is activity relating to team membership.
        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."
        For more information about the APIs to manage team memberships, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#team)
        or "[Team
        members](https://docs.github.com/enterprise-server@3.9/rest/teams/members)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: An organization member was removed from a team.
      operationId: membership/removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#membership
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-membership-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: membership
        supported-webhook-types:
          - organization
          - business
          - app
  meta-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a webhook itself.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Meta" app permission.
      description: The webhook was deleted.
      operationId: meta/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#meta
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-meta-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: meta
        supported-webhook-types:
          - marketplace
          - business
          - repository
          - organization
          - app
  milestone-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was closed.
      operationId: milestone/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  milestone-created:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was created.
      operationId: milestone/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  milestone-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was deleted.
      operationId: milestone/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  milestone-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was edited.
      operationId: milestone/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  milestone-opened:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was opened.
      operationId: milestone/opened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-opened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  organization-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: An organization was deleted.
      operationId: organization/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  organization-member-added:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A member accepted an invitation to join an organization.
      operationId: organization/member-added
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-added'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  organization-member-invited:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A member was invited to join the organization.
      operationId: organization/member-invited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-invited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  organization-member-removed:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A member was removed from the organization.
      operationId: organization/member-removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  organization-renamed:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: The name of an organization was changed.
      operationId: organization/renamed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-renamed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  package-published:
    post:
      summary: >-
        This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#package)
        or
        "[Packages](https://docs.github.com/enterprise-server@3.9/rest/packages)"
        in the REST API documentation.


        To install this event on a GitHub App, the app must have at least
        read-level access for the "Packages" repository permission.
      description: A package was published to a registry.
      operationId: package/published
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#package
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-package-published'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: package
        supported-webhook-types:
          - repository
          - organization
          - app
  package-updated:
    post:
      summary: >-
        This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#package)
        or
        "[Packages](https://docs.github.com/enterprise-server@3.9/rest/packages)"
        in the REST API documentation.


        To install this event on a GitHub App, the app must have at least
        read-level access for the "Packages" repository permission.
      description: A previously published package was updated.
      operationId: package/updated
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#package
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-package-updated'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: package
        supported-webhook-types:
          - repository
          - organization
          - app
  page-build:
    post:
      summary: >-
        This event occurs when there is an attempted build of a GitHub Pages
        site. This event occurs regardless of whether the build is successful.
        For more information, see "[Configuring a publishing source for your
        GitHub Pages
        site](https://docs.github.com/enterprise-server@3.9/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site)."
        For information about the API to manage GitHub Pages, see
        "[Pages](https://docs.github.com/enterprise-server@3.9/rest/pages)" in
        the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pages" repository permission.
      operationId: page-build
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#page_build
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-page-build'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: page_build
        supported-webhook-types:
          - repository
          - organization
          - app
  ping:
    post:
      summary: >-
        This event occurs when you create a new webhook. The ping event is a
        confirmation from GitHub that you configured the webhook correctly.
      operationId: ping
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#ping
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-ping'
            examples:
              default:
                $ref: '#/components/examples/ping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-ping-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/ping-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: ping
        supported-webhook-types:
          - repository
          - organization
          - app
          - business
          - marketplace
  project-card-converted:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A note in a project (classic) was converted to an issue.
      operationId: project-card/converted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-converted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-card-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A card was added to a project (classic).
      operationId: project-card/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-card-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A card on a project (classic) was deleted.
      operationId: project-card/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-card-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A note on a project (classic) was edited.
      operationId: project-card/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-card-moved:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: >-
        A card on a project (classic) was moved to another column or to another
        position in its column.
      operationId: project-card/moved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-moved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A project (classic) was closed.
      operationId: project/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  project-column-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a card on a project
        (classic), use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A column was added to a project (classic).
      operationId: project-column/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_column
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_column
        supported-webhook-types:
          - repository
          - organization
          - app
  project-column-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a card on a project
        (classic), use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A column was deleted from a project (classic).
      operationId: project-column/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_column
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_column
        supported-webhook-types:
          - repository
          - organization
          - app
  project-column-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a card on a project
        (classic), use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: The name of a column on a project (classic) was changed.
      operationId: project-column/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_column
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_column
        supported-webhook-types:
          - repository
          - organization
          - app
  project-column-moved:
    post:
      summary: >-
        This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a card on a project
        (classic), use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A column was moved to a new position on a project (classic).
      operationId: project-column/moved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_column
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-moved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_column
        supported-webhook-types:
          - repository
          - organization
          - app
  project-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A project (classic) was created.
      operationId: project/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  project-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A project (classic) was deleted.
      operationId: project/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  project-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: The name or description of a project (classic) was changed.
      operationId: project/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  project-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A project (classic) was closed.
      operationId: project/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  projects-v2-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A project in the organization was closed.
      operationId: projects-v2/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  projects-v2-created:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A project in the organization was created.
      operationId: projects-v2/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  projects-v2-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A project in the organization was deleted.
      operationId: projects-v2/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  projects-v2-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        The title, description, or README of a project in the organization was
        changed.
      operationId: projects-v2/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  projects-v2-item-archived:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        An item on an organization project was archived. For more information,
        see "[Archiving items from your
        project](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project)."
      operationId: projects-v2-item/archived
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-archived'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-converted:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A draft issue in an organization project was converted to an issue.
      operationId: projects-v2-item/converted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-converted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-created:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: An item was added to a project in the organization.
      operationId: projects-v2-item/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: An item was deleted from a project in the organization.
      operationId: projects-v2-item/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        The values or state of an item in an organization project were changed.
        For example, the value of a field was updated, the body of a draft issue
        was changed, or a draft issue was converted to an issue.
      operationId: projects-v2-item/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-reordered:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        The position of an item in an organization project was changed. For
        example, an item was moved above or below another item in the table or
        board layout.
      operationId: projects-v2-item/reordered
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-reordered'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-restored:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        An archived item on an organization project was restored from the
        archive. For more information, see "[Archiving items from your
        project](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project)."
      operationId: projects-v2-item/restored
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-restored'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A project in the organization was reopened.
      operationId: projects-v2/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  public:
    post:
      summary: >-
        This event occurs when repository visibility changes from private to
        public. For more information, see "[Setting repository
        visibility](https://docs.github.com/enterprise-server@3.9/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/setting-repository-visibility)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      operationId: public
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#public
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-public'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: public
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-assigned:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A pull request was assigned to a user.
      operationId: pull-request/assigned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-assigned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-auto-merge-disabled:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Auto merge was disabled for a pull request. For more information, see
        "[Automatically merging a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)."
      operationId: pull-request/auto-merge-disabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-auto-merge-disabled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-auto-merge-enabled:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Auto merge was enabled for a pull request. For more information, see
        "[Automatically merging a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)."
      operationId: pull-request/auto-merge-enabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-auto-merge-enabled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-closed:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A pull request was closed. If `merged` is false in the webhook payload,
        the pull request was closed with unmerged commits. If `merged` is true
        in the webhook payload, the pull request was merged.
      operationId: pull-request/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-converted-to-draft:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A pull request was converted to a draft. For more information, see
        "[Changing the stage of a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request)."
      operationId: pull-request/converted-to-draft
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-converted-to-draft'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-demilestoned:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A pull request was removed from a milestone.
      operationId: pull-request/demilestoned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-demilestoned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-edited:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        The title or body of a pull request was edited, or the base branch of a
        pull request was changed.
      operationId: pull-request/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-labeled:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A label was added to a pull request.
      operationId: pull-request/labeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-labeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-locked:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Conversation on a pull request was locked. For more information, see
        "[Locking
        conversations](https://docs.github.com/enterprise-server@3.9/communities/moderating-comments-and-conversations/locking-conversations)."
      operationId: pull-request/locked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-locked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-milestoned:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A pull request was added to a milestone.
      operationId: pull-request/milestoned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-milestoned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-opened:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A pull request was created
      operationId: pull-request/opened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-opened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-ready-for-review:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A draft pull request was marked as ready for review. For more
        information, see "[Changing the stage of a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request)."
      operationId: pull-request/ready-for-review
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-ready-for-review'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-reopened:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A previously closed pull request was reopened.
      operationId: pull-request/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-comment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull
        request's diff. For more information, see "[Commenting on a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or
        pull request review threads, use the `pull_request_review`,
        `issue_comment`, or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A comment on a pull request diff was created.
      operationId: pull-request-review-comment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-comment-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull
        request's diff. For more information, see "[Commenting on a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or
        pull request review threads, use the `pull_request_review`,
        `issue_comment`, or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A comment on a pull request diff was deleted.
      operationId: pull-request-review-comment/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-comment-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull
        request's diff. For more information, see "[Commenting on a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or
        pull request review threads, use the `pull_request_review`,
        `issue_comment`, or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: The content of a comment on a pull request diff was changed.
      operationId: pull-request-review-comment/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-dismissed:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments
        in addition to a body comment and a state. For more information, see
        "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreview)
        or "[Pull request
        reviews](https://docs.github.com/enterprise-server@3.9/rest/pulls/reviews)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request review threads, use the
        `pull_request_review_comment`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A review on a pull request was dismissed.
      operationId: pull-request-review/dismissed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-dismissed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments
        in addition to a body comment and a state. For more information, see
        "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreview)
        or "[Pull request
        reviews](https://docs.github.com/enterprise-server@3.9/rest/pulls/reviews)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request review threads, use the
        `pull_request_review_comment`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: The body comment on a pull request review was edited.
      operationId: pull-request-review/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-request-removed:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A request for review by a person or team was removed from a pull
        request.
      operationId: pull-request/review-request-removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-request-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-requested:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Review by a person or team was requested for a pull request. For more
        information, see "[Requesting a pull request
        review](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/requesting-a-pull-request-review)."
      operationId: pull-request/review-requested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-requested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-submitted:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments
        in addition to a body comment and a state. For more information, see
        "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreview)
        or "[Pull request
        reviews](https://docs.github.com/enterprise-server@3.9/rest/pulls/reviews)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request review threads, use the
        `pull_request_review_comment`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A review on a pull request was submitted.
      operationId: pull-request-review/submitted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-submitted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-thread-resolved:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment thread on
        a pull request. For more information, see "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewthread)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request reviews, use the
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A comment thread on a pull request was marked as resolved.
      operationId: pull-request-review-thread/resolved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_thread
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-thread-resolved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_thread
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-thread-unresolved:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment thread on
        a pull request. For more information, see "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewthread)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request reviews, use the
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A previously resolved comment thread on a pull request was marked as
        unresolved.
      operationId: pull-request-review-thread/unresolved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_thread
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-pull-request-review-thread-unresolved
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_thread
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-synchronize:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A pull request's head branch was updated. For example, the head branch
        was updated from the base branch or new commits were pushed to the head
        branch.
      operationId: pull-request/synchronize
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-synchronize'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-unassigned:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A user was unassigned from a pull request.
      operationId: pull-request/unassigned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unassigned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-unlabeled:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A label was removed from a pull request.
      operationId: pull-request/unlabeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unlabeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-unlocked:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Conversation on a pull request was unlocked. For more information, see
        "[Locking
        conversations](https://docs.github.com/enterprise-server@3.9/communities/moderating-comments-and-conversations/locking-conversations)."
      operationId: pull-request/unlocked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unlocked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  push:
    post:
      summary: >-
        This event occurs when there is a push to a repository branch. This
        includes when a commit is pushed, when a commit tag is pushed,

        when a branch is deleted, when a tag is deleted, or when a repository is
        created from a template. To subscribe to only branch

        and tag deletions, use the [`delete`](#delete) webhook event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.


        **Note**: An event will not be created when more than three tags are
        pushed at once.
      operationId: push
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#push
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-push'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: push
        supported-webhook-types:
          - repository
          - organization
          - app
  registry-package-published:
    post:
      summary: >-
        This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#package)
        or
        "[Packages](https://docs.github.com/enterprise-server@3.9/rest/packages)"
        in the REST API documentation.


        To install this event on a GitHub App, the app must have at least
        read-level access for the "Packages" repository permission.


        **Note**: GitHub recommends that you use the newer `package` event
        instead.
      description: A package was published to a registry.
      operationId: registry-package/published
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#registry_package
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-registry-package-published'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: registry_package
        supported-webhook-types:
          - repository
          - organization
          - app
  registry-package-updated:
    post:
      summary: >-
        This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#package)
        or
        "[Packages](https://docs.github.com/enterprise-server@3.9/rest/packages)"
        in the REST API documentation.


        To install this event on a GitHub App, the app must have at least
        read-level access for the "Packages" repository permission.


        **Note**: GitHub recommends that you use the newer `package` event
        instead.
      description: A package that was previously published to a registry was updated.
      operationId: registry-package/updated
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#registry_package
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-registry-package-updated'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: registry_package
        supported-webhook-types:
          - repository
          - organization
          - app
  release-created:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: >-
        A draft was saved, or a release or pre-release was published without
        previously being saved as a draft.
      operationId: release/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: A release, pre-release, or draft release was deleted.
      operationId: release/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: >-
        The details of a release, pre-release, or draft release were edited. For
        more information, see "[Managing releases in a
        repository](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/managing-releases-in-a-repository#editing-a-release)."
      operationId: release/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-prereleased:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: >-
        A release was created and identified as a pre-release. A pre-release is
        a release that is not ready for production and may be unstable.
      operationId: release/prereleased
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-prereleased'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-published:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: A release, pre-release, or draft of a release was published.
      operationId: release/published
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-published'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-released:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: A release was published, or a pre-release was changed to a release.
      operationId: release/released
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-released'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-unpublished:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: A release or pre-release was unpublished.
      operationId: release/unpublished
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-unpublished'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  repository-anonymous-access-disabled:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        Someone disabled anonymous Git read access to the repository. For more
        information, see "[Enabling anonymous Git read access for a
        repository](/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/enabling-anonymous-git-read-access-for-a-repository)."
      operationId: repository/anonymous-access-disabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-anonymous-access-disabled
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - app
          - business
          - organization
          - repository
  repository-anonymous-access-enabled:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        Someone enabled anonymous Git read access to the repository. For more
        information, see "[Enabling anonymous Git read access for a
        repository](/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/enabling-anonymous-git-read-access-for-a-repository)."
      operationId: repository/anonymous-access-enabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-anonymous-access-enabled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - app
          - business
          - organization
          - repository
  repository-archived:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A repository was archived.
      operationId: repository/archived
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-archived'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-created:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A repository was created.
      operationId: repository/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        A repository was deleted. GitHub Apps and repository webhooks will not
        receive this event.
      operationId: repository/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-dispatch-sample.collected:
    post:
      summary: >-
        This event occurs when a GitHub App sends a `POST` request to
        `/repos/{owner}/{repo}/dispatches`. For more information, see [the REST
        API documentation for creating a repository dispatch
        event](https://docs.github.com/enterprise-server@3.9/rest/repos/repos#create-a-repository-dispatch-event).


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: >-
        The `event_type` that was specified in the `POST
        /repos/{owner}/{repo}/dispatches` request body.
      operationId: repository-dispatch/sample.collected
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_dispatch
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-dispatch-sample'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_dispatch
        supported-webhook-types:
          - app
  repository-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        The topics, default branch, description, or homepage of a repository was
        changed.
      operationId: repository/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-privatized:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: The visibility of a repository was changed to `private`.
      operationId: repository/privatized
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-privatized'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-publicized:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: The visibility of a repository was changed to `public`.
      operationId: repository/publicized
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-publicized'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-renamed:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: The name of a repository was changed.
      operationId: repository/renamed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-renamed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-transferred:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        Ownership of the repository was transferred to a user or organization
        account. This event is only sent to the account where the ownership is
        transferred. To receive the `repository.transferred` event, the new
        owner account must have the GitHub App installed, and the App must be
        subscribed to "Repository" events.
      operationId: repository/transferred
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-transferred'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-unarchived:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A previously archived repository was unarchived.
      operationId: repository/unarchived
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-unarchived'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-vulnerability-alert-create:
    post:
      summary: >-
        This event occurs when there is activity relating to a security
        vulnerability alert in a repository.


        **Note**: This event is deprecated. Use the `dependabot_alert` event
        instead.
      description: A repository vulnerability alert was created.
      operationId: repository-vulnerability-alert/create
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-vulnerability-alert-create
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
          - repository
          - organization
  repository-vulnerability-alert-dismiss:
    post:
      summary: >-
        This event occurs when there is activity relating to a security
        vulnerability alert in a repository.


        **Note**: This event is deprecated. Use the `dependabot_alert` event
        instead.
      description: A repository vulnerability alert was dismissed.
      operationId: repository-vulnerability-alert/dismiss
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-vulnerability-alert-dismiss
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
          - repository
          - organization
  repository-vulnerability-alert-reopen:
    post:
      summary: >-
        This event occurs when there is activity relating to a security
        vulnerability alert in a repository.


        **Note**: This event is deprecated. Use the `dependabot_alert` event
        instead.
      description: >-
        A previously dismissed or resolved repository vulnerability alert was
        reopened.
      operationId: repository-vulnerability-alert/reopen
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-vulnerability-alert-reopen
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
          - repository
          - organization
  repository-vulnerability-alert-resolve:
    post:
      summary: >-
        This event occurs when there is activity relating to a security
        vulnerability alert in a repository.


        **Note**: This event is deprecated. Use the `dependabot_alert` event
        instead.
      description: A repository vulnerability alert was marked as resolved.
      operationId: repository-vulnerability-alert/resolve
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-vulnerability-alert-resolve
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
          - repository
          - organization
  secret-scanning-alert-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alert locations, use the
        `secret_scanning_alert_location` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: A secret scanning alert was created.
      operationId: secret-scanning-alert/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: secret_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  secret-scanning-alert-location-created:
    post:
      summary: >-
        This event occurs when there is activity relating to the locations of a
        secret in a secret scanning alert.


        For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alerts, use the
        `secret_scanning_alert` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: >-
        A new instance of a previously detected secret was detected in a
        repository, and the location of the secret was added to the existing
        alert.
      operationId: secret-scanning-alert-location/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert_location
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-secret-scanning-alert-location-created
            examples:
              default:
                $ref: '#/components/examples/secret-scanning-alert-location-created'
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/webhook-secret-scanning-alert-location-created-form-encoded
            examples:
              default:
                $ref: >-
                  #/components/examples/secret-scanning-alert-location-created-form-encoded
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: secret_scanning_alert_location
        supported-webhook-types:
          - repository
          - organization
          - app
  secret-scanning-alert-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alert locations, use the
        `secret_scanning_alert_location` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: A previously closed secret scanning alert was reopened.
      operationId: secret-scanning-alert/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: secret_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  secret-scanning-alert-resolved:
    post:
      summary: >-
        This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alert locations, use the
        `secret_scanning_alert_location` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: A secret scanning alert was closed.
      operationId: secret-scanning-alert/resolved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-resolved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: secret_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  secret-scanning-alert-revoked:
    post:
      summary: >-
        This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alert locations, use the
        `secret_scanning_alert_location` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: A secret scanning alert was marked as revoked.
      operationId: secret-scanning-alert/revoked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-revoked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: secret_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  security-advisory-published:
    post:
      summary: >-
        This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security
        advisory provides information about security vulnerabilities or malware
        that have been mapped to packages in ecosystems we support. For more
        information about global security advisories, see "[About global
        security
        advisories](https://docs.github.com/enterprise-server@3.9/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the
        REST API
        documentation](https://docs.github.com/enterprise-server@3.9/rest/security-advisories/global-advisories)
        or [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory
        dataset. For more information, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
      description: A security advisory was published to the GitHub community.
      operationId: security-advisory/published
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#security_advisory
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-published'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: security_advisory
        supported-webhook-types:
          - app
  security-advisory-updated:
    post:
      summary: >-
        This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security
        advisory provides information about security vulnerabilities or malware
        that have been mapped to packages in ecosystems we support. For more
        information about global security advisories, see "[About global
        security
        advisories](https://docs.github.com/enterprise-server@3.9/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the
        REST API
        documentation](https://docs.github.com/enterprise-server@3.9/rest/security-advisories/global-advisories)
        or [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory
        dataset. For more information, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
      description: The metadata or description of a security advisory was changed.
      operationId: security-advisory/updated
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#security_advisory
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-updated'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: security_advisory
        supported-webhook-types:
          - app
  security-advisory-withdrawn:
    post:
      summary: >-
        This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security
        advisory provides information about security vulnerabilities or malware
        that have been mapped to packages in ecosystems we support. For more
        information about global security advisories, see "[About global
        security
        advisories](https://docs.github.com/enterprise-server@3.9/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the
        REST API
        documentation](https://docs.github.com/enterprise-server@3.9/rest/security-advisories/global-advisories)
        or [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory
        dataset. For more information, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
      description: A previously published security advisory was withdrawn.
      operationId: security-advisory/withdrawn
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#security_advisory
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-withdrawn'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: security_advisory
        supported-webhook-types:
          - app
  security-and-analysis:
    post:
      summary: >-
        This event occurs when code security and analysis features are enabled
        or disabled for a repository. For more information, see "[GitHub
        security
        features](https://docs.github.com/enterprise-server@3.9/code-security/getting-started/github-security-features)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Administration" repository permission.
      operationId: security-and-analysis
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#security_and_analysis
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-and-analysis'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: security_and_analysis
        supported-webhook-types:
          - repository
          - organization
          - app
  sponsorship-cancelled:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsorship was cancelled and the last billing cycle has ended.


        This event is only sent when a recurring (monthly) sponsorship is
        cancelled; it is not sent for one-time sponsorships.
      operationId: sponsorship/cancelled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-cancelled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsor created a sponsorship for a sponsored account. This event
        occurs once the payment is successfully processed.
      operationId: sponsorship/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A monthly sponsor changed who can see their sponsorship. If you
        recognize your sponsors publicly, you may want to update your sponsor
        recognition to reflect the change when this event occurs.
      operationId: sponsorship/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-pending-cancellation:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsor scheduled a cancellation for their sponsorship. The
        cancellation will become effective on their next billing date.


        This event is only sent when a recurring (monthly) sponsorship is
        cancelled; it is not sent for one-time sponsorships.
      operationId: sponsorship/pending-cancellation
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-pending-cancellation'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-pending-tier-change:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsor scheduled a downgrade to a lower sponsorship tier. The new
        tier will become effective on their next billing date.
      operationId: sponsorship/pending-tier-change
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-pending-tier-change'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-tier-changed:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsor changed the tier of their sponsorship and the change has taken
        effect. If a sponsor upgraded their tier, the change took effect
        immediately. If a sponsor downgraded their tier, the change took effect
        at the beginning of the sponsor's next billing cycle.
      operationId: sponsorship/tier-changed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-tier-changed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  star-created:
    post:
      summary: >-
        This event occurs when there is activity relating to repository stars.
        For more information about stars, see "[Saving repositories with
        stars](https://docs.github.com/enterprise-server@3.9/get-started/exploring-projects-on-github/saving-repositories-with-stars)."
        For information about the APIs to manage stars, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#starredrepositoryconnection)
        or
        "[Starring](https://docs.github.com/enterprise-server@3.9/rest/activity/starring)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: Someone starred a repository.
      operationId: star/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#star
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-star-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: star
        supported-webhook-types:
          - repository
          - organization
          - app
  star-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to repository stars.
        For more information about stars, see "[Saving repositories with
        stars](https://docs.github.com/enterprise-server@3.9/get-started/exploring-projects-on-github/saving-repositories-with-stars)."
        For information about the APIs to manage stars, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#starredrepositoryconnection)
        or
        "[Starring](https://docs.github.com/enterprise-server@3.9/rest/activity/starring)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: Someone unstarred the repository.
      operationId: star/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#star
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-star-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: star
        supported-webhook-types:
          - repository
          - organization
          - app
  status:
    post:
      summary: >-
        This event occurs when the status of a Git commit changes. For example,
        commits can be marked as `error`, `failure`, `pending`, or `success`.
        For more information, see "[About status
        checks](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks)."
        For information about the APIs to manage commit statuses, see [the
        GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#status)
        or "[Commit
        statuses](https://docs.github.com/enterprise-server@3.9/rest/commits/statuses)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Commit statuses" repository permission.
      operationId: status
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#status
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-status'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: status
        supported-webhook-types:
          - repository
          - organization
          - app
  team-add:
    post:
      summary: >-
        This event occurs when a team is added to a repository.

        For more information, see "[Managing teams and people with access to
        your
        repository](https://docs.github.com/enterprise-server@3.9/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/managing-teams-and-people-with-access-to-your-repository)."


        For activity relating to teams, see the `teams` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      operationId: team-add
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team_add
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-add'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team_add
        supported-webhook-types:
          - repository
          - organization
          - app
  team-added-to-repository:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A team was granted access to a repository.
      operationId: team/added-to-repository
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-added-to-repository'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  team-created:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A team was created.
      operationId: team/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  team-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A team was deleted.
      operationId: team/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  team-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: The name, description, or visibility of a team was changed.
      operationId: team/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  team-removed-from-repository:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A team's access to a repository was removed.
      operationId: team/removed-from-repository
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-removed-from-repository'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  user-created:
    post:
      summary: >-
        This event occurs when there is activity relating to user accounts in an
        enterprise.
      description: A user account was added to the enterprise.
      operationId: user/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#user
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-user-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: true
        category: webhooks
        subcategory: user
        supported-webhook-types:
          - business
  user-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to user accounts in an
        enterprise.
      description: A user account was removed from the enterprise.
      operationId: user/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#user
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-user-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: true
        category: webhooks
        subcategory: user
        supported-webhook-types:
          - business
  watch-started:
    post:
      summary: >-
        This event occurs when there is activity relating to watching, or
        subscribing to, a repository. For more information about watching, see
        "[Managing your
        subscriptions](https://docs.github.com/enterprise-server@3.9/account-and-profile/managing-subscriptions-and-notifications-on-github/managing-subscriptions-for-activity-on-github/managing-your-subscriptions)."
        For information about the APIs to manage watching, see
        "[Watching](https://docs.github.com/enterprise-server@3.9/rest/activity/watching)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: Someone started watching the repository.
      operationId: watch/started
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#watch
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-watch-started'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: watch
        supported-webhook-types:
          - repository
          - organization
          - app
  workflow-dispatch:
    post:
      summary: >-
        This event occurs when a GitHub Actions workflow is manually triggered.
        For more information, see "[Manually running a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/managing-workflow-runs/manually-running-a-workflow)."


        For activity relating to workflow runs, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      operationId: workflow-dispatch
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_dispatch
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-dispatch'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_dispatch
        supported-webhook-types:
          - app
  workflow-job-completed:
    post:
      summary: >-
        This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow
        jobs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow
        run, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: >-
        A job in a workflow run finished. This event occurs when a job in a
        workflow is completed, regardless of whether the job was successful or
        unsuccessful.
      operationId: workflow-job/completed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_job
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-completed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_job
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-job-in-progress:
    post:
      summary: >-
        This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow
        jobs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow
        run, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A job in a workflow run started processing on a runner.
      operationId: workflow-job/in-progress
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_job
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-in-progress'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_job
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-job-queued:
    post:
      summary: >-
        This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow
        jobs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow
        run, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A job in a workflow run was created.
      operationId: workflow-job/queued
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_job
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-queued'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_job
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-job-waiting:
    post:
      summary: >-
        This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow
        jobs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow
        run, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A job in a workflow run was created and is waiting for approvals.
      operationId: workflow-job/waiting
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_job
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-waiting'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_job
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-run-completed:
    post:
      summary: >-
        This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About
        workflows](https://docs.github.com/enterprise-server@3.9/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#workflowrun)
        or "[Workflow
        runs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-runs)"
        in the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: >-
        A workflow run finished. This event occurs when a workflow run is
        completed, regardless of whether the workflow was successful or
        unsuccessful.
      operationId: workflow-run/completed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-completed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_run
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-run-in-progress:
    post:
      summary: >-
        This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About
        workflows](https://docs.github.com/enterprise-server@3.9/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#workflowrun)
        or "[Workflow
        runs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-runs)"
        in the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A workflow run started processing on a runner.
      operationId: workflow-run/in-progress
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-in-progress'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_run
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-run-requested:
    post:
      summary: >-
        This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About
        workflows](https://docs.github.com/enterprise-server@3.9/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#workflowrun)
        or "[Workflow
        runs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-runs)"
        in the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A workflow run was triggered.
      operationId: workflow-run/requested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-requested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_run
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
components:
  schemas:
    enterprise-organization-overview:
      title: Enterprise Organization Stats
      type: object
      properties:
        total_orgs:
          type: integer
        disabled_orgs:
          type: integer
        total_teams:
          type: integer
        total_team_members:
          type: integer
      required:
        - total_orgs
        - disabled_orgs
        - total_teams
        - total_team_members
    organization-full:
      title: Organization Full
      description: Organization Full
      type: object
      properties:
        login:
          type: string
          example: github
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/repos
        events_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/events
        hooks_url:
          type: string
          example: https://api.github.com/orgs/github/hooks
        issues_url:
          type: string
          example: https://api.github.com/orgs/github/issues
        members_url:
          type: string
          example: https://api.github.com/orgs/github/members{/member}
        public_members_url:
          type: string
          example: https://api.github.com/orgs/github/public_members{/member}
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
        description:
          type: string
          example: A great organization
          nullable: true
        name:
          type: string
          example: github
        company:
          type: string
          example: GitHub
        blog:
          type: string
          format: uri
          example: https://github.com/blog
        location:
          type: string
          example: San Francisco
        email:
          type: string
          format: email
          example: octocat@github.com
        twitter_username:
          type: string
          example: github
          nullable: true
        is_verified:
          type: boolean
          example: true
        has_organization_projects:
          type: boolean
          example: true
        has_repository_projects:
          type: boolean
          example: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        type:
          type: string
          example: Organization
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        private_gists:
          type: integer
          example: 81
          nullable: true
        disk_usage:
          type: integer
          example: 10000
          nullable: true
        collaborators:
          type: integer
          example: 8
          nullable: true
        billing_email:
          type: string
          format: email
          example: org@example.com
          nullable: true
        plan:
          type: object
          properties:
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
            filled_seats:
              type: integer
            seats:
              type: integer
          required:
            - name
            - space
            - private_repos
        default_repository_permission:
          type: string
          nullable: true
        members_can_create_repositories:
          type: boolean
          example: true
          nullable: true
        two_factor_requirement_enabled:
          type: boolean
          example: true
          nullable: true
        members_allowed_repository_creation_type:
          type: string
          example: all
        members_can_create_public_repositories:
          type: boolean
          example: true
        members_can_create_private_repositories:
          type: boolean
          example: true
        members_can_create_internal_repositories:
          type: boolean
          example: true
        members_can_create_pages:
          type: boolean
          example: true
        members_can_create_public_pages:
          type: boolean
          example: true
        members_can_create_private_pages:
          type: boolean
          example: true
        members_can_fork_private_repositories:
          type: boolean
          example: false
          nullable: true
        web_commit_signoff_required:
          type: boolean
          example: false
        advanced_security_enabled_for_new_repositories:
          type: boolean
          example: false
          description: >-
            Whether GitHub Advanced Security is enabled for new repositories and
            repositories transferred to this organization.


            This field is only visible to organization owners or members of a
            team with the security manager role.
        dependabot_alerts_enabled_for_new_repositories:
          type: boolean
          example: false
          description: >-
            Whether GitHub Advanced Security is automatically enabled for new
            repositories and repositories transferred to

            this organization.


            This field is only visible to organization owners or members of a
            team with the security manager role.
        dependabot_security_updates_enabled_for_new_repositories:
          type: boolean
          example: false
          description: >-
            Whether dependabot security updates are automatically enabled for
            new repositories and repositories transferred

            to this organization.


            This field is only visible to organization owners or members of a
            team with the security manager role.
        dependency_graph_enabled_for_new_repositories:
          type: boolean
          example: false
          description: >-
            Whether dependency graph is automatically enabled for new
            repositories and repositories transferred to this

            organization.


            This field is only visible to organization owners or members of a
            team with the security manager role.
        secret_scanning_enabled_for_new_repositories:
          type: boolean
          example: false
          description: >-
            Whether secret scanning is automatically enabled for new
            repositories and repositories transferred to this

            organization.


            This field is only visible to organization owners or members of a
            team with the security manager role.
        secret_scanning_push_protection_enabled_for_new_repositories:
          type: boolean
          example: false
          description: >-
            Whether secret scanning push protection is automatically enabled for
            new repositories and repositories

            transferred to this organization.


            This field is only visible to organization owners or members of a
            team with the security manager role.
        secret_scanning_push_protection_custom_link_enabled:
          type: boolean
          example: false
          description: >-
            Whether a custom link is shown to contributors who are blocked from
            pushing a secret by push protection.
        secret_scanning_push_protection_custom_link:
          type: string
          example: https://github.com/test-org/test-repo/blob/main/README.md
          nullable: true
          description: >-
            An optional URL string to display to contributors who are blocked
            from pushing a secret.
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        updated_at:
          type: string
          format: date-time
      required:
        - login
        - url
        - id
        - node_id
        - repos_url
        - events_url
        - hooks_url
        - issues_url
        - members_url
        - public_members_url
        - avatar_url
        - description
        - html_url
        - has_organization_projects
        - has_repository_projects
        - public_repos
        - public_gists
        - followers
        - following
        - type
        - created_at
        - updated_at
        - archived_at
    actions-cache-usage-org-enterprise:
      type: object
      properties:
        total_active_caches_count:
          type: integer
          description: >-
            The count of active caches across all repositories of an enterprise
            or an organization.
        total_active_caches_size_in_bytes:
          type: integer
          description: >-
            The total size in bytes of all active cache items across all
            repositories of an enterprise or an organization.
      required:
        - total_active_caches_count
        - total_active_caches_size_in_bytes
    oidc-custom-sub:
      title: Actions OIDC Subject customization
      description: Actions OIDC Subject customization
      type: object
      properties:
        include_claim_keys:
          description: >-
            Array of unique strings. Each claim key can only contain
            alphanumeric characters and underscores.
          type: array
          items:
            type: string
      required:
        - include_claim_keys
    actions-organization-permissions:
      type: object
      properties:
        enabled_repositories:
          $ref: '#/components/schemas/enabled-repositories'
        selected_repositories_url:
          type: string
          description: >-
            The API URL to use to get or set the selected repositories that are
            allowed to run GitHub Actions, when `enabled_repositories` is set to
            `selected`.
        allowed_actions:
          $ref: '#/components/schemas/allowed-actions'
        selected_actions_url:
          $ref: '#/components/schemas/selected-actions-url'
      required:
        - enabled_repositories
    selected-actions:
      type: object
      properties:
        github_owned_allowed:
          type: boolean
          description: >-
            Whether GitHub-owned actions are allowed. For example, this includes
            the actions in the `actions` organization.
        patterns_allowed:
          type: array
          description: >-
            Specifies a list of string-matching patterns to allow specific
            action(s). Wildcards, tags, and SHAs are allowed. For example,
            `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.
          items:
            type: string
      required:
        - github_owned_allowed
        - patterns_allowed
    actions-get-default-workflow-permissions:
      type: object
      properties:
        default_workflow_permissions:
          $ref: '#/components/schemas/actions-default-workflow-permissions'
        can_approve_pull_request_reviews:
          $ref: '#/components/schemas/actions-can-approve-pull-request-reviews'
      required:
        - default_workflow_permissions
        - can_approve_pull_request_reviews
    runner-groups-org:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        visibility:
          type: string
        default:
          type: boolean
        selected_repositories_url:
          description: >-
            Link to the selected repositories resource for this runner group.
            Not present unless visibility was set to `selected`
          type: string
        runners_url:
          type: string
        inherited:
          type: boolean
        inherited_allows_public_repositories:
          type: boolean
        allows_public_repositories:
          type: boolean
        workflow_restrictions_read_only:
          description: >-
            If `true`, the `restricted_to_workflows` and `selected_workflows`
            fields cannot be modified.
          type: boolean
          default: false
        restricted_to_workflows:
          description: >-
            If `true`, the runner group will be restricted to running only the
            workflows specified in the `selected_workflows` array.
          type: boolean
          default: false
        selected_workflows:
          description: >-
            List of workflows the runner group should be allowed to run. This
            setting will be ignored unless `restricted_to_workflows` is set to
            `true`.
          type: array
          items:
            type: string
            description: >-
              Name of workflow the runner group should be allowed to run. Note
              that a ref, tag, or long SHA is required.
            example: octo-org/octo-repo/.github/workflows/deploy.yaml@main
      required:
        - id
        - name
        - visibility
        - default
        - runners_url
        - inherited
        - allows_public_repositories
    runner:
      title: Self hosted runners
      description: A self hosted runner
      type: object
      properties:
        id:
          description: The id of the runner.
          type: integer
          example: 5
        runner_group_id:
          description: The id of the runner group.
          type: integer
          example: 1
        name:
          description: The name of the runner.
          type: string
          example: iMac
        os:
          description: The Operating System of the runner.
          type: string
          example: macos
        status:
          description: The status of the runner.
          type: string
          example: online
        busy:
          type: boolean
        labels:
          type: array
          items:
            $ref: '#/components/schemas/runner-label'
      required:
        - id
        - name
        - os
        - status
        - busy
        - labels
    actions-public-key:
      title: ActionsPublicKey
      description: The public key used for setting Actions Secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: '1234567'
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
        id:
          type: integer
          example: 2
        url:
          type: string
          example: https://api.github.com/user/keys/2
        title:
          type: string
          example: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at:
          type: string
          example: '2011-01-26T19:01:12Z'
      required:
        - key_id
        - key
    organization-actions-secret:
      title: Actions Secret for an Organization
      description: Secrets for GitHub Actions for an organization.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        visibility:
          description: Visibility of a secret
          enum:
            - all
            - private
            - selected
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: >-
            https://api.github.com/organizations/org/secrets/my_secret/repositories
      required:
        - name
        - created_at
        - updated_at
        - visibility
    organization-actions-variable:
      title: Actions Variable for an Organization
      description: Organization variable for GitHub Actions.
      type: object
      properties:
        name:
          description: The name of the variable.
          example: USERNAME
          type: string
        value:
          description: The value of the variable.
          example: octocat
          type: string
        created_at:
          description: >-
            The date and time at which the variable was created, in ISO 8601
            format':' YYYY-MM-DDTHH:MM:SSZ.
          example: '2019-01-24T22:45:36.000Z'
          type: string
          format: date-time
        updated_at:
          description: >-
            The date and time at which the variable was last updated, in ISO
            8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          example: '2019-01-24T22:45:36.000Z'
          type: string
          format: date-time
        visibility:
          description: Visibility of a variable
          enum:
            - all
            - private
            - selected
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: >-
            https://api.github.com/organizations/org/variables/USERNAME/repositories
      required:
        - name
        - value
        - created_at
        - updated_at
        - visibility
    announcement-banner:
      title: Announcement Banner
      description: Announcement at either the repository, organization, or enterprise level
      type: object
      properties:
        announcement:
          $ref: '#/components/schemas/announcement-message'
        expires_at:
          $ref: '#/components/schemas/announcement-expiration'
        user_dismissible:
          $ref: '#/components/schemas/announcement-user-dismissible'
      required:
        - announcement
        - expires_at
        - user_dismissible
    organization-custom-repository-role:
      title: Organization Custom Repository Role
      description: Custom repository roles created by organization owners
      type: object
      properties:
        id:
          description: The unique identifier of the custom role.
          type: integer
        name:
          description: The name of the custom role.
          type: string
        description:
          description: >-
            A short description about who this role is for or what permissions
            it grants.
          type: string
          nullable: true
        base_role:
          type: string
          description: The system role from which this role inherits permissions.
          enum:
            - read
            - triage
            - write
            - maintain
        permissions:
          description: A list of additional permissions included in this role.
          type: array
          items:
            type: string
        organization:
          $ref: '#/components/schemas/simple-user'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - base_role
        - permissions
        - organization
        - created_at
        - updated_at
    dependabot-public-key:
      title: DependabotPublicKey
      description: The public key used for setting Dependabot Secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: '1234567'
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
      required:
        - key_id
        - key
    organization-dependabot-secret:
      title: Dependabot Secret for an Organization
      description: Secrets for GitHub Dependabot for an organization.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        visibility:
          description: Visibility of a secret
          enum:
            - all
            - private
            - selected
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: >-
            https://api.github.com/organizations/org/dependabot/secrets/my_secret/repositories
      required:
        - name
        - created_at
        - updated_at
        - visibility
    external-group:
      title: ExternalGroup
      description: Information about an external group's usage and its members
      type: object
      required:
        - group_id
        - group_name
        - teams
        - members
      properties:
        group_id:
          description: The internal ID of the group
          example: 1
          type: integer
        group_name:
          description: The display name for the group
          example: group-azuread-test
          type: string
        updated_at:
          description: The date when the group was last updated_at
          example: 2021-01-03 22:27:15:000 -700
          type: string
        teams:
          description: An array of teams linked to this group
          example:
            - team_id: 1
              team_name: team-test
            - team_id: 2
              team_name: team-test2
          type: array
          items:
            type: object
            required:
              - team_id
              - team_name
            properties:
              team_id:
                description: The id for a team
                example: 1
                type: integer
              team_name:
                description: The name of the team
                example: team-test
                type: string
        members:
          description: An array of external members linked to this group
          example:
            - member_id: 1
              member_login: mona-lisa_eocsaxrs
              member_name: Mona Lisa
              member_email: mona_lisa@github.com
            - member_id: 2
              member_login: octo-lisa_eocsaxrs
              member_name: Octo Lisa
              member_email: octo_lisa@github.com
          type: array
          items:
            type: object
            required:
              - member_id
              - member_login
              - member_name
              - member_email
            properties:
              member_id:
                description: The internal user ID of the identity
                example: 1
                type: integer
              member_login:
                description: The handle/login for the user
                example: mona-lisa_eocsaxrs
                type: string
              member_name:
                description: The user display name/profile name
                example: Mona Lisa
                type: string
              member_email:
                description: An email attached to a user
                example: mona_lisa@github.com
                type: string
    external-groups:
      title: ExternalGroups
      description: A list of external groups available to be connected to a team
      type: object
      properties:
        groups:
          description: An array of external groups available to be mapped to a team
          example:
            - group_id: 1
              group_name: group-azuread-test
              updated_at: 2021-01-03 22:27:15:000 -700
            - group_id: 2
              group_name: group-azuread-test2
              updated_at: 2021-06-03 22:27:15:000 -700
          type: array
          items:
            type: object
            required:
              - group_id
              - group_name
              - updated_at
            properties:
              group_id:
                description: The internal ID of the group
                example: 1
                type: integer
              group_name:
                description: The display name of the group
                example: group-azuread-test
                type: string
              updated_at:
                description: The time of the last update for this group
                example: 2019-06-03 22:27:15:000 -700
                type: string
    org-hook:
      title: Org Hook
      description: Org Hook
      type: object
      properties:
        id:
          type: integer
          example: 1
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1
        ping_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1/pings
        deliveries_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1/deliveries
        name:
          type: string
          example: web
        events:
          type: array
          example:
            - push
            - pull_request
          items:
            type: string
        active:
          type: boolean
          example: true
        config:
          type: object
          properties:
            url:
              type: string
              example: '"http://example.com/2"'
            insecure_ssl:
              type: string
              example: '"0"'
            content_type:
              type: string
              example: '"form"'
            secret:
              type: string
              example: '"********"'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        type:
          type: string
      required:
        - id
        - url
        - type
        - name
        - active
        - events
        - config
        - ping_url
        - created_at
        - updated_at
    webhook-config:
      title: Webhook Configuration
      description: Configuration object of the webhook
      type: object
      properties:
        url:
          $ref: '#/components/schemas/webhook-config-url'
        content_type:
          $ref: '#/components/schemas/webhook-config-content-type'
        secret:
          $ref: '#/components/schemas/webhook-config-secret'
        insecure_ssl:
          $ref: '#/components/schemas/webhook-config-insecure-ssl'
    hook-delivery:
      title: Webhook delivery
      description: Delivery made by a webhook.
      type: object
      properties:
        id:
          description: Unique identifier of the delivery.
          type: integer
          example: 42
        guid:
          description: >-
            Unique identifier for the event (shared with all deliveries for all
            webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the delivery was delivered.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Description of the status of the attempted delivery
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this event.
          type: integer
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          example: 123
          nullable: true
        url:
          description: The URL target of the delivery.
          type: string
          example: https://www.example.com
        request:
          type: object
          properties:
            headers:
              description: The request headers sent with the webhook delivery.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The webhook payload.
              type: object
              nullable: true
              additionalProperties: true
          required:
            - headers
            - payload
        response:
          type: object
          properties:
            headers:
              description: The response headers received when the delivery was made.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The response payload received.
              type: string
              nullable: true
              additionalProperties: true
          required:
            - headers
            - payload
      required:
        - id
        - guid
        - delivered_at
        - redelivery
        - duration
        - status
        - status_code
        - event
        - action
        - installation_id
        - repository_id
        - request
        - response
    installation:
      title: Installation
      description: Installation
      type: object
      properties:
        id:
          description: The ID of the installation.
          type: integer
          example: 1
        account:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/simple-user'
            - $ref: '#/components/schemas/enterprise'
        repository_selection:
          description: >-
            Describe whether all repositories have been selected or there's a
            selection involved
          type: string
          enum:
            - all
            - selected
        access_tokens_url:
          type: string
          format: uri
          example: https://api.github.com/app/installations/1/access_tokens
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/installation/repositories
        html_url:
          type: string
          format: uri
          example: https://github.com/organizations/github/settings/installations/1
        app_id:
          type: integer
          example: 1
        target_id:
          description: The ID of the user or organization this token is being scoped to.
          type: integer
        target_type:
          type: string
          example: Organization
        permissions:
          $ref: '#/components/schemas/app-permissions'
        events:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        single_file_name:
          type: string
          example: config.yaml
          nullable: true
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
            - config.yml
            - .github/issue_TEMPLATE.md
        app_slug:
          type: string
          example: github-actions
        suspended_by:
          $ref: '#/components/schemas/nullable-simple-user'
        suspended_at:
          type: string
          format: date-time
          nullable: true
        contact_email:
          type: string
          example: '"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com"'
          nullable: true
      required:
        - id
        - app_id
        - app_slug
        - target_id
        - target_type
        - single_file_name
        - repository_selection
        - access_tokens_url
        - html_url
        - repositories_url
        - events
        - account
        - permissions
        - created_at
        - updated_at
        - suspended_by
        - suspended_at
    org-membership:
      title: Org Membership
      description: Org Membership
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/memberships/defunkt
        state:
          type: string
          description: >-
            The state of the member in the organization. The `pending` state
            indicates the user has not yet accepted an invitation.
          example: active
          enum:
            - active
            - pending
        role:
          type: string
          description: The user's membership type in the organization.
          example: admin
          enum:
            - admin
            - member
            - billing_manager
        organization_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat
        organization:
          $ref: '#/components/schemas/organization-simple'
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        permissions:
          type: object
          properties:
            can_create_repository:
              type: boolean
          required:
            - can_create_repository
      required:
        - state
        - role
        - organization_url
        - url
        - organization
        - user
    migration:
      title: Migration
      description: A migration.
      type: object
      properties:
        id:
          type: integer
          example: 79
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        guid:
          type: string
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        state:
          type: string
          example: pending
        lock_repositories:
          type: boolean
          example: true
        exclude_metadata:
          type: boolean
        exclude_git_data:
          type: boolean
        exclude_attachments:
          type: boolean
        exclude_releases:
          type: boolean
        exclude_owner_projects:
          type: boolean
        org_metadata_only:
          type: boolean
        repositories:
          type: array
          description: >-
            The repositories included in the migration. Only returned for export
            migrations.
          items:
            $ref: '#/components/schemas/repository'
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octo-org/migrations/79
        created_at:
          type: string
          format: date-time
          example: '2015-07-06T15:33:38-07:00'
        updated_at:
          type: string
          format: date-time
          example: '2015-07-06T15:33:38-07:00'
        node_id:
          type: string
        archive_url:
          type: string
          format: uri
        exclude:
          description: >-
            Exclude related items from being returned in the response in order
            to improve performance of the request. The array can include any of:
            `"repositories"`.
          type: array
          items:
            description: >-
              Allowed values that can be passed to the exclude parameter. The
              array can include any of: `"repositories"`.
            type: string
      required:
        - id
        - node_id
        - owner
        - guid
        - state
        - lock_repositories
        - exclude_metadata
        - exclude_git_data
        - exclude_attachments
        - exclude_releases
        - exclude_owner_projects
        - org_metadata_only
        - repositories
        - url
        - created_at
        - updated_at
    package:
      title: Package
      description: A software package
      type: object
      properties:
        id:
          description: Unique identifier of the package.
          type: integer
          example: 1
        name:
          description: The name of the package.
          type: string
          example: super-linter
        package_type:
          type: string
          example: docker
          enum:
            - npm
            - maven
            - rubygems
            - docker
            - nuget
            - container
        url:
          type: string
          example: https://api.github.com/orgs/github/packages/container/super-linter
        html_url:
          type: string
          example: >-
            https://github.com/orgs/github/packages/container/package/super-linter
        version_count:
          description: The number of versions of the package.
          type: integer
          example: 1
        visibility:
          type: string
          example: private
          enum:
            - private
            - public
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        repository:
          $ref: '#/components/schemas/nullable-minimal-repository'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - package_type
        - visibility
        - url
        - html_url
        - version_count
        - created_at
        - updated_at
    package-version:
      title: Package Version
      description: A version of a software package
      type: object
      properties:
        id:
          description: Unique identifier of the package version.
          type: integer
          example: 1
        name:
          description: The name of the package version.
          type: string
          example: latest
        url:
          type: string
          example: >-
            https://api.github.com/orgs/github/packages/container/super-linter/versions/786068
        package_html_url:
          type: string
          example: >-
            https://github.com/orgs/github/packages/container/package/super-linter
        html_url:
          type: string
          example: >-
            https://github.com/orgs/github/packages/container/super-linter/786068
        license:
          type: string
          example: MIT
        description:
          type: string
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        deleted_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        metadata:
          type: object
          title: Package Version Metadata
          properties:
            package_type:
              type: string
              example: docker
              enum:
                - npm
                - maven
                - rubygems
                - docker
                - nuget
                - container
            container:
              type: object
              title: Container Metadata
              properties:
                tags:
                  type: array
                  items:
                    type: string
              required:
                - tags
            docker:
              type: object
              title: Docker Metadata
              properties:
                tag:
                  type: array
                  items:
                    type: string
              required:
                - tags
          required:
            - package_type
      required:
        - id
        - name
        - url
        - package_html_url
        - created_at
        - updated_at
    org-pre-receive-hook:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        enforcement:
          type: string
        configuration_url:
          type: string
        allow_downstream_configuration:
          type: boolean
    advanced-security-active-committers:
      type: object
      properties:
        total_advanced_security_committers:
          type: integer
          example: 25
        total_count:
          type: integer
          example: 2
        repositories:
          type: array
          items:
            $ref: >-
              #/components/schemas/advanced-security-active-committers-repository
      required:
        - repositories
    team-full:
      title: Full Team
      description: >-
        Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          example: 42
          type: integer
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          example: https://api.github.com/organizations/1/team/1
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        name:
          description: Name of the team
          example: Developers
          type: string
        slug:
          type: string
          example: justice-league
        description:
          type: string
          example: A great team.
          nullable: true
        privacy:
          description: The level of privacy this team should have
          type: string
          enum:
            - closed
            - secret
          example: closed
        permission:
          description: Permission that the team will have for its repositories
          example: push
          type: string
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        parent:
          $ref: '#/components/schemas/nullable-team-simple'
        members_count:
          type: integer
          example: 3
        repos_count:
          type: integer
          example: 10
        created_at:
          type: string
          format: date-time
          example: '2017-07-14T16:53:42Z'
        updated_at:
          type: string
          format: date-time
          example: '2017-08-17T12:37:15Z'
        organization:
          $ref: '#/components/schemas/team-organization'
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
        - id
        - node_id
        - url
        - members_url
        - name
        - description
        - permission
        - html_url
        - repositories_url
        - slug
        - created_at
        - updated_at
        - members_count
        - repos_count
        - organization
    team-discussion:
      title: Team Discussion
      description: >-
        A team discussion is a persistent record of a free-form conversation
        within a team.
      type: object
      properties:
        author:
          $ref: '#/components/schemas/nullable-simple-user'
        body:
          description: The main text of the discussion.
          example: Please suggest improvements to our workflow in comments.
          type: string
        body_html:
          type: string
          example: <p>Hi! This is an area for us to collaborate as a team</p>
        body_version:
          description: >-
            The current version of the body content. If provided, this update
            operation will be rejected if the given version does not match the
            latest version on the server.
          example: 0307116bbf7ced493b8d8a346c650b71
          type: string
        comments_count:
          type: integer
          example: 0
        comments_url:
          type: string
          format: uri
          example: >-
            https://api.github.com/organizations/1/team/2343027/discussions/1/comments
        created_at:
          type: string
          format: date-time
          example: '2018-01-25T18:56:31Z'
        last_edited_at:
          type: string
          format: date-time
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id:
          type: string
          example: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number:
          description: The unique sequence number of a team discussion.
          example: 42
          type: integer
        pinned:
          description: Whether or not this discussion should be pinned for easy retrieval.
          example: true
          type: boolean
        private:
          description: >-
            Whether or not this discussion should be restricted to team members
            and organization owners.
          example: true
          type: boolean
        team_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027
        title:
          description: The title of the discussion.
          example: How can we improve our workflow?
          type: string
        updated_at:
          type: string
          format: date-time
          example: '2018-01-25T18:56:31Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027/discussions/1
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
        - author
        - body
        - body_html
        - body_version
        - comments_count
        - comments_url
        - created_at
        - last_edited_at
        - html_url
        - pinned
        - private
        - node_id
        - number
        - team_url
        - title
        - updated_at
        - url
    team-discussion-comment:
      title: Team Discussion Comment
      description: A reply to a discussion within a team.
      type: object
      properties:
        author:
          $ref: '#/components/schemas/nullable-simple-user'
        body:
          description: The main text of the comment.
          example: I agree with this suggestion.
          type: string
        body_html:
          type: string
          example: <p>Do you like apples?</p>
        body_version:
          description: >-
            The current version of the body content. If provided, this update
            operation will be rejected if the given version does not match the
            latest version on the server.
          example: 0307116bbf7ced493b8d8a346c650b71
          type: string
        created_at:
          type: string
          format: date-time
          example: '2018-01-15T23:53:58Z'
        last_edited_at:
          type: string
          format: date-time
          nullable: true
        discussion_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2403582/discussions/1
        html_url:
          type: string
          format: uri
          example: >-
            https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id:
          type: string
          example: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number:
          description: The unique sequence number of a team discussion comment.
          example: 42
          type: integer
        updated_at:
          type: string
          format: date-time
          example: '2018-01-15T23:53:58Z'
        url:
          type: string
          format: uri
          example: >-
            https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
        - author
        - body
        - body_html
        - body_version
        - created_at
        - last_edited_at
        - discussion_url
        - html_url
        - node_id
        - number
        - updated_at
        - url
    reaction:
      title: Reaction
      description: >-
        Reactions to conversations provide a way to help people express their
        feelings more simply and effectively.
      type: object
      properties:
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDg6UmVhY3Rpb24x
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        content:
          description: The reaction to use
          example: heart
          type: string
          enum:
            - '+1'
            - '-1'
            - laugh
            - confused
            - heart
            - hooray
            - rocket
            - eyes
        created_at:
          type: string
          format: date-time
          example: '2016-05-20T20:09:31Z'
      required:
        - id
        - node_id
        - user
        - content
        - created_at
    team-membership:
      title: Team Membership
      description: Team Membership
      type: object
      properties:
        url:
          type: string
          format: uri
        role:
          description: The role of the user in the team.
          enum:
            - member
            - maintainer
          default: member
          example: member
          type: string
        state:
          description: The state of the user's membership in the team.
          type: string
          enum:
            - active
            - pending
      required:
        - role
        - state
        - url
    team-project:
      title: Team Project
      description: A team's access to a project.
      type: object
      properties:
        owner_url:
          type: string
        url:
          type: string
        html_url:
          type: string
        columns_url:
          type: string
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        body:
          type: string
          nullable: true
        number:
          type: integer
        state:
          type: string
        creator:
          $ref: '#/components/schemas/simple-user'
        created_at:
          type: string
        updated_at:
          type: string
        organization_permission:
          description: >-
            The organization permission for this project. Only present when
            owner is an organization.
          type: string
        private:
          description: >-
            Whether the project is private or not. Only present when owner is an
            organization.
          type: boolean
        permissions:
          type: object
          properties:
            read:
              type: boolean
            write:
              type: boolean
            admin:
              type: boolean
          required:
            - read
            - write
            - admin
      required:
        - owner_url
        - url
        - html_url
        - columns_url
        - id
        - node_id
        - name
        - body
        - number
        - state
        - creator
        - created_at
        - updated_at
        - permissions
    team-repository:
      title: Team Repository
      description: A team's access to a repository.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
            - admin
            - pull
            - push
        role_name:
          type: string
          example: admin
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: >-
            http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: >-
            http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: >-
            http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: >-
            http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: >-
            http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: >-
            http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: >-
            Whether this repository acts as a template that can be used to
            generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          default: false
          type: boolean
          example: false
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
          example: false
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
