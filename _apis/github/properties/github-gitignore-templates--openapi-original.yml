openapi: 3.0.3
info:
  version: 1.1.4
  title: ' gitignore/templates/'
  description: Needs description.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: ghes
  x-github-release: 3.9
tags: []
servers:
  - url: '{protocol}://{hostname}/api/v3'
    variables:
      hostname:
        description: Self-hosted Enterprise Server hostname
        default: HOSTNAME
      protocol:
        description: Self-hosted Enterprise Server protocol
        default: http
externalDocs:
  description: GitHub Enterprise Developer Docs
  url: https://docs.github.com/enterprise-server@3.9/rest/
paths:
  /gitignore/templates/{name}:
    get:
      summary: Get a gitignore template
      description: >-
        Get the content of a gitignore template.


        This endpoint supports the following custom media types. For more
        information, see "[Media
        types](https://docs.github.com/enterprise-server@3.9/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.raw+json`**: Returns the raw .gitignore
        contents.
      operationId: gitignore/get-template
      tags:
        - - - - gitignore
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/gitignore/gitignore#get-a-gitignore-template
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gitignore-template'
              examples:
                default:
                  $ref: '#/components/examples/gitignore-template'
        '304':
          $ref: '#/components/responses/not_modified'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: gitignore
        subcategory: gitignore
x-webhooks:
  branch-protection-rule-created:
    post:
      summary: >-
        This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected
        branches](https://docs.github.com/enterprise-server@3.9/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see
        [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#branchprotectionrule)
        or "[Branch
        protection](https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Administration" repository permission.
      description: A branch protection rule was created.
      operationId: branch-protection-rule/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#branch_protection_rule
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: branch_protection_rule
        supported-webhook-types:
          - repository
          - organization
          - app
  branch-protection-rule-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected
        branches](https://docs.github.com/enterprise-server@3.9/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see
        [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#branchprotectionrule)
        or "[Branch
        protection](https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Administration" repository permission.
      description: A branch protection rule was deleted.
      operationId: branch-protection-rule/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#branch_protection_rule
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: branch_protection_rule
        supported-webhook-types:
          - repository
          - organization
          - app
  branch-protection-rule-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected
        branches](https://docs.github.com/enterprise-server@3.9/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see
        [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#branchprotectionrule)
        or "[Branch
        protection](https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Administration" repository permission.
      description: A branch protection rule was edited.
      operationId: branch-protection-rule/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#branch_protection_rule
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: branch_protection_rule
        supported-webhook-types:
          - repository
          - organization
          - app
  cache-sync:
    post:
      summary: >-
        This event occurs when a Git ref has been successfully synced to a cache
        replica. For more information, see "[About repository
        caching](https://docs.github.com/enterprise-server@3.9/admin/enterprise-management/caching-repositories/about-repository-caching)."
      operationId: cache-sync
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#cache_sync
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-cache-sync'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: cache_sync
        supported-webhook-types:
          - repository
          - organization
          - app
  check-run-completed:
    post:
      summary: >-
        This event occurs when there is activity relating to a check run. For
        information about check runs, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checkrun)
        or "[Check
        Runs](https://docs.github.com/enterprise-server@3.9/rest/checks/runs)"
        in the REST API documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" repository permission. To receive the
        `rerequested` and `requested_action` event types, the app must have at
        least write-level access for the "Checks" permission. GitHub Apps with
        write-level access for the "Checks" permission are automatically
        subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `created` and `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check run was created. Pushes to a branch in a forked repository are not
        detected and return an empty `pull_requests` array and a `null` value
        for `head_branch`.
      description: A check run was completed, and a conclusion is available.
      operationId: check-run/completed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-completed'
            examples:
              default:
                $ref: '#/components/examples/check-run-completed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-completed-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/check-run-completed-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: check_run
        supported-webhook-types:
          - repository
          - organization
          - app
  check-run-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a check run. For
        information about check runs, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checkrun)
        or "[Check
        Runs](https://docs.github.com/enterprise-server@3.9/rest/checks/runs)"
        in the REST API documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" repository permission. To receive the
        `rerequested` and `requested_action` event types, the app must have at
        least write-level access for the "Checks" permission. GitHub Apps with
        write-level access for the "Checks" permission are automatically
        subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `created` and `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check run was created. Pushes to a branch in a forked repository are not
        detected and return an empty `pull_requests` array and a `null` value
        for `head_branch`.
      description: A new check run was created.
      operationId: check-run/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-created'
            examples:
              default:
                $ref: '#/components/examples/check-run-created'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-created-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/check-run-created-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: check_run
        supported-webhook-types:
          - repository
          - organization
          - app
  check-run-requested-action:
    post:
      summary: >-
        This event occurs when there is activity relating to a check run. For
        information about check runs, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checkrun)
        or "[Check
        Runs](https://docs.github.com/enterprise-server@3.9/rest/checks/runs)"
        in the REST API documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" repository permission. To receive the
        `rerequested` and `requested_action` event types, the app must have at
        least write-level access for the "Checks" permission. GitHub Apps with
        write-level access for the "Checks" permission are automatically
        subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `created` and `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check run was created. Pushes to a branch in a forked repository are not
        detected and return an empty `pull_requests` array and a `null` value
        for `head_branch`.
      description: >-
        A check run completed, and someone requested a followup action that your
        app provides. Only the GitHub App someone requests to perform an action
        will receive the `requested_action` payload. For more information, see
        "[Creating CI tests with the Checks
        API](https://docs.github.com/enterprise-server@3.9/developers/apps/guides/creating-ci-tests-with-the-checks-api)."
      operationId: check-run/requested-action
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-requested-action'
            examples:
              default:
                $ref: '#/components/examples/check-run-requested-action'
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/webhook-check-run-requested-action-form-encoded
            examples:
              default:
                $ref: '#/components/examples/check-run-requested-action-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: check_run
        supported-webhook-types:
          - repository
          - organization
          - app
  check-run-rerequested:
    post:
      summary: >-
        This event occurs when there is activity relating to a check run. For
        information about check runs, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checkrun)
        or "[Check
        Runs](https://docs.github.com/enterprise-server@3.9/rest/checks/runs)"
        in the REST API documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" repository permission. To receive the
        `rerequested` and `requested_action` event types, the app must have at
        least write-level access for the "Checks" permission. GitHub Apps with
        write-level access for the "Checks" permission are automatically
        subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `created` and `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check run was created. Pushes to a branch in a forked repository are not
        detected and return an empty `pull_requests` array and a `null` value
        for `head_branch`.
      description: >-
        Someone requested to re-run a check run. Only the GitHub App that
        someone requests to re-run the check will receive the `rerequested`
        payload.
      operationId: check-run/rerequested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-rerequested'
            examples:
              default:
                $ref: '#/components/examples/check-run-rerequested'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-rerequested-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/check-run-rerequested-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: check_run
        supported-webhook-types:
          - repository
          - organization
          - app
  check-suite-completed:
    post:
      summary: >-
        This event occurs when there is activity relating to a check suite. For
        information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checksuite)
        or "[Check
        Suites](https://docs.github.com/enterprise-server@3.9/rest/checks/suites)"
        in the REST API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" permission. To receive the `requested` and
        `rerequested` event types, the app must have at least write-level access
        for the "Checks" permission. GitHub Apps with write-level access for the
        "Checks" permission are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check suite was created. Pushes to a branch in a forked repository are
        not detected and return an empty `pull_requests` array and a `null`
        value for `head_branch`.
      description: >-
        All check runs in a check suite have completed, and a conclusion is
        available.
      operationId: check-suite/completed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_suite
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-completed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: check_suite
        supported-webhook-types:
          - repository
          - organization
          - app
  check-suite-requested:
    post:
      summary: >-
        This event occurs when there is activity relating to a check suite. For
        information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checksuite)
        or "[Check
        Suites](https://docs.github.com/enterprise-server@3.9/rest/checks/suites)"
        in the REST API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" permission. To receive the `requested` and
        `rerequested` event types, the app must have at least write-level access
        for the "Checks" permission. GitHub Apps with write-level access for the
        "Checks" permission are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check suite was created. Pushes to a branch in a forked repository are
        not detected and return an empty `pull_requests` array and a `null`
        value for `head_branch`.
      description: >-
        Someone requested to run a check suite. By default, check suites are
        automatically created when you create a check run. For more information,
        see [the GraphQL API documentation for creating a check
        run](https://docs.github.com/enterprise-server@3.9/graphql/reference/mutations#createcheckrun)
        or "[Create a check
        run](https://docs.github.com/enterprise-server@3.9/rest/checks/runs#create-a-check-run)"
        in the REST API documentation.
      operationId: check-suite/requested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_suite
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-requested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: check_suite
        supported-webhook-types:
          - repository
          - organization
          - app
  check-suite-rerequested:
    post:
      summary: >-
        This event occurs when there is activity relating to a check suite. For
        information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checksuite)
        or "[Check
        Suites](https://docs.github.com/enterprise-server@3.9/rest/checks/suites)"
        in the REST API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" permission. To receive the `requested` and
        `rerequested` event types, the app must have at least write-level access
        for the "Checks" permission. GitHub Apps with write-level access for the
        "Checks" permission are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check suite was created. Pushes to a branch in a forked repository are
        not detected and return an empty `pull_requests` array and a `null`
        value for `head_branch`.
      description: >-
        Someone requested to re-run the check runs in a check suite. For more
        information, see [the GraphQL API documentation for creating a check
        suite](https://docs.github.com/enterprise-server@3.9/graphql/reference/mutations#createchecksuite)
        or "[Create a check
        suite](https://docs.github.com/enterprise-server@3.9/rest/checks/suites#create-a-check-suite)"
        in the REST API documentation.
      operationId: check-suite/rerequested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_suite
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-rerequested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: check_suite
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-appeared-in-branch:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: >-
        A previously created code scanning alert appeared in another branch.
        This can happen when a branch is merged into or created from a branch
        with a pre-existing code scanning alert.
      operationId: code-scanning-alert/appeared-in-branch
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-code-scanning-alert-appeared-in-branch
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-closed-by-user:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: Someone closed a code scanning alert.
      operationId: code-scanning-alert/closed-by-user
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-closed-by-user'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-created:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: A code scanning alert was created in a repository.
      operationId: code-scanning-alert/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-fixed:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: A code scanning alert was fixed in a branch by a commit.
      operationId: code-scanning-alert/fixed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-fixed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: A previously fixed code scanning alert reappeared in a branch.
      operationId: code-scanning-alert/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-reopened-by-user:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: Someone reopened a code scanning alert.
      operationId: code-scanning-alert/reopened-by-user
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-code-scanning-alert-reopened-by-user
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  commit-comment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to commit comments.
        For more information about commit comments, see "[Commenting on a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request)."
        For information about the APIs to manage commit comments, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#commitcomment)
        or "[Commit
        comments](https://docs.github.com/enterprise-server@3.9/rest/commits/comments)"
        in the REST API documentation.


        For activity relating to comments on pull request reviews, use the
        `pull_request_review_comment` event. For activity relating to issue
        comments, use the `issue_comment` event. For activity relating to
        discussion comments, use the `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: Someone commented on a commit.
      operationId: commit-comment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#commit_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-commit-comment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: commit_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  create:
    post:
      summary: >-
        This event occurs when a Git branch or tag is created.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.


        **Notes**:

        - This event will not occur when more than three tags are created at
        once.

        - Payloads are capped at 25 MB. If an event generates a larger payload,
        GitHub will not deliver a payload for that webhook event. This may
        happen, for example, if many branches or tags are pushed at once. We
        suggest monitoring your payload size to ensure delivery.
      operationId: create
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#create
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-create'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: create
        supported-webhook-types:
          - repository
          - organization
          - app
  delete:
    post:
      summary: >-
        This event occurs when a Git branch or tag is deleted. To subscribe to
        all pushes to a repository, including

        branch and tag deletions, use the [`push`](#push) webhook event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.


        **Note**: This event will not occur when more than three tags are
        deleted at once.
      operationId: delete
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#delete
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-delete'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: delete
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-created:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: >-
        A manifest file change introduced a vulnerable dependency, or a GitHub
        Security Advisory was published and an existing dependency was found to
        be vulnerable.
      operationId: dependabot-alert/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-dismissed:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: A Dependabot alert was manually closed.
      operationId: dependabot-alert/dismissed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-dismissed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-fixed:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: A manifest file change removed a vulnerability.
      operationId: dependabot-alert/fixed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-fixed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-reintroduced:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: >-
        A manifest file change introduced a vulnerable dependency that had
        previously been fixed.
      operationId: dependabot-alert/reintroduced
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-reintroduced'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: A Dependabot alert was manually reopened.
      operationId: dependabot-alert/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  deploy-key-created:
    post:
      summary: >-
        This event occurs when there is activity relating to deploy keys. For
        more information, see "[Managing deploy
        keys](https://docs.github.com/enterprise-server@3.9/developers/overview/managing-deploy-keys)."
        For information about the APIs to manage deploy keys, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deploykey)
        or "[Deploy
        keys](https://docs.github.com/enterprise-server@3.9/rest/deploy-keys)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deploy key was created.
      operationId: deploy-key/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deploy_key
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deploy-key-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deploy_key
        supported-webhook-types:
          - repository
          - organization
          - app
  deploy-key-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to deploy keys. For
        more information, see "[Managing deploy
        keys](https://docs.github.com/enterprise-server@3.9/developers/overview/managing-deploy-keys)."
        For information about the APIs to manage deploy keys, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deploykey)
        or "[Deploy
        keys](https://docs.github.com/enterprise-server@3.9/rest/deploy-keys)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deploy key was deleted.
      operationId: deploy-key/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deploy_key
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deploy-key-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deploy_key
        supported-webhook-types:
          - repository
          - organization
          - app
  deployment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to deployments. For
        more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment status, use the `deployment_status`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deployment was created.
      operationId: deployment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment
        supported-webhook-types:
          - repository
          - organization
          - app
  deployment-review-approved:
    post:
      summary: >-
        This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment creation or deployment status, use
        the `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deployment review was approved.
      operationId: deployment-review/approved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-approved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment_review
        supported-webhook-types:
          - app
  deployment-review-rejected:
    post:
      summary: >-
        This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment creation or deployment status, use
        the `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deployment review was rejected.
      operationId: deployment-review/rejected
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-rejected'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment_review
        supported-webhook-types:
          - app
  deployment-review-requested:
    post:
      summary: >-
        This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment creation or deployment status, use
        the `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deployment review was requested.
      operationId: deployment-review/requested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-requested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment_review
        supported-webhook-types:
          - app
  deployment-status-created:
    post:
      summary: >-
        This event occurs when there is activity relating to deployment
        statuses. For more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment creation, use the `deployment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A new deployment status was created.
      operationId: deployment-status/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment_status
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-status-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment_status
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-answered:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on the discussion was marked as the answer.
      operationId: discussion/answered
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-answered'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-category-changed:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: The category of a discussion was changed.
      operationId: discussion/category-changed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-category-changed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was closed.
      operationId: discussion/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: discussions
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.9.0
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-comment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on a
        discussion. For more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a
        discussion, use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on a discussion was created.
      operationId: discussion-comment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-comment-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on a
        discussion. For more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a
        discussion, use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on a discussion was deleted.
      operationId: discussion-comment/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-comment-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on a
        discussion. For more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a
        discussion, use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on a discussion was edited.
      operationId: discussion-comment/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was created.
      operationId: discussion/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was deleted.
      operationId: discussion/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: >-
        The title or body on a discussion was edited, or the category of the
        discussion was changed.
      operationId: discussion/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-labeled:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A label was added to a discussion.
      operationId: discussion/labeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-labeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-locked:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was locked.
      operationId: discussion/locked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-locked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-pinned:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was pinned.
      operationId: discussion/pinned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-pinned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was reopened.
      operationId: discussion/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: discussions
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.9.0
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-transferred:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was transferred to another repository.
      operationId: discussion/transferred
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-transferred'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-unanswered:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on the discussion was unmarked as the answer.
      operationId: discussion/unanswered
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unanswered'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-unlabeled:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A label was removed from a discussion.
      operationId: discussion/unlabeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unlabeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-unlocked:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was unlocked.
      operationId: discussion/unlocked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unlocked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-unpinned:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was unpinned.
      operationId: discussion/unpinned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unpinned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  enterprise-anonymous-access-disabled:
    post:
      summary: >-
        This event occurs when there is activity relating to anonymous Git read
        access in an enterprise. For more information, see "[Enforcing
        repository management policies in your
        enterprise](https://docs.github.com/enterprise-server@3.9/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#configuring-anonymous-git-read-access)."
      description: Anonymous Git read access was disabled.
      operationId: enterprise/anonymous-access-disabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#enterprise
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-enterprise-anonymous-access-disabled
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: enterprise
        supported-webhook-types:
          - business
  enterprise-anonymous-access-enabled:
    post:
      summary: >-
        This event occurs when there is activity relating to anonymous Git read
        access in an enterprise. For more information, see "[Enforcing
        repository management policies in your
        enterprise](https://docs.github.com/enterprise-server@3.9/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#configuring-anonymous-git-read-access)."
      description: Anonymous Git read access was enabled.
      operationId: enterprise/anonymous-access-enabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#enterprise
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-enterprise-anonymous-access-enabled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: enterprise
        supported-webhook-types:
          - business
  fork:
    post:
      summary: >-
        This event occurs when someone forks a repository. For more information,
        see "[Fork a
        repo](https://docs.github.com/enterprise-server@3.9/get-started/quickstart/fork-a-repo)."
        For information about the API to manage forks, see
        "[Forks](https://docs.github.com/enterprise-server@3.9/rest/repos/forks)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      operationId: fork
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#fork
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-fork'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: fork
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  github-app-authorization-revoked:
    post:
      summary: >-
        This event occurs when a user revokes their authorization of a GitHub
        App. For more information, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the API to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.


        A GitHub App receives this webhook by default and cannot unsubscribe
        from this event.


        Anyone can revoke their authorization of a GitHub App from their [GitHub
        account settings page](https://github.com/settings/apps/authorizations).
        Revoking the authorization of a GitHub App does not uninstall the GitHub
        App. You should program your GitHub App so that when it receives this
        webhook, it stops calling the API on behalf of the person who revoked
        the token. If your GitHub App continues to use a revoked access token,
        it will receive the `401 Bad Credentials` error. For details about
        requests with a user access token, which require GitHub App
        authorization, see "[Authenticating with a GitHub App on behalf of a
        user](https://docs.github.com/enterprise-server@3.9/apps/creating-github-apps/authenticating-with-a-github-app/authenticating-with-a-github-app-on-behalf-of-a-user)."
      description: Someone revoked their authorization of a GitHub App.
      operationId: github-app-authorization/revoked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#github_app_authorization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-github-app-authorization-revoked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: github_app_authorization
        supported-webhook-types:
          - app
  gollum:
    post:
      summary: >-
        This event occurs when someone creates or updates a wiki page. For more
        information, see "[About
        wikis](https://docs.github.com/enterprise-server@3.9/communities/documenting-your-project-with-wikis/about-wikis)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      operationId: gollum
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#gollum
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-gollum'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: gollum
        supported-webhook-types:
          - repository
          - organization
          - app
  installation-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: Someone installed a GitHub App on a user or organization account.
      operationId: installation/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  installation-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        Someone uninstalled a GitHub App from their user or organization
        account.
      operationId: installation/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  installation-new-permissions-accepted:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: Someone granted new permissions to a GitHub App.
      operationId: installation/new-permissions-accepted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-installation-new-permissions-accepted
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  installation-repositories-added:
    post:
      summary: >-
        This event occurs when there is activity relating to which repositories
        a GitHub App installation can access. All GitHub Apps receive this event
        by default. You cannot manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        A GitHub App installation was granted access to one or more
        repositories.
      operationId: installation-repositories/added
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation_repositories
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-repositories-added'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation_repositories
        supported-webhook-types:
          - app
  installation-repositories-removed:
    post:
      summary: >-
        This event occurs when there is activity relating to which repositories
        a GitHub App installation can access. All GitHub Apps receive this event
        by default. You cannot manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        Access to one or more repositories was revoked for a GitHub App
        installation.
      operationId: installation-repositories/removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation_repositories
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-repositories-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation_repositories
        supported-webhook-types:
          - app
  installation-suspend:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        Someone blocked access by a GitHub App to their user or organization
        account.
      operationId: installation/suspend
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-suspend'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  installation-target-renamed:
    post:
      summary: >-
        This event occurs when there is activity relating to the user or
        organization account that a GitHub App is installed on. For more
        information, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        Somebody renamed the user or organization account that a GitHub App is
        installed on.
      operationId: installation-target/renamed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation_target
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-target-renamed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation_target
        supported-webhook-types:
          - app
  installation-unsuspend:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        A GitHub App that was blocked from accessing a user or organization
        account was given access the account again.
      operationId: installation/unsuspend
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-unsuspend'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  issue-comment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on an
        issue or pull request. For more information about issues and pull
        requests, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the
        GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issuecomment)
        or "[Issue
        comments](https://docs.github.com/enterprise-server@3.9/rest/issues/comments)"
        in the REST API documentation.


        For activity relating to an issue as opposed to comments on an issue,
        use the `issue` event. For activity related to pull request reviews or
        pull request review comments, use the `pull_request_review` or
        `pull_request_review_comment` events. For more information about the
        different types of pull request comments, see "[Working with
        comments](https://docs.github.com/enterprise-server@3.9/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A comment on an issue or pull request was created.
      operationId: issue-comment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issue_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issue_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  issue-comment-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on an
        issue or pull request. For more information about issues and pull
        requests, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the
        GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issuecomment)
        or "[Issue
        comments](https://docs.github.com/enterprise-server@3.9/rest/issues/comments)"
        in the REST API documentation.


        For activity relating to an issue as opposed to comments on an issue,
        use the `issue` event. For activity related to pull request reviews or
        pull request review comments, use the `pull_request_review` or
        `pull_request_review_comment` events. For more information about the
        different types of pull request comments, see "[Working with
        comments](https://docs.github.com/enterprise-server@3.9/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A comment on an issue or pull request was deleted.
      operationId: issue-comment/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issue_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issue_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  issue-comment-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on an
        issue or pull request. For more information about issues and pull
        requests, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the
        GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issuecomment)
        or "[Issue
        comments](https://docs.github.com/enterprise-server@3.9/rest/issues/comments)"
        in the REST API documentation.


        For activity relating to an issue as opposed to comments on an issue,
        use the `issue` event. For activity related to pull request reviews or
        pull request review comments, use the `pull_request_review` or
        `pull_request_review_comment` events. For more information about the
        different types of pull request comments, see "[Working with
        comments](https://docs.github.com/enterprise-server@3.9/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A comment on an issue or pull request was edited.
      operationId: issue-comment/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issue_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issue_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-assigned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was assigned to a user.
      operationId: issues/assigned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-assigned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was closed.
      operationId: issues/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was deleted.
      operationId: issues/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-demilestoned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was removed from a milestone.
      operationId: issues/demilestoned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-demilestoned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: The title or body on an issue was edited.
      operationId: issues/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-labeled:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A label was added to an issue.
      operationId: issues/labeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-labeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-locked:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        Conversation on an issue was locked. For more information, see "[Locking
        conversations](https://docs.github.com/enterprise-server@3.9/communities/moderating-comments-and-conversations/locking-conversations)."
      operationId: issues/locked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-locked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-milestoned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was added to a milestone.
      operationId: issues/milestoned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-milestoned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-opened:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        An issue was created. When a closed issue is reopened, the action will
        be `reopened` instead.
      operationId: issues/opened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-opened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-pinned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        An issue was pinned to a repository. For more information, see "[Pinning
        an issue to your
        repository](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository)."
      operationId: issues/pinned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-pinned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A closed issue was reopened.
      operationId: issues/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-transferred:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        An issue was transferred to another repository. For more information,
        see "[Transferring an issue to another
        repository](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/transferring-an-issue-to-another-repository)."
      operationId: issues/transferred
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-transferred'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-unassigned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A user was unassigned from an issue.
      operationId: issues/unassigned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unassigned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-unlabeled:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A label was removed from an issue.
      operationId: issues/unlabeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unlabeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-unlocked:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        Conversation on an issue was locked. For more information, see "[Locking
        conversations](https://docs.github.com/enterprise-server@3.9/communities/moderating-comments-and-conversations/locking-conversations)."
      operationId: issues/unlocked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unlocked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-unpinned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        An issue was unpinned from a repository. For more information, see
        "[Pinning an issue to your
        repository](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository)."
      operationId: issues/unpinned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unpinned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  label-created:
    post:
      summary: >-
        This event occurs when there is activity relating to labels. For more
        information, see "[Managing
        labels](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#label)
        or
        "[Labels](https://docs.github.com/enterprise-server@3.9/rest/issues/labels)"
        in the REST API documentation.


        If you want to receive an event when a label is added to or removed from
        an issue, pull request, or discussion, use the `labeled` or `unlabeled`
        action type for the `issues`, `pull_request`, or `discussion` events
        instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A label was created.
      operationId: label/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#label
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: label
        supported-webhook-types:
          - repository
          - organization
          - app
  label-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to labels. For more
        information, see "[Managing
        labels](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#label)
        or
        "[Labels](https://docs.github.com/enterprise-server@3.9/rest/issues/labels)"
        in the REST API documentation.


        If you want to receive an event when a label is added to or removed from
        an issue, pull request, or discussion, use the `labeled` or `unlabeled`
        action type for the `issues`, `pull_request`, or `discussion` events
        instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A label was deleted.
      operationId: label/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#label
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: label
        supported-webhook-types:
          - repository
          - organization
          - app
  label-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to labels. For more
        information, see "[Managing
        labels](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#label)
        or
        "[Labels](https://docs.github.com/enterprise-server@3.9/rest/issues/labels)"
        in the REST API documentation.


        If you want to receive an event when a label is added to or removed from
        an issue, pull request, or discussion, use the `labeled` or `unlabeled`
        action type for the `issues`, `pull_request`, or `discussion` events
        instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A label's name, description, or color was changed.
      operationId: label/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#label
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: label
        supported-webhook-types:
          - repository
          - organization
          - app
  member-added:
    post:
      summary: >-
        This event occurs when there is activity relating to collaborators in a
        repository. For more information, see "[Adding outside collaborators to
        repositories in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repositorycollaboratorconnection)
        or
        "[Collaborators](https://docs.github.com/enterprise-server@3.9/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A GitHub user accepted an invitation to a repository.
      operationId: member/added
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#member
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-added'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: member
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  member-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to collaborators in a
        repository. For more information, see "[Adding outside collaborators to
        repositories in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repositorycollaboratorconnection)
        or
        "[Collaborators](https://docs.github.com/enterprise-server@3.9/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: Permissions were changed for a collaborator on a repository.
      operationId: member/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#member
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: member
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  member-removed:
    post:
      summary: >-
        This event occurs when there is activity relating to collaborators in a
        repository. For more information, see "[Adding outside collaborators to
        repositories in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repositorycollaboratorconnection)
        or
        "[Collaborators](https://docs.github.com/enterprise-server@3.9/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A collaborator was removed from a repository.
      operationId: member/removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#member
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: member
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  membership-added:
    post:
      summary: >-
        This event occurs when there is activity relating to team membership.
        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."
        For more information about the APIs to manage team memberships, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#team)
        or "[Team
        members](https://docs.github.com/enterprise-server@3.9/rest/teams/members)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: An organization member was added to a team.
      operationId: membership/added
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#membership
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-membership-added'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: membership
        supported-webhook-types:
          - organization
          - business
          - app
  membership-removed:
    post:
      summary: >-
        This event occurs when there is activity relating to team membership.
        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."
        For more information about the APIs to manage team memberships, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#team)
        or "[Team
        members](https://docs.github.com/enterprise-server@3.9/rest/teams/members)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: An organization member was removed from a team.
      operationId: membership/removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#membership
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-membership-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: membership
        supported-webhook-types:
          - organization
          - business
          - app
  meta-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a webhook itself.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Meta" app permission.
      description: The webhook was deleted.
      operationId: meta/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#meta
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-meta-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: meta
        supported-webhook-types:
          - marketplace
          - business
          - repository
          - organization
          - app
  milestone-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was closed.
      operationId: milestone/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  milestone-created:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was created.
      operationId: milestone/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  milestone-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was deleted.
      operationId: milestone/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  milestone-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was edited.
      operationId: milestone/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  milestone-opened:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was opened.
      operationId: milestone/opened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-opened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  organization-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: An organization was deleted.
      operationId: organization/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  organization-member-added:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A member accepted an invitation to join an organization.
      operationId: organization/member-added
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-added'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  organization-member-invited:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A member was invited to join the organization.
      operationId: organization/member-invited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-invited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  organization-member-removed:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A member was removed from the organization.
      operationId: organization/member-removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  organization-renamed:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: The name of an organization was changed.
      operationId: organization/renamed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-renamed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  package-published:
    post:
      summary: >-
        This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#package)
        or
        "[Packages](https://docs.github.com/enterprise-server@3.9/rest/packages)"
        in the REST API documentation.


        To install this event on a GitHub App, the app must have at least
        read-level access for the "Packages" repository permission.
      description: A package was published to a registry.
      operationId: package/published
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#package
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-package-published'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: package
        supported-webhook-types:
          - repository
          - organization
          - app
  package-updated:
    post:
      summary: >-
        This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#package)
        or
        "[Packages](https://docs.github.com/enterprise-server@3.9/rest/packages)"
        in the REST API documentation.


        To install this event on a GitHub App, the app must have at least
        read-level access for the "Packages" repository permission.
      description: A previously published package was updated.
      operationId: package/updated
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#package
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-package-updated'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: package
        supported-webhook-types:
          - repository
          - organization
          - app
  page-build:
    post:
      summary: >-
        This event occurs when there is an attempted build of a GitHub Pages
        site. This event occurs regardless of whether the build is successful.
        For more information, see "[Configuring a publishing source for your
        GitHub Pages
        site](https://docs.github.com/enterprise-server@3.9/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site)."
        For information about the API to manage GitHub Pages, see
        "[Pages](https://docs.github.com/enterprise-server@3.9/rest/pages)" in
        the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pages" repository permission.
      operationId: page-build
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#page_build
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-page-build'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: page_build
        supported-webhook-types:
          - repository
          - organization
          - app
  ping:
    post:
      summary: >-
        This event occurs when you create a new webhook. The ping event is a
        confirmation from GitHub that you configured the webhook correctly.
      operationId: ping
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#ping
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-ping'
            examples:
              default:
                $ref: '#/components/examples/ping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-ping-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/ping-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: ping
        supported-webhook-types:
          - repository
          - organization
          - app
          - business
          - marketplace
  project-card-converted:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A note in a project (classic) was converted to an issue.
      operationId: project-card/converted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-converted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-card-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A card was added to a project (classic).
      operationId: project-card/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-card-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A card on a project (classic) was deleted.
      operationId: project-card/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-card-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A note on a project (classic) was edited.
      operationId: project-card/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-card-moved:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: >-
        A card on a project (classic) was moved to another column or to another
        position in its column.
      operationId: project-card/moved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-moved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A project (classic) was closed.
      operationId: project/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  project-column-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a card on a project
        (classic), use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A column was added to a project (classic).
      operationId: project-column/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_column
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_column
        supported-webhook-types:
          - repository
          - organization
          - app
  project-column-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a card on a project
        (classic), use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A column was deleted from a project (classic).
      operationId: project-column/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_column
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_column
        supported-webhook-types:
          - repository
          - organization
          - app
  project-column-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a card on a project
        (classic), use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: The name of a column on a project (classic) was changed.
      operationId: project-column/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_column
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_column
        supported-webhook-types:
          - repository
          - organization
          - app
  project-column-moved:
    post:
      summary: >-
        This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a card on a project
        (classic), use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A column was moved to a new position on a project (classic).
      operationId: project-column/moved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_column
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-moved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_column
        supported-webhook-types:
          - repository
          - organization
          - app
  project-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A project (classic) was created.
      operationId: project/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  project-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A project (classic) was deleted.
      operationId: project/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  project-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: The name or description of a project (classic) was changed.
      operationId: project/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  project-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A project (classic) was closed.
      operationId: project/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  projects-v2-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A project in the organization was closed.
      operationId: projects-v2/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  projects-v2-created:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A project in the organization was created.
      operationId: projects-v2/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  projects-v2-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A project in the organization was deleted.
      operationId: projects-v2/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  projects-v2-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        The title, description, or README of a project in the organization was
        changed.
      operationId: projects-v2/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  projects-v2-item-archived:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        An item on an organization project was archived. For more information,
        see "[Archiving items from your
        project](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project)."
      operationId: projects-v2-item/archived
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-archived'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-converted:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A draft issue in an organization project was converted to an issue.
      operationId: projects-v2-item/converted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-converted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-created:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: An item was added to a project in the organization.
      operationId: projects-v2-item/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: An item was deleted from a project in the organization.
      operationId: projects-v2-item/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        The values or state of an item in an organization project were changed.
        For example, the value of a field was updated, the body of a draft issue
        was changed, or a draft issue was converted to an issue.
      operationId: projects-v2-item/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-reordered:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        The position of an item in an organization project was changed. For
        example, an item was moved above or below another item in the table or
        board layout.
      operationId: projects-v2-item/reordered
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-reordered'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-restored:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        An archived item on an organization project was restored from the
        archive. For more information, see "[Archiving items from your
        project](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project)."
      operationId: projects-v2-item/restored
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-restored'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A project in the organization was reopened.
      operationId: projects-v2/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  public:
    post:
      summary: >-
        This event occurs when repository visibility changes from private to
        public. For more information, see "[Setting repository
        visibility](https://docs.github.com/enterprise-server@3.9/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/setting-repository-visibility)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      operationId: public
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#public
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-public'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: public
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-assigned:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A pull request was assigned to a user.
      operationId: pull-request/assigned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-assigned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-auto-merge-disabled:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Auto merge was disabled for a pull request. For more information, see
        "[Automatically merging a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)."
      operationId: pull-request/auto-merge-disabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-auto-merge-disabled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-auto-merge-enabled:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Auto merge was enabled for a pull request. For more information, see
        "[Automatically merging a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)."
      operationId: pull-request/auto-merge-enabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-auto-merge-enabled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-closed:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A pull request was closed. If `merged` is false in the webhook payload,
        the pull request was closed with unmerged commits. If `merged` is true
        in the webhook payload, the pull request was merged.
      operationId: pull-request/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-converted-to-draft:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A pull request was converted to a draft. For more information, see
        "[Changing the stage of a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request)."
      operationId: pull-request/converted-to-draft
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-converted-to-draft'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-demilestoned:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A pull request was removed from a milestone.
      operationId: pull-request/demilestoned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-demilestoned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-edited:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        The title or body of a pull request was edited, or the base branch of a
        pull request was changed.
      operationId: pull-request/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-labeled:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A label was added to a pull request.
      operationId: pull-request/labeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-labeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-locked:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Conversation on a pull request was locked. For more information, see
        "[Locking
        conversations](https://docs.github.com/enterprise-server@3.9/communities/moderating-comments-and-conversations/locking-conversations)."
      operationId: pull-request/locked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-locked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-milestoned:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A pull request was added to a milestone.
      operationId: pull-request/milestoned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-milestoned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-opened:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A pull request was created
      operationId: pull-request/opened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-opened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-ready-for-review:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A draft pull request was marked as ready for review. For more
        information, see "[Changing the stage of a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request)."
      operationId: pull-request/ready-for-review
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-ready-for-review'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-reopened:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A previously closed pull request was reopened.
      operationId: pull-request/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-comment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull
        request's diff. For more information, see "[Commenting on a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or
        pull request review threads, use the `pull_request_review`,
        `issue_comment`, or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A comment on a pull request diff was created.
      operationId: pull-request-review-comment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-comment-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull
        request's diff. For more information, see "[Commenting on a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or
        pull request review threads, use the `pull_request_review`,
        `issue_comment`, or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A comment on a pull request diff was deleted.
      operationId: pull-request-review-comment/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-comment-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull
        request's diff. For more information, see "[Commenting on a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or
        pull request review threads, use the `pull_request_review`,
        `issue_comment`, or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: The content of a comment on a pull request diff was changed.
      operationId: pull-request-review-comment/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-dismissed:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments
        in addition to a body comment and a state. For more information, see
        "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreview)
        or "[Pull request
        reviews](https://docs.github.com/enterprise-server@3.9/rest/pulls/reviews)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request review threads, use the
        `pull_request_review_comment`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A review on a pull request was dismissed.
      operationId: pull-request-review/dismissed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-dismissed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments
        in addition to a body comment and a state. For more information, see
        "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreview)
        or "[Pull request
        reviews](https://docs.github.com/enterprise-server@3.9/rest/pulls/reviews)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request review threads, use the
        `pull_request_review_comment`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: The body comment on a pull request review was edited.
      operationId: pull-request-review/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-request-removed:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A request for review by a person or team was removed from a pull
        request.
      operationId: pull-request/review-request-removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-request-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-requested:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Review by a person or team was requested for a pull request. For more
        information, see "[Requesting a pull request
        review](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/requesting-a-pull-request-review)."
      operationId: pull-request/review-requested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-requested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-submitted:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments
        in addition to a body comment and a state. For more information, see
        "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreview)
        or "[Pull request
        reviews](https://docs.github.com/enterprise-server@3.9/rest/pulls/reviews)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request review threads, use the
        `pull_request_review_comment`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A review on a pull request was submitted.
      operationId: pull-request-review/submitted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-submitted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-thread-resolved:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment thread on
        a pull request. For more information, see "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewthread)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request reviews, use the
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A comment thread on a pull request was marked as resolved.
      operationId: pull-request-review-thread/resolved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_thread
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-thread-resolved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_thread
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-thread-unresolved:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment thread on
        a pull request. For more information, see "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewthread)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request reviews, use the
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A previously resolved comment thread on a pull request was marked as
        unresolved.
      operationId: pull-request-review-thread/unresolved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_thread
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-pull-request-review-thread-unresolved
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_thread
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-synchronize:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A pull request's head branch was updated. For example, the head branch
        was updated from the base branch or new commits were pushed to the head
        branch.
      operationId: pull-request/synchronize
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-synchronize'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-unassigned:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A user was unassigned from a pull request.
      operationId: pull-request/unassigned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unassigned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-unlabeled:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A label was removed from a pull request.
      operationId: pull-request/unlabeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unlabeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-unlocked:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Conversation on a pull request was unlocked. For more information, see
        "[Locking
        conversations](https://docs.github.com/enterprise-server@3.9/communities/moderating-comments-and-conversations/locking-conversations)."
      operationId: pull-request/unlocked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unlocked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  push:
    post:
      summary: >-
        This event occurs when there is a push to a repository branch. This
        includes when a commit is pushed, when a commit tag is pushed,

        when a branch is deleted, when a tag is deleted, or when a repository is
        created from a template. To subscribe to only branch

        and tag deletions, use the [`delete`](#delete) webhook event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.


        **Note**: An event will not be created when more than three tags are
        pushed at once.
      operationId: push
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#push
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-push'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: push
        supported-webhook-types:
          - repository
          - organization
          - app
  registry-package-published:
    post:
      summary: >-
        This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#package)
        or
        "[Packages](https://docs.github.com/enterprise-server@3.9/rest/packages)"
        in the REST API documentation.


        To install this event on a GitHub App, the app must have at least
        read-level access for the "Packages" repository permission.


        **Note**: GitHub recommends that you use the newer `package` event
        instead.
      description: A package was published to a registry.
      operationId: registry-package/published
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#registry_package
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-registry-package-published'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: registry_package
        supported-webhook-types:
          - repository
          - organization
          - app
  registry-package-updated:
    post:
      summary: >-
        This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#package)
        or
        "[Packages](https://docs.github.com/enterprise-server@3.9/rest/packages)"
        in the REST API documentation.


        To install this event on a GitHub App, the app must have at least
        read-level access for the "Packages" repository permission.


        **Note**: GitHub recommends that you use the newer `package` event
        instead.
      description: A package that was previously published to a registry was updated.
      operationId: registry-package/updated
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#registry_package
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-registry-package-updated'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: registry_package
        supported-webhook-types:
          - repository
          - organization
          - app
  release-created:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: >-
        A draft was saved, or a release or pre-release was published without
        previously being saved as a draft.
      operationId: release/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: A release, pre-release, or draft release was deleted.
      operationId: release/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: >-
        The details of a release, pre-release, or draft release were edited. For
        more information, see "[Managing releases in a
        repository](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/managing-releases-in-a-repository#editing-a-release)."
      operationId: release/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-prereleased:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: >-
        A release was created and identified as a pre-release. A pre-release is
        a release that is not ready for production and may be unstable.
      operationId: release/prereleased
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-prereleased'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-published:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: A release, pre-release, or draft of a release was published.
      operationId: release/published
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-published'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-released:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: A release was published, or a pre-release was changed to a release.
      operationId: release/released
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-released'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-unpublished:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: A release or pre-release was unpublished.
      operationId: release/unpublished
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-unpublished'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  repository-anonymous-access-disabled:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        Someone disabled anonymous Git read access to the repository. For more
        information, see "[Enabling anonymous Git read access for a
        repository](/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/enabling-anonymous-git-read-access-for-a-repository)."
      operationId: repository/anonymous-access-disabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-anonymous-access-disabled
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - app
          - business
          - organization
          - repository
  repository-anonymous-access-enabled:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        Someone enabled anonymous Git read access to the repository. For more
        information, see "[Enabling anonymous Git read access for a
        repository](/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/enabling-anonymous-git-read-access-for-a-repository)."
      operationId: repository/anonymous-access-enabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-anonymous-access-enabled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - app
          - business
          - organization
          - repository
  repository-archived:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A repository was archived.
      operationId: repository/archived
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-archived'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-created:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A repository was created.
      operationId: repository/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        A repository was deleted. GitHub Apps and repository webhooks will not
        receive this event.
      operationId: repository/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-dispatch-sample.collected:
    post:
      summary: >-
        This event occurs when a GitHub App sends a `POST` request to
        `/repos/{owner}/{repo}/dispatches`. For more information, see [the REST
        API documentation for creating a repository dispatch
        event](https://docs.github.com/enterprise-server@3.9/rest/repos/repos#create-a-repository-dispatch-event).


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: >-
        The `event_type` that was specified in the `POST
        /repos/{owner}/{repo}/dispatches` request body.
      operationId: repository-dispatch/sample.collected
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_dispatch
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-dispatch-sample'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_dispatch
        supported-webhook-types:
          - app
  repository-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        The topics, default branch, description, or homepage of a repository was
        changed.
      operationId: repository/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-privatized:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: The visibility of a repository was changed to `private`.
      operationId: repository/privatized
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-privatized'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-publicized:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: The visibility of a repository was changed to `public`.
      operationId: repository/publicized
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-publicized'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-renamed:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: The name of a repository was changed.
      operationId: repository/renamed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-renamed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-transferred:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        Ownership of the repository was transferred to a user or organization
        account. This event is only sent to the account where the ownership is
        transferred. To receive the `repository.transferred` event, the new
        owner account must have the GitHub App installed, and the App must be
        subscribed to "Repository" events.
      operationId: repository/transferred
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-transferred'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-unarchived:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A previously archived repository was unarchived.
      operationId: repository/unarchived
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-unarchived'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-vulnerability-alert-create:
    post:
      summary: >-
        This event occurs when there is activity relating to a security
        vulnerability alert in a repository.


        **Note**: This event is deprecated. Use the `dependabot_alert` event
        instead.
      description: A repository vulnerability alert was created.
      operationId: repository-vulnerability-alert/create
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-vulnerability-alert-create
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
          - repository
          - organization
  repository-vulnerability-alert-dismiss:
    post:
      summary: >-
        This event occurs when there is activity relating to a security
        vulnerability alert in a repository.


        **Note**: This event is deprecated. Use the `dependabot_alert` event
        instead.
      description: A repository vulnerability alert was dismissed.
      operationId: repository-vulnerability-alert/dismiss
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-vulnerability-alert-dismiss
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
          - repository
          - organization
  repository-vulnerability-alert-reopen:
    post:
      summary: >-
        This event occurs when there is activity relating to a security
        vulnerability alert in a repository.


        **Note**: This event is deprecated. Use the `dependabot_alert` event
        instead.
      description: >-
        A previously dismissed or resolved repository vulnerability alert was
        reopened.
      operationId: repository-vulnerability-alert/reopen
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-vulnerability-alert-reopen
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
          - repository
          - organization
  repository-vulnerability-alert-resolve:
    post:
      summary: >-
        This event occurs when there is activity relating to a security
        vulnerability alert in a repository.


        **Note**: This event is deprecated. Use the `dependabot_alert` event
        instead.
      description: A repository vulnerability alert was marked as resolved.
      operationId: repository-vulnerability-alert/resolve
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-vulnerability-alert-resolve
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
          - repository
          - organization
  secret-scanning-alert-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alert locations, use the
        `secret_scanning_alert_location` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: A secret scanning alert was created.
      operationId: secret-scanning-alert/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: secret_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  secret-scanning-alert-location-created:
    post:
      summary: >-
        This event occurs when there is activity relating to the locations of a
        secret in a secret scanning alert.


        For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alerts, use the
        `secret_scanning_alert` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: >-
        A new instance of a previously detected secret was detected in a
        repository, and the location of the secret was added to the existing
        alert.
      operationId: secret-scanning-alert-location/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert_location
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-secret-scanning-alert-location-created
            examples:
              default:
                $ref: '#/components/examples/secret-scanning-alert-location-created'
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/webhook-secret-scanning-alert-location-created-form-encoded
            examples:
              default:
                $ref: >-
                  #/components/examples/secret-scanning-alert-location-created-form-encoded
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: secret_scanning_alert_location
        supported-webhook-types:
          - repository
          - organization
          - app
  secret-scanning-alert-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alert locations, use the
        `secret_scanning_alert_location` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: A previously closed secret scanning alert was reopened.
      operationId: secret-scanning-alert/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: secret_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  secret-scanning-alert-resolved:
    post:
      summary: >-
        This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alert locations, use the
        `secret_scanning_alert_location` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: A secret scanning alert was closed.
      operationId: secret-scanning-alert/resolved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-resolved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: secret_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  secret-scanning-alert-revoked:
    post:
      summary: >-
        This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alert locations, use the
        `secret_scanning_alert_location` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: A secret scanning alert was marked as revoked.
      operationId: secret-scanning-alert/revoked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-revoked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: secret_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  security-advisory-published:
    post:
      summary: >-
        This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security
        advisory provides information about security vulnerabilities or malware
        that have been mapped to packages in ecosystems we support. For more
        information about global security advisories, see "[About global
        security
        advisories](https://docs.github.com/enterprise-server@3.9/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the
        REST API
        documentation](https://docs.github.com/enterprise-server@3.9/rest/security-advisories/global-advisories)
        or [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory
        dataset. For more information, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
      description: A security advisory was published to the GitHub community.
      operationId: security-advisory/published
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#security_advisory
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-published'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: security_advisory
        supported-webhook-types:
          - app
  security-advisory-updated:
    post:
      summary: >-
        This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security
        advisory provides information about security vulnerabilities or malware
        that have been mapped to packages in ecosystems we support. For more
        information about global security advisories, see "[About global
        security
        advisories](https://docs.github.com/enterprise-server@3.9/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the
        REST API
        documentation](https://docs.github.com/enterprise-server@3.9/rest/security-advisories/global-advisories)
        or [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory
        dataset. For more information, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
      description: The metadata or description of a security advisory was changed.
      operationId: security-advisory/updated
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#security_advisory
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-updated'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: security_advisory
        supported-webhook-types:
          - app
  security-advisory-withdrawn:
    post:
      summary: >-
        This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security
        advisory provides information about security vulnerabilities or malware
        that have been mapped to packages in ecosystems we support. For more
        information about global security advisories, see "[About global
        security
        advisories](https://docs.github.com/enterprise-server@3.9/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the
        REST API
        documentation](https://docs.github.com/enterprise-server@3.9/rest/security-advisories/global-advisories)
        or [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory
        dataset. For more information, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
      description: A previously published security advisory was withdrawn.
      operationId: security-advisory/withdrawn
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#security_advisory
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-withdrawn'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: security_advisory
        supported-webhook-types:
          - app
  security-and-analysis:
    post:
      summary: >-
        This event occurs when code security and analysis features are enabled
        or disabled for a repository. For more information, see "[GitHub
        security
        features](https://docs.github.com/enterprise-server@3.9/code-security/getting-started/github-security-features)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Administration" repository permission.
      operationId: security-and-analysis
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#security_and_analysis
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-and-analysis'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: security_and_analysis
        supported-webhook-types:
          - repository
          - organization
          - app
  sponsorship-cancelled:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsorship was cancelled and the last billing cycle has ended.


        This event is only sent when a recurring (monthly) sponsorship is
        cancelled; it is not sent for one-time sponsorships.
      operationId: sponsorship/cancelled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-cancelled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsor created a sponsorship for a sponsored account. This event
        occurs once the payment is successfully processed.
      operationId: sponsorship/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A monthly sponsor changed who can see their sponsorship. If you
        recognize your sponsors publicly, you may want to update your sponsor
        recognition to reflect the change when this event occurs.
      operationId: sponsorship/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-pending-cancellation:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsor scheduled a cancellation for their sponsorship. The
        cancellation will become effective on their next billing date.


        This event is only sent when a recurring (monthly) sponsorship is
        cancelled; it is not sent for one-time sponsorships.
      operationId: sponsorship/pending-cancellation
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-pending-cancellation'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-pending-tier-change:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsor scheduled a downgrade to a lower sponsorship tier. The new
        tier will become effective on their next billing date.
      operationId: sponsorship/pending-tier-change
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-pending-tier-change'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-tier-changed:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsor changed the tier of their sponsorship and the change has taken
        effect. If a sponsor upgraded their tier, the change took effect
        immediately. If a sponsor downgraded their tier, the change took effect
        at the beginning of the sponsor's next billing cycle.
      operationId: sponsorship/tier-changed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-tier-changed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  star-created:
    post:
      summary: >-
        This event occurs when there is activity relating to repository stars.
        For more information about stars, see "[Saving repositories with
        stars](https://docs.github.com/enterprise-server@3.9/get-started/exploring-projects-on-github/saving-repositories-with-stars)."
        For information about the APIs to manage stars, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#starredrepositoryconnection)
        or
        "[Starring](https://docs.github.com/enterprise-server@3.9/rest/activity/starring)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: Someone starred a repository.
      operationId: star/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#star
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-star-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: star
        supported-webhook-types:
          - repository
          - organization
          - app
  star-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to repository stars.
        For more information about stars, see "[Saving repositories with
        stars](https://docs.github.com/enterprise-server@3.9/get-started/exploring-projects-on-github/saving-repositories-with-stars)."
        For information about the APIs to manage stars, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#starredrepositoryconnection)
        or
        "[Starring](https://docs.github.com/enterprise-server@3.9/rest/activity/starring)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: Someone unstarred the repository.
      operationId: star/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#star
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-star-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: star
        supported-webhook-types:
          - repository
          - organization
          - app
  status:
    post:
      summary: >-
        This event occurs when the status of a Git commit changes. For example,
        commits can be marked as `error`, `failure`, `pending`, or `success`.
        For more information, see "[About status
        checks](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks)."
        For information about the APIs to manage commit statuses, see [the
        GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#status)
        or "[Commit
        statuses](https://docs.github.com/enterprise-server@3.9/rest/commits/statuses)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Commit statuses" repository permission.
      operationId: status
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#status
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-status'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: status
        supported-webhook-types:
          - repository
          - organization
          - app
  team-add:
    post:
      summary: >-
        This event occurs when a team is added to a repository.

        For more information, see "[Managing teams and people with access to
        your
        repository](https://docs.github.com/enterprise-server@3.9/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/managing-teams-and-people-with-access-to-your-repository)."


        For activity relating to teams, see the `teams` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      operationId: team-add
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team_add
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-add'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team_add
        supported-webhook-types:
          - repository
          - organization
          - app
  team-added-to-repository:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A team was granted access to a repository.
      operationId: team/added-to-repository
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-added-to-repository'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  team-created:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A team was created.
      operationId: team/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  team-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A team was deleted.
      operationId: team/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  team-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: The name, description, or visibility of a team was changed.
      operationId: team/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  team-removed-from-repository:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A team's access to a repository was removed.
      operationId: team/removed-from-repository
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-removed-from-repository'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  user-created:
    post:
      summary: >-
        This event occurs when there is activity relating to user accounts in an
        enterprise.
      description: A user account was added to the enterprise.
      operationId: user/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#user
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-user-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: true
        category: webhooks
        subcategory: user
        supported-webhook-types:
          - business
  user-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to user accounts in an
        enterprise.
      description: A user account was removed from the enterprise.
      operationId: user/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#user
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-user-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: true
        category: webhooks
        subcategory: user
        supported-webhook-types:
          - business
  watch-started:
    post:
      summary: >-
        This event occurs when there is activity relating to watching, or
        subscribing to, a repository. For more information about watching, see
        "[Managing your
        subscriptions](https://docs.github.com/enterprise-server@3.9/account-and-profile/managing-subscriptions-and-notifications-on-github/managing-subscriptions-for-activity-on-github/managing-your-subscriptions)."
        For information about the APIs to manage watching, see
        "[Watching](https://docs.github.com/enterprise-server@3.9/rest/activity/watching)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: Someone started watching the repository.
      operationId: watch/started
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#watch
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-watch-started'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: watch
        supported-webhook-types:
          - repository
          - organization
          - app
  workflow-dispatch:
    post:
      summary: >-
        This event occurs when a GitHub Actions workflow is manually triggered.
        For more information, see "[Manually running a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/managing-workflow-runs/manually-running-a-workflow)."


        For activity relating to workflow runs, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      operationId: workflow-dispatch
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_dispatch
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-dispatch'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_dispatch
        supported-webhook-types:
          - app
  workflow-job-completed:
    post:
      summary: >-
        This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow
        jobs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow
        run, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: >-
        A job in a workflow run finished. This event occurs when a job in a
        workflow is completed, regardless of whether the job was successful or
        unsuccessful.
      operationId: workflow-job/completed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_job
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-completed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_job
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-job-in-progress:
    post:
      summary: >-
        This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow
        jobs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow
        run, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A job in a workflow run started processing on a runner.
      operationId: workflow-job/in-progress
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_job
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-in-progress'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_job
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-job-queued:
    post:
      summary: >-
        This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow
        jobs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow
        run, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A job in a workflow run was created.
      operationId: workflow-job/queued
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_job
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-queued'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_job
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-job-waiting:
    post:
      summary: >-
        This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow
        jobs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow
        run, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A job in a workflow run was created and is waiting for approvals.
      operationId: workflow-job/waiting
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_job
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-waiting'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_job
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-run-completed:
    post:
      summary: >-
        This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About
        workflows](https://docs.github.com/enterprise-server@3.9/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#workflowrun)
        or "[Workflow
        runs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-runs)"
        in the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: >-
        A workflow run finished. This event occurs when a workflow run is
        completed, regardless of whether the workflow was successful or
        unsuccessful.
      operationId: workflow-run/completed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-completed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_run
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-run-in-progress:
    post:
      summary: >-
        This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About
        workflows](https://docs.github.com/enterprise-server@3.9/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#workflowrun)
        or "[Workflow
        runs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-runs)"
        in the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A workflow run started processing on a runner.
      operationId: workflow-run/in-progress
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-in-progress'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_run
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-run-requested:
    post:
      summary: >-
        This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About
        workflows](https://docs.github.com/enterprise-server@3.9/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#workflowrun)
        or "[Workflow
        runs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-runs)"
        in the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A workflow run was triggered.
      operationId: workflow-run/requested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-requested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_run
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
components:
  schemas:
    gitignore-template:
      title: Gitignore Template
      description: Gitignore Template
      type: object
      properties:
        name:
          type: string
          example: C
        source:
          type: string
          example: |
            # Object files
            *.o

            # Libraries
            *.lib
            *.a

            # Shared objects (inc. Windows DLLs)
            *.dll
            *.so
            *.so.*
            *.dylib

            # Executables
            *.exe
            *.out
            *.app
      required:
        - name
        - source
