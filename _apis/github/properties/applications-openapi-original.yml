openapi: 3.1.0
info:
  title: Applications
  description: Needs a description.
paths:
  /applications/grants:
    get:
      summary: List your grants
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue the
        [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations/),
        which is used by integrations to create personal access tokens and OAuth
        tokens, and you must now create these tokens using our [web application
        flow](https://docs.github.com/enterprise-server@3.9/developers/apps/authorizing-oauth-apps#web-application-flow).
        The [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations)
        will be removed on November, 13, 2020. For more information, including
        scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        You can use this API to list the set of OAuth applications that have
        been granted access to your account. Unlike the [list your
        authorizations](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations#list-your-authorizations)
        API, this API does not manage individual tokens. This API will return
        one entry for each OAuth application that has been granted access to
        your account, regardless of the number of tokens an application has
        generated for your user. The list of OAuth applications returned matches
        what is shown on [the application authorizations settings screen within
        GitHub](https://github.com/settings/applications#authorized). The
        `scopes` returned are the union of scopes authorized for the
        application. For example, if an application has one token with `repo`
        scope and another token with `user` scope, the grant will return
        `["repo", "user"]`.
      tags:
        - - - - oauth-authorizations
      operationId: oauth-authorizations/list-grants
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations#list-your-grants
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
        - name: client_id
          in: query
          required: false
          description: The client ID of your GitHub app.
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/application-grant'
              examples:
                default:
                  $ref: '#/components/examples/application-grant-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: oauth-authorizations
      deprecated: true
  /applications/grants/{grant_id}:
    get:
      summary: Get a single grant
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue the
        [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations),
        which is used by integrations to create personal access tokens and OAuth
        tokens, and you must now create these tokens using our [web application
        flow](https://docs.github.com/enterprise-server@3.9/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow).
        The [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations)
        will be removed on November, 13, 2020. For more information, including
        scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).
      tags:
        - - - - oauth-authorizations
      operationId: oauth-authorizations/get-grant
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations#get-a-single-grant
      parameters:
        - $ref: '#/components/parameters/grant-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application-grant'
              examples:
                default:
                  $ref: '#/components/examples/application-grant'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: oauth-authorizations
      deprecated: true
    delete:
      summary: Delete a grant
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue the
        [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations/),
        which is used by integrations to create personal access tokens and OAuth
        tokens, and you must now create these tokens using our [web application
        flow](https://docs.github.com/enterprise-server@3.9/developers/apps/authorizing-oauth-apps#web-application-flow).
        The [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations/)
        will be removed on November, 13, 2020. For more information, including
        scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).


        Deleting an OAuth application's grant will also delete all OAuth tokens
        associated with the application for your user. Once deleted, the
        application has no access to your account and is no longer listed on
        [the application authorizations settings screen within
        GitHub](https://github.com/settings/applications#authorized).
      tags:
        - - - - oauth-authorizations
      operationId: oauth-authorizations/delete-grant
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations#delete-a-grant
      parameters:
        - $ref: '#/components/parameters/grant-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: oauth-authorizations
      deprecated: true
  /applications/{client_id}/grant:
    delete:
      summary: Delete an app authorization
      description: >-
        OAuth and GitHub application owners can revoke a grant for their
        application and a specific user. You must use [Basic
        Authentication](https://docs.github.com/enterprise-server@3.9/rest/overview/other-authentication-methods#basic-authentication)
        when accessing this endpoint, using the OAuth application's `client_id`
        and `client_secret` as the username and password. You must also provide
        a valid OAuth `access_token` as an input parameter and the grant for the
        token's owner will be deleted.

        Deleting an application's grant will also delete all OAuth tokens
        associated with the application for the user. Once deleted, the
        application will have no access to the user's account and will no longer
        be listed on [the application authorizations settings screen within
        GitHub](https://github.com/settings/applications#authorized).
      operationId: apps/delete-authorization
      tags:
        - - - - apps
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/apps/oauth-applications#delete-an-app-authorization
      parameters:
        - $ref: '#/components/parameters/client-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: >-
                    The OAuth access token used to authenticate to the GitHub
                    API.
              required:
                - access_token
            examples:
              default:
                value:
                  access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
      responses:
        '204':
          description: Response
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
  /applications/{client_id}/token:
    post:
      summary: Check a token
      description: >-
        OAuth applications and GitHub applications with OAuth authorizations can
        use this API method for checking OAuth token validity without exceeding
        the normal rate limits for failed login attempts. Authentication works
        differently with this particular endpoint. You must use [Basic
        Authentication](https://docs.github.com/enterprise-server@3.9/rest/overview/other-authentication-methods#basic-authentication)
        to use this endpoint, where the username is the application `client_id`
        and the password is its `client_secret`. Invalid tokens will return `404
        NOT FOUND`.
      tags:
        - - - - apps
      operationId: apps/check-token
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/apps/oauth-applications#check-a-token
      parameters:
        - $ref: '#/components/parameters/client-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                access_token:
                  description: The access_token of the OAuth or GitHub application.
                  type: string
              required:
                - access_token
              type: object
            examples:
              default:
                value:
                  access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/authorization-with-user'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
    patch:
      summary: Reset a token
      description: >-
        OAuth applications and GitHub applications with OAuth authorizations can
        use this API method to reset a valid OAuth token without end-user
        involvement. Applications must save the "token" property in the response
        because changes take effect immediately. You must use [Basic
        Authentication](https://docs.github.com/enterprise-server@3.9/rest/overview/other-authentication-methods#basic-authentication)
        when accessing this endpoint, using the application's `client_id` and
        `client_secret` as the username and password. Invalid tokens will return
        `404 NOT FOUND`.
      tags:
        - - - - apps
      operationId: apps/reset-token
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/apps/oauth-applications#reset-a-token
      parameters:
        - $ref: '#/components/parameters/client-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                access_token:
                  description: The access_token of the OAuth or GitHub application.
                  type: string
              required:
                - access_token
              type: object
            examples:
              default:
                value:
                  access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/authorization-with-user'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
    delete:
      summary: Delete an app token
      description: >-
        OAuth  or GitHub application owners can revoke a single token for an
        OAuth application or a GitHub application with an OAuth authorization.
        You must use [Basic
        Authentication](https://docs.github.com/enterprise-server@3.9/rest/overview/other-authentication-methods#basic-authentication)
        when accessing this endpoint, using the application's `client_id` and
        `client_secret` as the username and password.
      tags:
        - - - - apps
      operationId: apps/delete-token
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/apps/oauth-applications#delete-an-app-token
      parameters:
        - $ref: '#/components/parameters/client-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: >-
                    The OAuth access token used to authenticate to the GitHub
                    API.
              required:
                - access_token
            examples:
              default:
                value:
                  access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
      responses:
        '204':
          description: Response
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
  /applications/{client_id}/token/scoped:
    post:
      summary: Create a scoped access token
      description: >-
        Use a non-scoped user access token to create a repository-scoped and/or
        permission-scoped user access token. You can specify

        which repositories the token can access and which permissions are
        granted to the

        token.


        Invalid tokens will return `404 NOT FOUND`.


        You must use [Basic
        Authentication](https://docs.github.com/enterprise-server@3.9/rest/overview/other-authentication-methods#basic-authentication)

        when accessing this endpoint, using the `client_id` and `client_secret`
        of the GitHub App

        as the username and password.
      tags:
        - - - - apps
      operationId: apps/scope-token
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/apps/apps#create-a-scoped-access-token
      parameters:
        - $ref: '#/components/parameters/client-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: The access token used to authenticate to the GitHub API.
                  example: e72e16c7e42f292c6912e7710c838347ae178b4a
                target:
                  description: >-
                    The name of the user or organization to scope the user
                    access token to. **Required** unless `target_id` is
                    specified.
                  type: string
                  example: octocat
                target_id:
                  description: >-
                    The ID of the user or organization to scope the user access
                    token to. **Required** unless `target` is specified.
                  example: 1
                  type: integer
                repositories:
                  description: >-
                    The list of repository names to scope the user access token
                    to. `repositories` may not be specified if `repository_ids`
                    is specified.
                  type: array
                  items:
                    type: string
                    example: rails
                repository_ids:
                  description: >-
                    The list of repository IDs to scope the user access token
                    to. `repository_ids` may not be specified if `repositories`
                    is specified.
                  example:
                    - 1
                  type: array
                  items:
                    type: integer
                permissions:
                  $ref: '#/components/schemas/app-permissions'
              required:
                - access_token
            examples:
              default:
                value:
                  access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
                  target: octocat
                  permissions:
                    metadata: read
                    issues: write
                    contents: read
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/scope-token'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: apps
components:
  schemas:
    application-grant:
      title: Application Grant
      description: The authorization associated with an OAuth Access.
      type: object
      properties:
        id:
          type: integer
          example: 1
        url:
          type: string
          format: uri
          example: https://api.github.com/applications/grants/1
        app:
          type: object
          properties:
            client_id:
              type: string
            name:
              type: string
            url:
              type: string
              format: uri
          required:
            - client_id
            - name
            - url
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        scopes:
          type: array
          items:
            type: string
          example:
            - public_repo
        user:
          $ref: '#/components/schemas/nullable-simple-user'
      required:
        - app
        - id
        - scopes
        - url
        - created_at
        - updated_at
    authorization:
      title: Authorization
      description: >-
        The authorization for an OAuth app, GitHub App, or a Personal Access
        Token.
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
          format: uri
        scopes:
          description: A list of scopes that this authorization is in.
          type: array
          items:
            type: string
          nullable: true
        token:
          type: string
        token_last_eight:
          type: string
          nullable: true
        hashed_token:
          type: string
          nullable: true
        app:
          type: object
          properties:
            client_id:
              type: string
            name:
              type: string
            url:
              type: string
              format: uri
          required:
            - client_id
            - name
            - url
        note:
          type: string
          nullable: true
        note_url:
          type: string
          format: uri
          nullable: true
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        fingerprint:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        installation:
          $ref: '#/components/schemas/nullable-scoped-installation'
        expires_at:
          type: string
          format: date-time
          nullable: true
      required:
        - app
        - id
        - note
        - note_url
        - scopes
        - token
        - hashed_token
        - token_last_eight
        - fingerprint
        - url
        - created_at
        - updated_at
        - expires_at
