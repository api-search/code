openapi: 3.0.3
info:
  version: 1.1.4
  title: ' user'
  description: Needs description.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: ghes
  x-github-release: 3.9
tags: []
servers:
  - url: '{protocol}://{hostname}/api/v3'
    variables:
      hostname:
        description: Self-hosted Enterprise Server hostname
        default: HOSTNAME
      protocol:
        description: Self-hosted Enterprise Server protocol
        default: http
externalDocs:
  description: GitHub Enterprise Developer Docs
  url: https://docs.github.com/enterprise-server@3.9/rest/
paths:
  /admin/ldap/users/{username}/mapping:
    patch:
      summary: Update LDAP mapping for a user
      description: ''
      operationId: enterprise-admin/update-ldap-mapping-for-user
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/ldap#update-ldap-mapping-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ldap-mapping-user'
              examples:
                default:
                  $ref: '#/components/examples/ldap-mapping-user'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ldap_dn:
                  type: string
                  description: >-
                    The [distinguished
                    name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the
                    LDAP entry to map to a team.
              required:
                - ldap_dn
            examples:
              default:
                value:
                  ldap_dn: uid=asdf,ou=users,dc=github,dc=com
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: ldap
  /admin/ldap/users/{username}/sync:
    post:
      summary: Sync LDAP mapping for a user
      description: >-
        Note that this API call does not automatically initiate an LDAP sync.
        Rather, if a `201` is returned, the sync job is queued successfully, and
        is performed when the instance is ready.
      operationId: enterprise-admin/sync-ldap-mapping-for-user
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/ldap#sync-ldap-mapping-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                default:
                  value:
                    status: queued
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: ldap
  /admin/users:
    post:
      summary: Create a user
      description: >-
        If an external authentication mechanism is used, the login name should
        match the login name in the external system. If you are using LDAP
        authentication, you should also [update the LDAP
        mapping](https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/ldap#update-ldap-mapping-for-a-user)
        for the user.


        The login name will be normalized to only contain alphanumeric
        characters or single hyphens. For example, if you send `"octo_cat"` as
        the login, a user named `"octo-cat"` will be created.


        If the login name or email address is already associated with an
        account, the server will return a `422` response.
      operationId: enterprise-admin/create-user
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/users#create-a-user
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: The user's username.
                email:
                  type: string
                  description: >-
                    **Required for built-in authentication.** The user's email

                    address. This parameter can be omitted when using CAS, LDAP,
                    or SAML.

                    For more information, see "[About authentication for your
                    enterprise](https://docs.github.com/enterprise-server@3.9/admin/identity-and-access-management/managing-iam-for-your-enterprise/about-authentication-for-your-enterprise)."
                suspended:
                  type: boolean
                  description: >-
                    Whether to set the user as suspended when the user is
                    created.
                  default: false
              required:
                - login
            examples:
              default:
                value:
                  login: monalisa
                  email: octocat@github.com
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: users
  /admin/users/{username}:
    patch:
      summary: Update the username for a user
      description: ''
      operationId: enterprise-admin/update-username-for-user
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/users#update-the-username-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
              examples:
                default:
                  value:
                    message: >-
                      Job queued to rename user. It may take a few minutes to
                      complete.
                    url: https://api.github.com/user/1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: The user's new username.
              required:
                - login
            examples:
              default:
                value:
                  login: thenewmonalisa
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: users
    delete:
      summary: Delete a user
      description: >-
        Deleting a user will delete all their repositories, gists, applications,
        and personal settings. [Suspending a
        user](https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/users#suspend-a-user)
        is often a better option.


        You can delete any user account except your own.
      operationId: enterprise-admin/delete-user
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/users#delete-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: users
  /admin/users/{username}/authorizations:
    post:
      summary: Create an impersonation OAuth token
      description: ''
      operationId: enterprise-admin/create-impersonation-o-auth-token
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/users#create-an-impersonation-oauth-token
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response when getting an existing impersonation OAuth token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/authorization'
        '201':
          description: Response when creating a new impersonation OAuth token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/authorization'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scopes:
                  type: array
                  description: >-
                    A list of
                    [scopes](https://docs.github.com/enterprise-server@3.9/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
                  items:
                    type: string
              required:
                - scopes
            examples:
              default:
                value:
                  scopes:
                    - public_repo
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: users
    delete:
      summary: Delete an impersonation OAuth token
      description: ''
      operationId: enterprise-admin/delete-impersonation-o-auth-token
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/users#delete-an-impersonation-oauth-token
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: users
  /enterprise/stats/users:
    get:
      summary: Get users statistics
      description: ''
      operationId: enterprise-admin/get-user-stats
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/admin-stats#get-users-statistics
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enterprise-user-overview'
              examples:
                default:
                  value:
                    total_users: 100
                    admin_users: 3
                    suspended_users: 1
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: admin-stats
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users:
    get:
      summary: Get users with access to the protected branch
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://docs.github.com/enterprise-server@3.9/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Lists the people who have push access to this branch.
      tags:
        - - - - repos
      operationId: repos/get-users-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection#get-users-with-access-to-the-protected-branch
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Add user access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://docs.github.com/enterprise-server@3.9/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Grants the specified people push access for this branch.


        | Type    |
        Description                                                                                                                  
        |

        | - | -- |

        | `array` | Usernames for people who can have push access. **Note**: The
        list of users, apps, and teams in total is limited to 100 items. |
      tags:
        - - - - repos
      operationId: repos/add-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection#add-user-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    users:
                      type: array
                      description: The username for users
                      items:
                        type: string
                  required:
                    - users
                  example:
                    users:
                      - mona
                - type: array
                  items:
                    type: string
            examples:
              default:
                summary: Example adding a user in a branch protection rule
                value:
                  users:
                    - octocat
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: users
        category: branches
        subcategory: branch-protection
    put:
      summary: Set user access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://docs.github.com/enterprise-server@3.9/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Replaces the list of people that have push access to this branch. This
        removes all people that previously had push access and grants push
        access to the new list of people.


        | Type    |
        Description                                                                                                                  
        |

        | - | -- |

        | `array` | Usernames for people who can have push access. **Note**: The
        list of users, apps, and teams in total is limited to 100 items. |
      tags:
        - - - - repos
      operationId: repos/set-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection#set-user-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    users:
                      type: array
                      description: The username for users
                      items:
                        type: string
                  required:
                    - users
                  example:
                    users:
                      - mona
                - type: array
                  items:
                    type: string
            examples:
              default:
                summary: Example replacing a user in a branch protection rule
                value:
                  users:
                    - octocat
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: users
        category: branches
        subcategory: branch-protection
    delete:
      summary: Remove user access restrictions
      description: >-
        Protected branches are available in public repositories with GitHub Free
        and GitHub Free for organizations, and in public and private
        repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and
        GitHub Enterprise Server. For more information, see [GitHub's
        products](https://docs.github.com/enterprise-server@3.9/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.


        Removes the ability of a user to push to this branch.


        | Type    |
        Description                                                                                                                                  
        |

        | - |

        |

        | `array` | Usernames of the people who should no longer have push
        access. **Note**: The list of users, apps, and teams in total is limited
        to 100 items. |
      tags:
        - - - - repos
      operationId: repos/remove-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection#remove-user-access-restrictions
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/branch'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    users:
                      type: array
                      description: The username for users
                      items:
                        type: string
                  required:
                    - users
                  example:
                    users:
                      - mona
                - type: array
                  items:
                    type: string
            examples:
              default:
                summary: Example removing a user in a branch protection rule
                value:
                  users:
                    - octocat
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: users
        category: branches
        subcategory: branch-protection
  /search/users:
    get:
      summary: Search users
      description: >-
        Find users via various criteria. This method returns up to 100 results
        [per
        page](https://docs.github.com/enterprise-server@3.9/rest/guides/using-pagination-in-the-rest-api).


        When searching for users, you can get text match metadata for the issue
        **login**, public **email**, and **name** fields when you pass the
        `text-match` media type. For more details about highlighting search
        results, see [Text match
        metadata](https://docs.github.com/enterprise-server@3.9/rest/search/search#text-match-metadata).
        For more details about how to receive highlighted search results, see
        [Text match
        metadata](https://docs.github.com/enterprise-server@3.9/rest/search/search#text-match-metadata).


        For example, if you're looking for a list of popular users, you might
        try this query:


        `q=tom+repos:%3E42+followers:%3E1000`


        This query searches for users with the name `tom`. The results are
        restricted to users with more than 42 repositories and over 1,000
        followers.


        This endpoint does not accept authentication and will only include
        publicly visible users. As an alternative, you can use the GraphQL API.
        The GraphQL API requires authentication and will return private users,
        including Enterprise Managed Users (EMUs), that you are authorized to
        view. For more information, see "[GraphQL
        Queries](https://docs.github.com/enterprise-server@3.9/graphql/reference/queries#search)."
      tags:
        - - - - search
      operationId: search/users
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/search/search#search-users
      parameters:
        - name: q
          description: >-
            The query contains one or more search keywords and qualifiers.
            Qualifiers allow you to limit your search to specific areas of
            GitHub Enterprise Server. The REST API supports the same qualifiers
            as the web interface for GitHub Enterprise Server. To learn more
            about the format of the query, see [Constructing a search
            query](https://docs.github.com/enterprise-server@3.9/rest/search/search#constructing-a-search-query).
            See "[Searching
            users](https://docs.github.com/enterprise-server@3.9/search-github/searching-on-github/searching-users)"
            for a detailed list of qualifiers.
          in: query
          required: true
          schema:
            type: string
        - name: sort
          description: >-
            Sorts the results of your query by number of `followers` or
            `repositories`, or when the person `joined` GitHub Enterprise
            Server. Default: [best
            match](https://docs.github.com/enterprise-server@3.9/rest/search/search#ranking-search-results)
          in: query
          required: false
          schema:
            type: string
            enum:
              - followers
              - repositories
              - joined
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - incomplete_results
                  - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/user-search-result-item'
              examples:
                default:
                  $ref: '#/components/examples/user-search-result-item-paginated'
        '304':
          $ref: '#/components/responses/not_modified'
        '422':
          $ref: '#/components/responses/validation_failed'
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  /user:
    get:
      summary: Get the authenticated user
      description: >-
        OAuth app tokens and personal access tokens (classic) need the `user`
        scope in order for the response to include private profile information.
      tags:
        - - - - users
      operationId: users/get-authenticated
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/users#get-the-authenticated-user
      parameters: []
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/private-user'
                  - $ref: '#/components/schemas/public-user'
              examples:
                response-with-public-and-private-profile-information:
                  $ref: >-
                    #/components/examples/private-user-response-with-public-and-private-profile-information
                response-with-public-profile-information:
                  $ref: >-
                    #/components/examples/private-user-response-with-public-profile-information
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: users
    patch:
      summary: Update the authenticated user
      description: >-
        **Note:** If your email is set to private and you send an `email`
        parameter as part of this request to update your profile, your privacy
        settings are still enforced: the email address will not be displayed on
        your public profile or via the API.
      tags:
        - - - - users
      operationId: users/update-authenticated
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/users#update-the-authenticated-user
      parameters: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: The new name of the user.
                  type: string
                  example: Omar Jahandar
                email:
                  description: The publicly visible email address of the user.
                  type: string
                  example: omar@example.com
                blog:
                  description: The new blog URL of the user.
                  type: string
                  example: blog.example.com
                twitter_username:
                  description: The new Twitter username of the user.
                  type: string
                  example: therealomarj
                  nullable: true
                company:
                  description: The new company of the user.
                  type: string
                  example: Acme corporation
                location:
                  description: The new location of the user.
                  type: string
                  example: Berlin, Germany
                hireable:
                  description: The new hiring availability of the user.
                  type: boolean
                bio:
                  description: The new short biography of the user.
                  type: string
            examples:
              default:
                summary: Example of updating blog and name
                value:
                  blog: https://github.com/blog
                  name: monalisa octocat
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/private-user'
              examples:
                default:
                  $ref: '#/components/examples/private-user'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: users
  /user/docker/conflicts:
    get:
      summary: >-
        Get list of conflicting packages during Docker migration for
        authenticated-user
      description: >-
        Lists all packages that are owned by the authenticated user within the
        user's namespace, and that encountered a conflict during a Docker
        migration.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint.
      tags:
        - - - - packages
      operationId: >-
        packages/list-docker-migration-conflicting-packages-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#get-list-of-conflicting-packages-during-docker-migration-for-authenticated-user
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/packages-for-user'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /user/emails:
    get:
      summary: List email addresses for the authenticated user
      description: >-
        Lists all of your email addresses, and specifies which one is visible

        to the public.


        OAuth app tokens and personal access tokens (classic) need the
        `user:email` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/list-emails-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/emails#list-email-addresses-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/email'
              examples:
                default:
                  $ref: '#/components/examples/email-items-2'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
    post:
      summary: Add an email address for the authenticated user
      description: >-
        OAuth app tokens and personal access tokens (classic) need the `user`
        scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/add-email-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/emails#add-an-email-address-for-the-authenticated-user
      parameters: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    emails:
                      description: >-
                        Adds one or more email addresses to your GitHub account.
                        Must contain at least one email address. **Note:**
                        Alternatively, you can pass a single email address or an
                        `array` of emails addresses directly, but we recommend
                        that you pass an object using the `emails` key.
                      type: array
                      items:
                        type: string
                        example: username@example.com
                        minItems: 1
                      example: []
                  required:
                    - emails
                  example:
                    emails:
                      - octocat@github.com
                      - mona@github.com
                - type: array
                  items:
                    type: string
                    example: username@example.com
                    minItems: 1
                - type: string
            examples:
              default:
                summary: Example adding multiple email addresses
                value:
                  emails:
                    - octocat@github.com
                    - mona@github.com
                    - octocat@octocat.org
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/email'
              examples:
                default:
                  $ref: '#/components/examples/email-items'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
    delete:
      summary: Delete an email address for the authenticated user
      description: >-
        OAuth app tokens and personal access tokens (classic) need the `user`
        scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/delete-email-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/emails#delete-an-email-address-for-the-authenticated-user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  description: >-
                    Deletes one or more email addresses from your GitHub
                    account. Must contain at least one email address. **Note:**
                    Alternatively, you can pass a single email address or an
                    `array` of emails addresses directly, but we recommend that
                    you pass an object using the `emails` key.
                  properties:
                    emails:
                      description: Email addresses associated with the GitHub user account.
                      type: array
                      items:
                        type: string
                        example: username@example.com
                        minItems: 1
                  example:
                    emails:
                      - octocat@github.com
                      - mona@github.com
                  required:
                    - emails
                - type: array
                  items:
                    type: string
                    example: username@example.com
                    minItems: 1
                - type: string
            examples:
              default:
                summary: Example deleting multiple email accounts
                value:
                  emails:
                    - octocat@github.com
                    - mona@github.com
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
  /user/followers:
    get:
      summary: List followers of the authenticated user
      description: Lists the people following the authenticated user.
      tags:
        - - - - users
      operationId: users/list-followers-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/followers#list-followers-of-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
  /user/following:
    get:
      summary: List the people the authenticated user follows
      description: Lists the people who the authenticated user follows.
      tags:
        - - - - users
      operationId: users/list-followed-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/followers#list-the-people-the-authenticated-user-follows
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
  /user/following/{username}:
    get:
      summary: Check if a person is followed by the authenticated user
      description: ''
      tags:
        - - - - users
      operationId: users/check-person-is-followed-by-authenticated
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/followers#check-if-a-person-is-followed-by-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: if the person is followed by the authenticated user
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          description: if the person is not followed by the authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
    put:
      summary: Follow a user
      description: >-
        Note that you'll need to set `Content-Length` to zero when calling out
        to this endpoint. For more information, see "[HTTP
        verbs](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-rest-api#http-method)."


        OAuth app tokens and personal access tokens (classic) need the
        `user:follow` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/follow
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/followers#follow-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
    delete:
      summary: Unfollow a user
      description: >-
        OAuth app tokens and personal access tokens (classic) need the
        `user:follow` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/unfollow
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/followers#unfollow-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
  /user/gpg_keys:
    get:
      summary: List GPG keys for the authenticated user
      description: >-
        Lists the current user's GPG keys.


        OAuth app tokens and personal access tokens (classic) need the
        `read:gpg_key` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/list-gpg-keys-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/gpg-keys#list-gpg-keys-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/gpg-key'
              examples:
                default:
                  $ref: '#/components/examples/gpg-key-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: gpg-keys
    post:
      summary: Create a GPG key for the authenticated user
      description: >-
        Adds a GPG key to the authenticated user's GitHub account.


        OAuth app tokens and personal access tokens (classic) need the
        `write:gpg_key` scope to use this endpoint.
      operationId: users/create-gpg-key-for-authenticated-user
      tags:
        - - - - users
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/gpg-keys#create-a-gpg-key-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: A descriptive name for the new key.
                  type: string
                armored_public_key:
                  description: A GPG key in ASCII-armored format.
                  type: string
              type: object
              required:
                - armored_public_key
            examples:
              default:
                value:
                  name: Octocat's GPG Key
                  armored_public_key: |-
                    --BEGIN PGP PUBLIC KEY BLOCK--
                    Version: GnuPG v1

                    mQINBFnZ2ZIBEADQ2Z7Z7
                    --END PGP PUBLIC KEY BLOCK--
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpg-key'
              examples:
                default:
                  $ref: '#/components/examples/gpg-key'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: gpg-keys
  /user/gpg_keys/{gpg_key_id}:
    get:
      summary: Get a GPG key for the authenticated user
      description: >-
        View extended details for a single GPG key.


        OAuth app tokens and personal access tokens (classic) need the
        `read:gpg_key` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/get-gpg-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/gpg-keys#get-a-gpg-key-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/gpg-key-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpg-key'
              examples:
                default:
                  $ref: '#/components/examples/gpg-key'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: gpg-keys
    delete:
      summary: Delete a GPG key for the authenticated user
      description: >-
        Removes a GPG key from the authenticated user's GitHub account.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:gpg_key` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/delete-gpg-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/gpg-keys#delete-a-gpg-key-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/gpg-key-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: gpg-keys
  /user/installations:
    get:
      summary: List app installations accessible to the user access token
      description: >-
        Lists installations of your GitHub App that the authenticated user has
        explicit permission (`:read`, `:write`, or `:admin`) to access.


        The authenticated user has explicit permission to access repositories
        they own, repositories where they are a collaborator, and repositories
        that they can access through an organization membership.


        You can find the permissions for the installation under the
        `permissions` key.
      tags:
        - - - - apps
      operationId: apps/list-installations-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/apps/installations#list-app-installations-accessible-to-the-user-access-token
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: >-
            You can find the permissions for the installation under the
            `permissions` key.
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - installations
                properties:
                  total_count:
                    type: integer
                  installations:
                    type: array
                    items:
                      $ref: '#/components/schemas/installation'
              examples:
                default:
                  $ref: >-
                    #/components/examples/base-installation-for-auth-user-paginated
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: installations
  /user/installations/{installation_id}/repositories:
    get:
      summary: List repositories accessible to the user access token
      description: >-
        List repositories that the authenticated user has explicit permission
        (`:read`, `:write`, or `:admin`) to access for an installation.


        The authenticated user has explicit permission to access repositories
        they own, repositories where they are a collaborator, and repositories
        that they can access through an organization membership.


        The access the user has to each repository is included in the hash under
        the `permissions` key.
      tags:
        - - - - apps
      operationId: apps/list-installation-repos-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/apps/installations#list-repositories-accessible-to-the-user-access-token
      parameters:
        - $ref: '#/components/parameters/installation-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: >-
            The access the user has to each repository is included in the hash
            under the `permissions` key.
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: integer
                  repository_selection:
                    type: string
                  repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/repository'
              examples:
                default:
                  $ref: '#/components/examples/repository-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: installations
  /user/installations/{installation_id}/repositories/{repository_id}:
    put:
      summary: Add a repository to an app installation
      description: >-
        Add a single repository to an installation. The authenticated user must
        have admin access to the repository.
      tags:
        - - - - apps
      operationId: apps/add-repo-to-installation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/apps/installations#add-a-repository-to-an-app-installation
      parameters:
        - $ref: '#/components/parameters/installation-id'
        - $ref: '#/components/parameters/repository-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: installations
    delete:
      summary: Remove a repository from an app installation
      description: >-
        Remove a single repository from an installation. The authenticated user
        must have admin access to the repository.


        You must use a personal access token (which you can create via the
        [command
        line](https://docs.github.com/enterprise-server@3.9/github/authenticating-to-github/creating-a-personal-access-token)
        or [Basic
        Authentication](https://docs.github.com/enterprise-server@3.9/rest/overview/other-authentication-methods#basic-authentication))
        to access this endpoint.
      tags:
        - - - - apps
      operationId: apps/remove-repo-from-installation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/apps/installations#remove-a-repository-from-an-app-installation
      parameters:
        - $ref: '#/components/parameters/installation-id'
        - $ref: '#/components/parameters/repository-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: installations
  /user/issues:
    get:
      summary: List user account issues assigned to the authenticated user
      description: >-
        List issues across owned and member repositories assigned to the
        authenticated user.


        **Note**: GitHub's REST API considers every pull request an issue, but
        not every issue is a pull request. For this

        reason, "Issues" endpoints may return both issues and pull requests in
        the response. You can identify pull requests by

        the `pull_request` key. Be aware that the `id` of a pull request
        returned from "Issues" endpoints will be an _issue id_. To find out the
        pull

        request id, use the "[List pull
        requests](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls#list-pull-requests)"
        endpoint.


        This endpoint supports the following custom media types. For more
        information, see "[Media
        types](https://docs.github.com/enterprise-server@3.9/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.raw+json`**: Returns the raw markdown body.
        Response will include `body`. This is the default if you do not pass any
        specific media type.

        - **`application/vnd.github.text+json`**: Returns a text only
        representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github.html+json`**: Returns HTML rendered from the
        body's markdown. Response will include `body_html`.

        - **`application/vnd.github.full+json`**: Returns raw, text, and HTML
        representations. Response will include `body`, `body_text`, and
        `body_html`.
      tags:
        - - - - issues
      operationId: issues/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/issues/issues#list-user-account-issues-assigned-to-the-authenticated-user
      parameters:
        - name: filter
          description: >-
            Indicates which sorts of issues to return. `assigned` means issues
            assigned to you. `created` means issues created by you. `mentioned`
            means issues mentioning you. `subscribed` means issues you're
            subscribed to updates for. `all` or `repos` means all issues you can
            see, regardless of participation or creation.
          in: query
          required: false
          schema:
            type: string
            enum:
              - assigned
              - created
              - mentioned
              - subscribed
              - repos
              - all
            default: assigned
        - name: state
          description: Indicates the state of the issues to return.
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
              - all
            default: open
        - $ref: '#/components/parameters/labels'
        - name: sort
          description: What to sort results by.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - comments
            default: created
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issue'
              examples:
                default:
                  $ref: '#/components/examples/issue-with-repo-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: issues
        subcategory: issues
  /user/keys:
    get:
      summary: List public SSH keys for the authenticated user
      description: >-
        Lists the public SSH keys for the authenticated user's GitHub account.


        OAuth app tokens and personal access tokens (classic) need the
        `read:public_key` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/list-public-ssh-keys-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/keys#list-public-ssh-keys-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/key'
              examples:
                default:
                  $ref: '#/components/examples/key-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: keys
    post:
      summary: Create a public SSH key for the authenticated user
      description: >-
        Adds a public SSH key to the authenticated user's GitHub account.


        OAuth app tokens and personal access tokens (classic) need the
        `write:gpg_key` scope to use this endpoint.
      operationId: users/create-public-ssh-key-for-authenticated-user
      tags:
        - - - - users
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/keys#create-a-public-ssh-key-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  description: A descriptive name for the new key.
                  type: string
                  example: Personal MacBook Air
                key:
                  description: The public SSH key to add to your GitHub account.
                  type: string
                  pattern: '^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521) '
              required:
                - key
              type: object
            examples:
              default:
                value:
                  title: ssh-rsa AAAAB3NzaC1yc2EAAA
                  key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key'
              examples:
                default:
                  $ref: '#/components/examples/key'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: keys
  /user/keys/{key_id}:
    get:
      summary: Get a public SSH key for the authenticated user
      description: >-
        View extended details for a single public SSH key.


        OAuth app tokens and personal access tokens (classic) need the
        `read:public_key` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/get-public-ssh-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/keys#get-a-public-ssh-key-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/key-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key'
              examples:
                default:
                  $ref: '#/components/examples/key'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: keys
    delete:
      summary: Delete a public SSH key for the authenticated user
      description: >-
        Removes a public SSH key from the authenticated user's GitHub account.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:public_key` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/delete-public-ssh-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/keys#delete-a-public-ssh-key-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/key-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: keys
  /user/memberships/orgs:
    get:
      summary: List organization memberships for the authenticated user
      description: Lists all of the authenticated user's organization memberships.
      tags:
        - - - - orgs
      operationId: orgs/list-memberships-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#list-organization-memberships-for-the-authenticated-user
      parameters:
        - name: state
          description: >-
            Indicates the state of the memberships to return. If not specified,
            the API returns both active and pending memberships.
          in: query
          required: false
          schema:
            type: string
            enum:
              - active
              - pending
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/org-membership'
              examples:
                default:
                  $ref: '#/components/examples/org-membership-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /user/memberships/orgs/{org}:
    get:
      summary: Get an organization membership for the authenticated user
      description: >-
        If the authenticated user is an active or pending member of the
        organization, this endpoint will return the user's membership. If the
        authenticated user is not affiliated with the organization, a `404` is
        returned. This endpoint will return a `403` if the request is made by a
        GitHub App that is blocked by the organization.
      tags:
        - - - - orgs
      operationId: orgs/get-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#get-an-organization-membership-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-membership'
              examples:
                default:
                  $ref: '#/components/examples/org-membership'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    patch:
      summary: Update an organization membership for the authenticated user
      description: >-
        Converts the authenticated user to an active member of the organization,
        if that user has a pending invitation from the organization.
      tags:
        - - - - orgs
      operationId: orgs/update-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/members#update-an-organization-membership-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: >-
                    The state that the membership should be in. Only `"active"`
                    will be accepted.
                  enum:
                    - active
              required:
                - state
            examples:
              default:
                value:
                  state: active
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-membership'
              examples:
                default:
                  $ref: '#/components/examples/org-membership-2'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /user/migrations:
    get:
      summary: List user migrations
      description: Lists all migrations a user has started.
      tags:
        - - - - migrations
      operationId: migrations/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/migrations/users#list-user-migrations
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/migration'
              examples:
                default:
                  $ref: '#/components/examples/migration-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: users
    post:
      summary: Start a user migration
      description: Initiates the generation of a user migration archive.
      tags:
        - - - - migrations
      operationId: migrations/start-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/migrations/users#start-a-user-migration
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                lock_repositories:
                  description: >-
                    Lock the repositories being migrated at the start of the
                    migration
                  example: true
                  readOnly: false
                  type: boolean
                exclude_metadata:
                  description: >-
                    Indicates whether metadata should be excluded and only git
                    source should be included for the migration.
                  example: true
                  readOnly: false
                  type: boolean
                exclude_git_data:
                  description: >-
                    Indicates whether the repository git data should be excluded
                    from the migration.
                  example: true
                  readOnly: false
                  type: boolean
                exclude_attachments:
                  description: Do not include attachments in the migration
                  example: true
                  readOnly: false
                  type: boolean
                exclude_releases:
                  description: Do not include releases in the migration
                  example: true
                  readOnly: false
                  type: boolean
                exclude_owner_projects:
                  description: >-
                    Indicates whether projects owned by the organization or
                    users should be excluded.
                  example: true
                  readOnly: false
                  type: boolean
                org_metadata_only:
                  type: boolean
                  example: true
                  description: >-
                    Indicates whether this should only include organization
                    metadata (repositories array should be empty and will ignore
                    other flags).
                  default: false
                exclude:
                  description: >-
                    Exclude attributes from the API response to improve
                    performance
                  example:
                    - repositories
                  readOnly: false
                  type: array
                  items:
                    description: Allowed values that can be passed to the exclude param.
                    enum:
                      - repositories
                    example: repositories
                    type: string
                repositories:
                  type: array
                  items:
                    description: Repository path, owner and name
                    example: acme/widgets
                    type: string
              required:
                - repositories
              type: object
            examples:
              default:
                value:
                  repositories:
                    - octocat/Hello-World
                  lock_repositories: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/migration'
              examples:
                default:
                  $ref: '#/components/examples/migration-2'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: users
  /user/migrations/{migration_id}/archive:
    get:
      summary: Download a user migration archive
      description: >-
        Fetches the URL to download the migration archive as a `tar.gz` file.
        Depending on the resources your repository uses, the migration archive
        can contain JSON files with data for these objects:


        *   attachments

        *   bases

        *   commit\_comments

        *   issue\_comments

        *   issue\_events

        *   issues

        *   milestones

        *   organizations

        *   projects

        *   protected\_branches

        *   pull\_request\_reviews

        *   pull\_requests

        *   releases

        *   repositories

        *   review\_comments

        *   schema

        *   users


        The archive will also contain an `attachments` directory that includes
        all attachment files uploaded to GitHub.com and a `repositories`
        directory that contains the repository's Git data.
      tags:
        - - - - migrations
      operationId: migrations/get-archive-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/migrations/users#download-a-user-migration-archive
      parameters:
        - $ref: '#/components/parameters/migration-id'
      responses:
        '302':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: users
  /user/migrations/{migration_id}/repositories:
    get:
      summary: List repositories for a user migration
      description: Lists all the repositories for this user migration.
      tags:
        - - - - migrations
      operationId: migrations/list-repos-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/migrations/users#list-repositories-for-a-user-migration
      parameters:
        - $ref: '#/components/parameters/migration-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: users
  /user/orgs:
    get:
      summary: List organizations for the authenticated user
      description: >-
        List organizations for the authenticated user.


        For OAuth app tokens and personal access tokens (classic), this endpoint
        only lists organizations that your authorization allows you to operate
        on in some way (e.g., you can list teams with `read:org` scope, you can
        publicize your organization membership with `user` scope, etc.).
        Therefore, this API requires at least `user` or `read:org` scope for
        OAuth app tokens and personal access tokens (classic). Requests with
        insufficient scope will receive a `403 Forbidden` response.
      tags:
        - - - - orgs
      operationId: orgs/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#list-organizations-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-simple'
              examples:
                default:
                  $ref: '#/components/examples/organization-simple-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: orgs
        subcategory: orgs
  /user/packages:
    get:
      summary: List packages for the authenticated user's namespace
      description: >-
        Lists packages owned by the authenticated user within the user's
        namespace.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint. If the `package_type`
        belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/list-packages-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#list-packages-for-the-authenticated-users-namespace
      parameters:
        - name: package_type
          description: >-
            The type of supported package. Packages in GitHub's Gradle registry
            have the type `maven`. Docker images pushed to GitHub's Container
            registry (`ghcr.io`) have the type `container`. You can use the type
            `docker` to find images that were pushed to GitHub's Docker registry
            (`docker.pkg.github.com`), even if these have now been migrated to
            the Container registry.
          in: query
          required: true
          schema:
            type: string
            enum:
              - npm
              - maven
              - rubygems
              - docker
              - nuget
              - container
        - $ref: '#/components/parameters/package-visibility'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/packages-for-user'
        '400':
          $ref: '#/components/responses/package_es_list_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /user/packages/{package_type}/{package_name}:
    get:
      summary: Get a package for the authenticated user
      description: >-
        Gets a specific package for a package owned by the authenticated user.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint. If the `package_type`
        belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/get-package-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#get-a-package-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/package-user'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
    delete:
      summary: Delete a package for the authenticated user
      description: >-
        Deletes a package owned by the authenticated user. You cannot delete a
        public package if any version of the package has more than 5,000
        downloads. In this scenario, contact GitHub support for further
        assistance.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` and `delete:packages` scopes to use this endpoint. If
        the `package_type` belongs to a GitHub Packages registry that only
        supports repository-scoped permissions, `repo` scope is also required.
        For the list these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/delete-package-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#delete-a-package-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /user/packages/{package_type}/{package_name}/restore:
    post:
      summary: Restore a package for the authenticated user
      description: >-
        Restores a package owned by the authenticated user.


        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` and `write:packages` scopes to use this endpoint. If the
        `package_type` belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/restore-package-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#restore-a-package-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - name: token
          description: package token
          schema:
            type: string
          required: false
          in: query
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /user/packages/{package_type}/{package_name}/versions:
    get:
      summary: List package versions for a package owned by the authenticated user
      description: >-
        Lists package versions for a package owned by the authenticated user.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint. If the `package_type`
        belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: >-
        packages/get-all-package-versions-for-package-owned-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#list-package-versions-for-a-package-owned-by-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
        - name: state
          in: query
          required: false
          description: The state of the package, either active or deleted.
          schema:
            type: string
            enum:
              - active
              - deleted
            default: active
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package-version'
              examples:
                default:
                  $ref: >-
                    #/components/examples/package-versions-for-authenticated-user
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /user/packages/{package_type}/{package_name}/versions/{package_version_id}:
    get:
      summary: Get a package version for the authenticated user
      description: >-
        Gets a specific package version for a package owned by the authenticated
        user.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint. If the `package_type`
        belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/get-package-version-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#get-a-package-version-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package-version'
              examples:
                default:
                  $ref: '#/components/examples/package-version-authenticated-user'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
    delete:
      summary: Delete a package version for the authenticated user
      description: >-
        Deletes a specific package version for a package owned by the
        authenticated user.  If the package is public and the package version
        has more than 5,000 downloads, you cannot delete the package version. In
        this scenario, contact GitHub support for further assistance.


        The authenticated user must have admin permissions in the organization
        to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` and `delete:packages` scopes to use this endpoint. If
        the `package_type` belongs to a GitHub Packages registry that only
        supports repository-scoped permissions, the `repo` scope is also
        required. For the list of these registries, see "[About permissions for
        GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/delete-package-version-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#delete-a-package-version-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore:
    post:
      summary: Restore a package version for the authenticated user
      description: >-
        Restores a package version owned by the authenticated user.


        You can restore a deleted package version under the following
        conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` and `write:packages` scopes to use this endpoint. If the
        `package_type` belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/restore-package-version-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#restore-a-package-version-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /user/projects:
    post:
      summary: Create a user project
      description: >-
        Creates a user project board. Returns a `410 Gone` status if the user
        does not have existing classic projects. If you do not have sufficient
        privileges to perform this action, a `401 Unauthorized` or `410 Gone`
        status is returned.
      tags:
        - - - - projects
      operationId: projects/create-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/projects/projects#create-a-user-project
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project
                  example: Week One Sprint
                  type: string
                body:
                  description: Body of the project
                  example: >-
                    This project represents the sprint of the first week in
                    January
                  type: string
                  nullable: true
              required:
                - name
              type: object
            examples:
              default:
                summary: Create a new project
                value:
                  name: My Projects
                  body: A board to manage my personal projects.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
              examples:
                default:
                  $ref: '#/components/examples/project'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: projects
  /user/public_emails:
    get:
      summary: List public email addresses for the authenticated user
      description: >-
        Lists your publicly visible email address, which you can set with the

        [Set primary email visibility for the authenticated
        user](https://docs.github.com/enterprise-server@3.9/rest/users/emails#set-primary-email-visibility-for-the-authenticated-user)

        endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `user:email` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/list-public-emails-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/emails#list-public-email-addresses-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/email'
              examples:
                default:
                  $ref: '#/components/examples/email-items-2'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
  /user/repos:
    get:
      summary: List repositories for the authenticated user
      description: >-
        Lists repositories that the authenticated user has explicit permission
        (`:read`, `:write`, or `:admin`) to access.


        The authenticated user has explicit permission to access repositories
        they own, repositories where they are a collaborator, and repositories
        that they can access through an organization membership.
      tags:
        - - - - repos
      operationId: repos/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/repos/repos#list-repositories-for-the-authenticated-user
      parameters:
        - name: visibility
          description: Limit results to repositories with the specified visibility.
          in: query
          required: false
          schema:
            type: string
            enum:
              - all
              - public
              - private
            default: all
        - name: affiliation
          description: |-
            Comma-separated list of values. Can include:  
             * `owner`: Repositories that are owned by the authenticated user.  
             * `collaborator`: Repositories that the user has been added to as a collaborator.  
             * `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.
          in: query
          required: false
          schema:
            type: string
            default: owner,collaborator,organization_member
        - name: type
          description: >-
            Limit results to repositories of the specified type. Will cause a
            `422` error if used in the same request as **visibility** or
            **affiliation**.
          in: query
          required: false
          schema:
            type: string
            enum:
              - all
              - owner
              - public
              - private
              - member
            default: all
        - name: sort
          description: The property to sort the results by.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - pushed
              - full_name
            default: full_name
        - name: direction
          description: >-
            The order to sort by. Default: `asc` when using `full_name`,
            otherwise `desc`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/since-repo-date'
        - $ref: '#/components/parameters/before-repo-date'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository'
              examples:
                default:
                  $ref: '#/components/examples/repository-items-default-response'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: repos
    post:
      summary: Create a repository for the authenticated user
      description: >-
        Creates a new repository for the authenticated user.


        OAuth app tokens and personal access tokens (classic) need the
        `public_repo` or `repo` scope to create a public repository, and `repo`
        scope to create a private repository.
      tags:
        - - - - repos
      operationId: repos/create-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/repos/repos#create-a-repository-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of the repository.
                  type: string
                  example: Team Environment
                description:
                  description: A short description of the repository.
                  type: string
                homepage:
                  description: A URL with more information about the repository.
                  type: string
                private:
                  description: Whether the repository is private.
                  default: false
                  type: boolean
                has_issues:
                  description: Whether issues are enabled.
                  default: true
                  type: boolean
                  example: true
                has_projects:
                  description: Whether projects are enabled.
                  default: true
                  type: boolean
                  example: true
                has_wiki:
                  description: Whether the wiki is enabled.
                  default: true
                  type: boolean
                  example: true
                has_discussions:
                  description: Whether discussions are enabled.
                  default: false
                  type: boolean
                  example: true
                team_id:
                  description: >-
                    The id of the team that will be granted access to this
                    repository. This is only valid when creating a repository in
                    an organization.
                  type: integer
                auto_init:
                  description: Whether the repository is initialized with a minimal README.
                  default: false
                  type: boolean
                gitignore_template:
                  description: The desired language or platform to apply to the .gitignore.
                  example: Haskell
                  type: string
                license_template:
                  description: >-
                    The license keyword of the open source license for this
                    repository.
                  example: mit
                  type: string
                allow_squash_merge:
                  description: Whether to allow squash merges for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_merge_commit:
                  description: Whether to allow merge commits for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_rebase_merge:
                  description: Whether to allow rebase merges for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_auto_merge:
                  description: Whether to allow Auto-merge to be used on pull requests.
                  default: false
                  type: boolean
                  example: false
                delete_branch_on_merge:
                  description: >-
                    Whether to delete head branches when pull requests are
                    merged
                  default: false
                  type: boolean
                  example: false
                squash_merge_commit_title:
                  type: string
                  enum:
                    - PR_TITLE
                    - COMMIT_OR_PR_TITLE
                  description: >-
                    The default value for a squash merge commit title:


                    - `PR_TITLE` - default to the pull request's title.

                    - `COMMIT_OR_PR_TITLE` - default to the commit's title (if
                    only one commit) or the pull request's title (when more than
                    one commit).
                squash_merge_commit_message:
                  type: string
                  enum:
                    - PR_BODY
                    - COMMIT_MESSAGES
                    - BLANK
                  description: >-
                    The default value for a squash merge commit message:


                    - `PR_BODY` - default to the pull request's body.

                    - `COMMIT_MESSAGES` - default to the branch's commit
                    messages.

                    - `BLANK` - default to a blank commit message.
                merge_commit_title:
                  type: string
                  enum:
                    - PR_TITLE
                    - MERGE_MESSAGE
                  description: >-
                    The default value for a merge commit title.


                    - `PR_TITLE` - default to the pull request's title.

                    - `MERGE_MESSAGE` - default to the classic title for a merge
                    message (e.g., Merge pull request #123 from branch-name).
                merge_commit_message:
                  type: string
                  enum:
                    - PR_BODY
                    - PR_TITLE
                    - BLANK
                  description: |-
                    The default value for a merge commit message.

                    - `PR_TITLE` - default to the pull request's title.
                    - `PR_BODY` - default to the pull request's body.
                    - `BLANK` - default to a blank commit message.
                has_downloads:
                  description: Whether downloads are enabled.
                  default: true
                  type: boolean
                  example: true
                is_template:
                  description: >-
                    Whether this repository acts as a template that can be used
                    to generate new repositories.
                  default: false
                  type: boolean
                  example: true
              required:
                - name
              type: object
            examples:
              default:
                value:
                  name: Hello-World
                  description: This is your first repo!
                  homepage: https://github.com
                  private: false
                  is_template: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/full-repository'
              examples:
                default:
                  $ref: '#/components/examples/full-repository'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
        '304':
          $ref: '#/components/responses/not_modified'
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: repos
  /user/repository_invitations:
    get:
      summary: List repository invitations for the authenticated user
      description: >-
        When authenticating as a user, this endpoint will list all currently
        open repository invitations for that user.
      tags:
        - - - - repos
      operationId: repos/list-invitations-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/collaborators/invitations#list-repository-invitations-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository-invitation'
              examples:
                default:
                  $ref: '#/components/examples/repository-invitation-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: collaborators
        subcategory: invitations
  /user/repository_invitations/{invitation_id}:
    patch:
      summary: Accept a repository invitation
      description: ''
      tags:
        - - - - repos
      operationId: repos/accept-invitation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/collaborators/invitations#accept-a-repository-invitation
      parameters:
        - $ref: '#/components/parameters/invitation-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: collaborators
        subcategory: invitations
    delete:
      summary: Decline a repository invitation
      description: ''
      tags:
        - - - - repos
      operationId: repos/decline-invitation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/collaborators/invitations#decline-a-repository-invitation
      parameters:
        - $ref: '#/components/parameters/invitation-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: collaborators
        subcategory: invitations
  /user/social_accounts:
    get:
      summary: List social accounts for the authenticated user
      description: Lists all of your social accounts.
      tags:
        - - - - users
      operationId: users/list-social-accounts-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/social-accounts#list-social-accounts-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/social-account'
              examples:
                default:
                  $ref: '#/components/examples/social-account-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: social-accounts
    post:
      summary: Add social accounts for the authenticated user
      description: >-
        Add one or more social accounts to the authenticated user's profile.


        OAuth app tokens and personal access tokens (classic) need the `user`
        scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/add-social-account-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/social-accounts#add-social-accounts-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_urls:
                  description: Full URLs for the social media profiles to add.
                  type: array
                  items:
                    type: string
                    example: https://twitter.com/github
                  example: []
              required:
                - account_urls
              example:
                account_urls:
                  - https://www.linkedin.com/company/github/
                  - https://twitter.com/github
            examples:
              default:
                summary: Adding multiple social accounts
                value:
                  account_urls:
                    - https://facebook.com/GitHub
                    - https://www.youtube.com/@GitHub
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/social-account'
              examples:
                default:
                  $ref: '#/components/examples/social-account-items'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: social-accounts
    delete:
      summary: Delete social accounts for the authenticated user
      description: >-
        Deletes one or more social accounts from the authenticated user's
        profile.


        OAuth app tokens and personal access tokens (classic) need the `user`
        scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/delete-social-account-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/social-accounts#delete-social-accounts-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_urls:
                  description: Full URLs for the social media profiles to delete.
                  type: array
                  items:
                    type: string
                    example: https://twitter.com/github
                  example: []
              required:
                - account_urls
              example:
                account_urls:
                  - https://www.linkedin.com/company/github/
                  - https://twitter.com/github
            examples:
              default:
                summary: Deleting multiple social accounts
                value:
                  account_urls:
                    - https://facebook.com/GitHub
                    - https://www.youtube.com/@GitHub
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: social-accounts
  /user/ssh_signing_keys:
    get:
      summary: List SSH signing keys for the authenticated user
      description: >-
        Lists the SSH signing keys for the authenticated user's GitHub account.


        OAuth app tokens and personal access tokens (classic) need the
        `read:ssh_signing_key` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/list-ssh-signing-keys-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/ssh-signing-keys#list-ssh-signing-keys-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ssh-signing-key'
              examples:
                default:
                  $ref: '#/components/examples/ssh-signing-key-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: ssh-signing-keys
    post:
      summary: Create a SSH signing key for the authenticated user
      description: >-
        Creates an SSH signing key for the authenticated user's GitHub account.


        OAuth app tokens and personal access tokens (classic) need the
        `write:ssh_signing_key` scope to use this endpoint.
      operationId: users/create-ssh-signing-key-for-authenticated-user
      tags:
        - - - - users
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/ssh-signing-keys#create-a-ssh-signing-key-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  description: A descriptive name for the new key.
                  type: string
                  example: Personal MacBook Air
                key:
                  description: >-
                    The public SSH key to add to your GitHub account. For more
                    information, see "[Checking for existing SSH
                    keys](https://docs.github.com/enterprise-server@3.9/authentication/connecting-to-github-with-ssh/checking-for-existing-ssh-keys)."
                  type: string
                  pattern: >-
                    ^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521)
                    |^(sk-ssh-ed25519|sk-ecdsa-sha2-nistp256)@openssh.com 
              required:
                - key
              type: object
            examples:
              default:
                value:
                  key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
                  title: ssh-rsa AAAAB3NzaC1yc2EAAA
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ssh-signing-key'
              examples:
                default:
                  $ref: '#/components/examples/ssh-signing-key'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: ssh-signing-keys
  /user/ssh_signing_keys/{ssh_signing_key_id}:
    get:
      summary: Get an SSH signing key for the authenticated user
      description: >-
        Gets extended details for an SSH signing key.


        OAuth app tokens and personal access tokens (classic) need the
        `read:ssh_signing_key` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/get-ssh-signing-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/ssh-signing-keys#get-an-ssh-signing-key-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/ssh-signing-key-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ssh-signing-key'
              examples:
                default:
                  $ref: '#/components/examples/ssh-signing-key'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: ssh-signing-keys
    delete:
      summary: Delete an SSH signing key for the authenticated user
      description: >-
        Deletes an SSH signing key from the authenticated user's GitHub account.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:ssh_signing_key` scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/delete-ssh-signing-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/ssh-signing-keys#delete-an-ssh-signing-key-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/ssh-signing-key-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: ssh-signing-keys
  /user/starred:
    get:
      summary: List repositories starred by the authenticated user
      description: >-
        Lists repositories the authenticated user has starred.


        This endpoint supports the following custom media types. For more
        information, see "[Media
        types](https://docs.github.com/enterprise-server@3.9/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.star+json`**: Includes a timestamp of when
        the star was created.
      tags:
        - - - - activity
      operationId: activity/list-repos-starred-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/starring#list-repositories-starred-by-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/sort-starred'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository'
              examples:
                default-response:
                  $ref: '#/components/examples/repository-items-default-response'
            application/vnd.github.v3.star+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/starred-repository'
              examples:
                alternative-response-with-star-creation-timestamps:
                  $ref: >-
                    #/components/examples/starred-repository-items-alternative-response-with-star-creation-timestamps
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: starring
  /user/starred/{owner}/{repo}:
    get:
      summary: Check if a repository is starred by the authenticated user
      description: Whether the authenticated user has starred the repository.
      tags:
        - - - - activity
      operationId: activity/check-repo-is-starred-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/starring#check-if-a-repository-is-starred-by-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response if this repository is starred by you
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          description: Not Found if this repository is not starred by you
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: starring
    put:
      summary: Star a repository for the authenticated user
      description: >-
        Note that you'll need to set `Content-Length` to zero when calling out
        to this endpoint. For more information, see "[HTTP
        method](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-rest-api#http-method)."
      tags:
        - - - - activity
      operationId: activity/star-repo-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/starring#star-a-repository-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: starring
    delete:
      summary: Unstar a repository for the authenticated user
      description: Unstar a repository that the authenticated user has previously starred.
      tags:
        - - - - activity
      operationId: activity/unstar-repo-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/starring#unstar-a-repository-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: starring
  /user/subscriptions:
    get:
      summary: List repositories watched by the authenticated user
      description: Lists repositories the authenticated user is watching.
      tags:
        - - - - activity
      operationId: activity/list-watched-repos-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/watching#list-repositories-watched-by-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: watching
  /user/teams:
    get:
      summary: List teams for the authenticated user
      description: >-
        List all of the teams across all of the organizations to which the
        authenticated

        user belongs.


        OAuth app tokens and personal access tokens (classic) need the `user`,
        `repo`, or `read:org` scope to use this endpoint.


        When using a fine-grained personal access token, the resource owner of
        the token must be a single organization, and the response will only
        include the teams from that organization.
      tags:
        - - - - teams
      operationId: teams/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/teams/teams#list-teams-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: teams
        subcategory: teams
  /users:
    get:
      summary: List users
      description: >-
        Lists all users, in the order that they signed up on GitHub Enterprise
        Server. This list includes personal user accounts and organization
        accounts.


        Note: Pagination is powered exclusively by the `since` parameter. Use
        the [Link
        header](https://docs.github.com/enterprise-server@3.9/rest/guides/using-pagination-in-the-rest-api#using-link-headers)
        to get the URL for the next page of users.
      tags:
        - - - - users
      operationId: users/list
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/users#list-users
      parameters:
        - $ref: '#/components/parameters/since-user'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              example: <https://api.github.com/users?since=135>; rel="next"
              schema:
                type: string
        '304':
          $ref: '#/components/responses/not_modified'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: users
  /users/{username}:
    get:
      summary: Get a user
      description: >-
        Provides publicly available information about someone with a GitHub
        account.


        The `email` key in the following response is the publicly visible email
        address from your GitHub Enterprise Server [profile
        page](https://github.com/settings/profile). When setting up your
        profile, you can select a primary email address to be “public” which
        provides an email entry for this endpoint. If you do not set a public
        email address for `email`, then it will have a value of `null`. You only
        see publicly visible email addresses when authenticated with GitHub
        Enterprise Server. For more information, see
        [Authentication](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-rest-api#authentication).


        The Emails API enables you to list all of your email addresses, and
        toggle a primary email to be visible publicly. For more information, see
        "[Emails
        API](https://docs.github.com/enterprise-server@3.9/rest/users/emails)".
      tags:
        - - - - users
      operationId: users/get-by-username
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/users#get-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/private-user'
                  - $ref: '#/components/schemas/public-user'
              examples:
                default-response:
                  $ref: '#/components/examples/public-user-default-response'
                response-with-git-hub-plan-information:
                  $ref: >-
                    #/components/examples/public-user-response-with-git-hub-plan-information
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: users
  /users/{username}/docker/conflicts:
    get:
      summary: Get list of conflicting packages during Docker migration for user
      description: >-
        Lists all packages that are in a specific user's namespace, that the
        requesting user has access to, and that encountered a conflict during
        Docker migration.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint.
      tags:
        - - - - packages
      operationId: packages/list-docker-migration-conflicting-packages-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#get-list-of-conflicting-packages-during-docker-migration-for-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/packages-for-user'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /users/{username}/events:
    get:
      summary: List events for the authenticated user
      description: >-
        If you are authenticated as the given user, you will see your private
        events. Otherwise, you'll only see public events.
      tags:
        - - - - activity
      operationId: activity/list-events-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/events#list-events-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/event'
              examples:
                default:
                  $ref: '#/components/examples/user-events-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /users/{username}/events/orgs/{org}:
    get:
      summary: List organization events for the authenticated user
      description: >-
        This is the user's organization dashboard. You must be authenticated as
        the user to view this.
      tags:
        - - - - activity
      operationId: activity/list-org-events-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/events#list-organization-events-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/event'
              examples:
                default:
                  $ref: '#/components/examples/user-org-events-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: events
  /users/{username}/events/public:
    get:
      summary: List public events for a user
      description: ''
      tags:
        - - - - activity
      operationId: activity/list-public-events-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/events#list-public-events-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/event'
              examples:
                default:
                  $ref: '#/components/examples/user-public-events-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /users/{username}/followers:
    get:
      summary: List followers of a user
      description: Lists the people following the specified user.
      tags:
        - - - - users
      operationId: users/list-followers-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/followers#list-followers-of-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: followers
  /users/{username}/following:
    get:
      summary: List the people a user follows
      description: Lists the people who the specified user follows.
      tags:
        - - - - users
      operationId: users/list-following-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/followers#list-the-people-a-user-follows
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: followers
  /users/{username}/following/{target_user}:
    get:
      summary: Check if a user follows another user
      description: ''
      tags:
        - - - - users
      operationId: users/check-following-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/followers#check-if-a-user-follows-another-user
      parameters:
        - $ref: '#/components/parameters/username'
        - name: target_user
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: if the user follows the target user
        '404':
          description: if the user does not follow the target user
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: followers
  /users/{username}/gists:
    get:
      summary: List gists for a user
      description: 'Lists public gists for the specified user:'
      tags:
        - - - - gists
      operationId: gists/list-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/gists/gists#list-gists-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/base-gist'
              examples:
                default:
                  $ref: '#/components/examples/base-gist-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
  /users/{username}/gpg_keys:
    get:
      summary: List GPG keys for a user
      description: Lists the GPG keys for a user. This information is accessible by anyone.
      tags:
        - - - - users
      operationId: users/list-gpg-keys-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/gpg-keys#list-gpg-keys-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/gpg-key'
              examples:
                default:
                  $ref: '#/components/examples/gpg-key-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: gpg-keys
  /users/{username}/hovercard:
    get:
      summary: Get contextual information for a user
      description: >-
        Provides hovercard information. You can find out more about someone in
        relation to their pull requests, issues, repositories, and
        organizations.


        The `subject_type` and `subject_id` parameters provide context for the
        person's hovercard, which returns more information than without the
        parameters. For example, if you wanted to find out more about `octocat`
        who owns the `Spoon-Knife` repository via cURL, it would look like this:


        ```shell
         curl -u username:token
          https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192
        ```


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - - - - users
      operationId: users/get-context-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/users#get-contextual-information-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - name: subject_type
          description: >-
            Identifies which additional information you'd like to receive about
            the person's hovercard. Can be `organization`, `repository`,
            `issue`, `pull_request`. **Required** when using `subject_id`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - organization
              - repository
              - issue
              - pull_request
        - name: subject_id
          description: >-
            Uses the ID for the `subject_type` you specified. **Required** when
            using `subject_type`.
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hovercard'
              examples:
                default:
                  $ref: '#/components/examples/hovercard'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: users
  /users/{username}/installation:
    get:
      summary: Get a user installation for the authenticated app
      description: >-
        Enables an authenticated GitHub App to find the user’s installation
        information.


        You must use a
        [JWT](https://docs.github.com/enterprise-server@3.9/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
      tags:
        - - - - apps
      operationId: apps/get-user-installation
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/apps/apps#get-a-user-installation-for-the-authenticated-app
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installation'
              examples:
                default:
                  $ref: '#/components/examples/installation'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: apps
  /users/{username}/keys:
    get:
      summary: List public keys for a user
      description: >-
        Lists the _verified_ public SSH keys for a user. This is accessible by
        anyone.
      tags:
        - - - - users
      operationId: users/list-public-keys-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/keys#list-public-keys-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/key-simple'
              examples:
                default:
                  $ref: '#/components/examples/key-simple-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: keys
  /users/{username}/orgs:
    get:
      summary: List organizations for a user
      description: >-
        List [public organization
        memberships](https://docs.github.com/enterprise-server@3.9/articles/publicizing-or-concealing-organization-membership)
        for the specified user.


        This method only lists _public_ memberships, regardless of
        authentication. If you need to fetch all of the organization memberships
        (public and private) for the authenticated user, use the [List
        organizations for the authenticated
        user](https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#list-organizations-for-the-authenticated-user)
        API instead.
      tags:
        - - - - orgs
      operationId: orgs/list-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/orgs/orgs#list-organizations-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-simple'
              examples:
                default:
                  $ref: '#/components/examples/organization-simple-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  /users/{username}/packages:
    get:
      summary: List packages for a user
      description: >-
        Lists all packages in a user's namespace for which the requesting user
        has access.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint. If the `package_type`
        belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/list-packages-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#list-packages-for-a-user
      parameters:
        - name: package_type
          description: >-
            The type of supported package. Packages in GitHub's Gradle registry
            have the type `maven`. Docker images pushed to GitHub's Container
            registry (`ghcr.io`) have the type `container`. You can use the type
            `docker` to find images that were pushed to GitHub's Docker registry
            (`docker.pkg.github.com`), even if these have now been migrated to
            the Container registry.
          in: query
          required: true
          schema:
            type: string
            enum:
              - npm
              - maven
              - rubygems
              - docker
              - nuget
              - container
        - $ref: '#/components/parameters/package-visibility'
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/packages-for-user'
        '400':
          $ref: '#/components/responses/package_es_list_error'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /users/{username}/packages/{package_type}/{package_name}:
    get:
      summary: Get a package for a user
      description: >-
        Gets a specific package metadata for a public package owned by a user.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint. If the `package_type`
        belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/get-package-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#get-a-package-for-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/package-user'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
    delete:
      summary: Delete a package for a user
      description: >-
        Deletes an entire package for a user. You cannot delete a public package
        if any version of the package has more than 5,000 downloads. In this
        scenario, contact GitHub support for further assistance.


        If the `package_type` belongs to a GitHub Packages registry that
        supports granular permissions, the authenticated user must have admin
        permissions to the package. For the list of these registries, see
        "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` and `delete:packages` scopes to use this endpoint. If
        the `package_type` belongs to a GitHub Packages registry that only
        supports repository-scoped permissions, the `repo` scope is also
        required. For the list of these registries, see "[About permissions for
        GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/delete-package-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#delete-a-package-for-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /users/{username}/packages/{package_type}/{package_name}/restore:
    post:
      summary: Restore a package for a user
      description: >-
        Restores an entire package for a user.


        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        If the `package_type` belongs to a GitHub Packages registry that
        supports granular permissions, the authenticated user must have admin
        permissions to the package. For the list of these registries, see
        "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` and `write:packages` scopes to use this endpoint. If the
        `package_type` belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/restore-package-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#restore-a-package-for-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/username'
        - name: token
          description: package token
          schema:
            type: string
          required: false
          in: query
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /users/{username}/packages/{package_type}/{package_name}/versions:
    get:
      summary: List package versions for a package owned by a user
      description: >-
        Lists package versions for a public package owned by a specified user.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint. If the `package_type`
        belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/get-all-package-versions-for-package-owned-by-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#list-package-versions-for-a-package-owned-by-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package-version'
              examples:
                default:
                  $ref: '#/components/examples/package-versions-for-user'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}:
    get:
      summary: Get a package version for a user
      description: >-
        Gets a specific package version for a public package owned by a
        specified user.


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` scope to use this endpoint. If the `package_type`
        belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/get-package-version-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#get-a-package-version-for-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/package-version-id'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package-version'
              examples:
                default:
                  $ref: '#/components/examples/package-version-user'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
    delete:
      summary: Delete package version for a user
      description: >-
        Deletes a specific package version for a user. If the package is public
        and the package version has more than 5,000 downloads, you cannot delete
        the package version. In this scenario, contact GitHub support for
        further assistance.


        If the `package_type` belongs to a GitHub Packages registry that
        supports granular permissions, the authenticated user must have admin
        permissions to the package. For the list of these registries, see
        "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` and `delete:packages` scopes to use this endpoint. If
        the `package_type` belongs to a GitHub Packages registry that only
        supports repository-scoped permissions, the `repo` scope is also
        required. For the list of these registries, see "[About permissions for
        GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/delete-package-version-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#delete-package-version-for-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore:
    post:
      summary: Restore package version for a user
      description: >-
        Restores a specific package version for a user.


        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        If the `package_type` belongs to a GitHub Packages registry that
        supports granular permissions, the authenticated user must have admin
        permissions to the package. For the list of these registries, see
        "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."


        OAuth app tokens and personal access tokens (classic) need the
        `read:packages` and `write:packages` scopes to use this endpoint. If the
        `package_type` belongs to a GitHub Packages registry that only supports
        repository-scoped permissions, the `repo` scope is also required. For
        the list of these registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
        - - - - packages
      operationId: packages/restore-package-version-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/packages/packages#restore-package-version-for-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  /users/{username}/projects:
    get:
      summary: List user projects
      description: Lists projects for a user.
      tags:
        - - - - projects
      operationId: projects/list-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/projects/projects#list-user-projects
      parameters:
        - $ref: '#/components/parameters/username'
        - name: state
          description: Indicates the state of the projects to return.
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
              - all
            default: open
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/project'
              examples:
                default:
                  $ref: '#/components/examples/project-items-3'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: projects
        subcategory: projects
  /users/{username}/received_events:
    get:
      summary: List events received by the authenticated user
      description: >-
        These are events that you've received by watching repositories and
        following users. If you are authenticated as the given user, you will
        see private events. Otherwise, you'll only see public events.
      tags:
        - - - - activity
      operationId: activity/list-received-events-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/events#list-events-received-by-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/event'
              examples:
                default:
                  $ref: '#/components/examples/user-received-events-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /users/{username}/received_events/public:
    get:
      summary: List public events received by a user
      description: ''
      tags:
        - - - - activity
      operationId: activity/list-received-public-events-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/events#list-public-events-received-by-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/event'
              examples:
                default:
                  $ref: '#/components/examples/user-received-public-events-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /users/{username}/repos:
    get:
      summary: List repositories for a user
      description: Lists public repositories for the specified user.
      tags:
        - - - - repos
      operationId: repos/list-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/repos/repos#list-repositories-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - name: type
          description: Limit results to repositories of the specified type.
          in: query
          required: false
          schema:
            type: string
            enum:
              - all
              - owner
              - member
            default: owner
        - name: sort
          description: The property to sort the results by.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - pushed
              - full_name
            default: full_name
        - name: direction
          description: >-
            The order to sort by. Default: `asc` when using `full_name`,
            otherwise `desc`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /users/{username}/site_admin:
    put:
      summary: Promote a user to be a site administrator
      description: >-
        Note that you'll need to set `Content-Length` to zero when calling out
        to this endpoint. For more information, see "[HTTP
        method](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-rest-api#http-method)."
      operationId: enterprise-admin/promote-user-to-be-site-administrator
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/users#promote-a-user-to-be-a-site-administrator
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: users
    delete:
      summary: Demote a site administrator
      description: You can demote any user account except your own.
      operationId: enterprise-admin/demote-site-administrator
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/users#demote-a-site-administrator
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: users
  /users/{username}/social_accounts:
    get:
      summary: List social accounts for a user
      description: >-
        Lists social media accounts for a user. This endpoint is accessible by
        anyone.
      tags:
        - - - - users
      operationId: users/list-social-accounts-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/social-accounts#list-social-accounts-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/social-account'
              examples:
                default:
                  $ref: '#/components/examples/social-account-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: social-accounts
  /users/{username}/ssh_signing_keys:
    get:
      summary: List SSH signing keys for a user
      description: >-
        Lists the SSH signing keys for a user. This operation is accessible by
        anyone.
      tags:
        - - - - users
      operationId: users/list-ssh-signing-keys-for-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/users/ssh-signing-keys#list-ssh-signing-keys-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ssh-signing-key'
              examples:
                default:
                  $ref: '#/components/examples/ssh-signing-key-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: ssh-signing-keys
  /users/{username}/starred:
    get:
      summary: List repositories starred by a user
      description: >-
        Lists repositories a user has starred.


        This endpoint supports the following custom media types. For more
        information, see "[Media
        types](https://docs.github.com/enterprise-server@3.9/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.star+json`**: Includes a timestamp of when
        the star was created.
      tags:
        - - - - activity
      operationId: activity/list-repos-starred-by-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/starring#list-repositories-starred-by-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/sort-starred'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/starred-repository'
                  - type: array
                    items:
                      $ref: '#/components/schemas/repository'
              examples:
                default-response:
                  $ref: '#/components/examples/repository-items-default-response'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: starring
  /users/{username}/subscriptions:
    get:
      summary: List repositories watched by a user
      description: Lists repositories a user is watching.
      tags:
        - - - - activity
      operationId: activity/list-repos-watched-by-user
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/activity/watching#list-repositories-watched-by-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: watching
  /users/{username}/suspended:
    put:
      summary: Suspend a user
      description: >-
        If your GitHub instance uses [LDAP Sync with Active Directory LDAP
        servers](https://docs.github.com/enterprise-server@3.9/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap),
        Active Directory LDAP-authenticated users cannot be suspended through
        this API. If you attempt to suspend an Active Directory
        LDAP-authenticated user through this API, it will return a `403`
        response.


        You can suspend any user account except your own.


        Note that, if you choose not to pass any parameters, you'll need to set
        `Content-Length` to zero when calling out to this endpoint. For more
        information, see "[HTTP
        method](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-rest-api#http-method)."
      operationId: enterprise-admin/suspend-user
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/users#suspend-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                reason:
                  type: string
                  description: >-
                    The reason the user is being suspended. This message will be
                    logged in the [audit
                    log](https://docs.github.com/enterprise-server@3.9/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/about-the-audit-log-for-your-enterprise).
                    If you don't provide a `reason`, it will default to
                    "Suspended via API by _SITE\_ADMINISTRATOR_", where
                    _SITE\_ADMINISTRATOR_ is the person who performed the
                    action.
            examples:
              reason:
                value:
                  reason: Suspended during leave of absence.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: users
    delete:
      summary: Unsuspend a user
      description: >-
        If your GitHub instance uses [LDAP Sync with Active Directory LDAP
        servers](https://docs.github.com/enterprise-server@3.9/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap),
        this API is disabled and will return a `403` response. Active Directory
        LDAP-authenticated users cannot be unsuspended using the API.
      operationId: enterprise-admin/unsuspend-user
      tags:
        - - - - enterprise-admin
      externalDocs:
        description: API method documentation
        url: >-
          https://docs.github.com/enterprise-server@3.9/rest/enterprise-admin/users#unsuspend-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
      requestBody:
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                reason:
                  type: string
                  description: >-
                    The reason the user is being unsuspended. This message will
                    be logged in the [audit
                    log](https://docs.github.com/enterprise-server@3.9/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/about-the-audit-log-for-your-enterprise).
                    If you don't provide a `reason`, it will default to
                    "Unsuspended via API by _SITE\_ADMINISTRATOR_", where
                    _SITE\_ADMINISTRATOR_ is the person who performed the
                    action.
            examples:
              reason:
                value:
                  reason: Unsuspended after leave of absence.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: enterprise-admin
        subcategory: users
x-webhooks:
  branch-protection-rule-created:
    post:
      summary: >-
        This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected
        branches](https://docs.github.com/enterprise-server@3.9/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see
        [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#branchprotectionrule)
        or "[Branch
        protection](https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Administration" repository permission.
      description: A branch protection rule was created.
      operationId: branch-protection-rule/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#branch_protection_rule
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: branch_protection_rule
        supported-webhook-types:
          - repository
          - organization
          - app
  branch-protection-rule-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected
        branches](https://docs.github.com/enterprise-server@3.9/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see
        [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#branchprotectionrule)
        or "[Branch
        protection](https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Administration" repository permission.
      description: A branch protection rule was deleted.
      operationId: branch-protection-rule/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#branch_protection_rule
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: branch_protection_rule
        supported-webhook-types:
          - repository
          - organization
          - app
  branch-protection-rule-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected
        branches](https://docs.github.com/enterprise-server@3.9/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see
        [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#branchprotectionrule)
        or "[Branch
        protection](https://docs.github.com/enterprise-server@3.9/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Administration" repository permission.
      description: A branch protection rule was edited.
      operationId: branch-protection-rule/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#branch_protection_rule
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: branch_protection_rule
        supported-webhook-types:
          - repository
          - organization
          - app
  cache-sync:
    post:
      summary: >-
        This event occurs when a Git ref has been successfully synced to a cache
        replica. For more information, see "[About repository
        caching](https://docs.github.com/enterprise-server@3.9/admin/enterprise-management/caching-repositories/about-repository-caching)."
      operationId: cache-sync
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#cache_sync
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-cache-sync'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: cache_sync
        supported-webhook-types:
          - repository
          - organization
          - app
  check-run-completed:
    post:
      summary: >-
        This event occurs when there is activity relating to a check run. For
        information about check runs, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checkrun)
        or "[Check
        Runs](https://docs.github.com/enterprise-server@3.9/rest/checks/runs)"
        in the REST API documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" repository permission. To receive the
        `rerequested` and `requested_action` event types, the app must have at
        least write-level access for the "Checks" permission. GitHub Apps with
        write-level access for the "Checks" permission are automatically
        subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `created` and `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check run was created. Pushes to a branch in a forked repository are not
        detected and return an empty `pull_requests` array and a `null` value
        for `head_branch`.
      description: A check run was completed, and a conclusion is available.
      operationId: check-run/completed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-completed'
            examples:
              default:
                $ref: '#/components/examples/check-run-completed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-completed-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/check-run-completed-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: check_run
        supported-webhook-types:
          - repository
          - organization
          - app
  check-run-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a check run. For
        information about check runs, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checkrun)
        or "[Check
        Runs](https://docs.github.com/enterprise-server@3.9/rest/checks/runs)"
        in the REST API documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" repository permission. To receive the
        `rerequested` and `requested_action` event types, the app must have at
        least write-level access for the "Checks" permission. GitHub Apps with
        write-level access for the "Checks" permission are automatically
        subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `created` and `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check run was created. Pushes to a branch in a forked repository are not
        detected and return an empty `pull_requests` array and a `null` value
        for `head_branch`.
      description: A new check run was created.
      operationId: check-run/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-created'
            examples:
              default:
                $ref: '#/components/examples/check-run-created'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-created-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/check-run-created-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: check_run
        supported-webhook-types:
          - repository
          - organization
          - app
  check-run-requested-action:
    post:
      summary: >-
        This event occurs when there is activity relating to a check run. For
        information about check runs, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checkrun)
        or "[Check
        Runs](https://docs.github.com/enterprise-server@3.9/rest/checks/runs)"
        in the REST API documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" repository permission. To receive the
        `rerequested` and `requested_action` event types, the app must have at
        least write-level access for the "Checks" permission. GitHub Apps with
        write-level access for the "Checks" permission are automatically
        subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `created` and `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check run was created. Pushes to a branch in a forked repository are not
        detected and return an empty `pull_requests` array and a `null` value
        for `head_branch`.
      description: >-
        A check run completed, and someone requested a followup action that your
        app provides. Only the GitHub App someone requests to perform an action
        will receive the `requested_action` payload. For more information, see
        "[Creating CI tests with the Checks
        API](https://docs.github.com/enterprise-server@3.9/developers/apps/guides/creating-ci-tests-with-the-checks-api)."
      operationId: check-run/requested-action
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-requested-action'
            examples:
              default:
                $ref: '#/components/examples/check-run-requested-action'
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/webhook-check-run-requested-action-form-encoded
            examples:
              default:
                $ref: '#/components/examples/check-run-requested-action-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: check_run
        supported-webhook-types:
          - repository
          - organization
          - app
  check-run-rerequested:
    post:
      summary: >-
        This event occurs when there is activity relating to a check run. For
        information about check runs, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checkrun)
        or "[Check
        Runs](https://docs.github.com/enterprise-server@3.9/rest/checks/runs)"
        in the REST API documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" repository permission. To receive the
        `rerequested` and `requested_action` event types, the app must have at
        least write-level access for the "Checks" permission. GitHub Apps with
        write-level access for the "Checks" permission are automatically
        subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `created` and `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check run was created. Pushes to a branch in a forked repository are not
        detected and return an empty `pull_requests` array and a `null` value
        for `head_branch`.
      description: >-
        Someone requested to re-run a check run. Only the GitHub App that
        someone requests to re-run the check will receive the `rerequested`
        payload.
      operationId: check-run/rerequested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-rerequested'
            examples:
              default:
                $ref: '#/components/examples/check-run-rerequested'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-rerequested-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/check-run-rerequested-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: check_run
        supported-webhook-types:
          - repository
          - organization
          - app
  check-suite-completed:
    post:
      summary: >-
        This event occurs when there is activity relating to a check suite. For
        information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checksuite)
        or "[Check
        Suites](https://docs.github.com/enterprise-server@3.9/rest/checks/suites)"
        in the REST API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" permission. To receive the `requested` and
        `rerequested` event types, the app must have at least write-level access
        for the "Checks" permission. GitHub Apps with write-level access for the
        "Checks" permission are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check suite was created. Pushes to a branch in a forked repository are
        not detected and return an empty `pull_requests` array and a `null`
        value for `head_branch`.
      description: >-
        All check runs in a check suite have completed, and a conclusion is
        available.
      operationId: check-suite/completed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_suite
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-completed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: check_suite
        supported-webhook-types:
          - repository
          - organization
          - app
  check-suite-requested:
    post:
      summary: >-
        This event occurs when there is activity relating to a check suite. For
        information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checksuite)
        or "[Check
        Suites](https://docs.github.com/enterprise-server@3.9/rest/checks/suites)"
        in the REST API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" permission. To receive the `requested` and
        `rerequested` event types, the app must have at least write-level access
        for the "Checks" permission. GitHub Apps with write-level access for the
        "Checks" permission are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check suite was created. Pushes to a branch in a forked repository are
        not detected and return an empty `pull_requests` array and a `null`
        value for `head_branch`.
      description: >-
        Someone requested to run a check suite. By default, check suites are
        automatically created when you create a check run. For more information,
        see [the GraphQL API documentation for creating a check
        run](https://docs.github.com/enterprise-server@3.9/graphql/reference/mutations#createcheckrun)
        or "[Create a check
        run](https://docs.github.com/enterprise-server@3.9/rest/checks/runs#create-a-check-run)"
        in the REST API documentation.
      operationId: check-suite/requested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_suite
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-requested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: check_suite
        supported-webhook-types:
          - repository
          - organization
          - app
  check-suite-rerequested:
    post:
      summary: >-
        This event occurs when there is activity relating to a check suite. For
        information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#checksuite)
        or "[Check
        Suites](https://docs.github.com/enterprise-server@3.9/rest/checks/suites)"
        in the REST API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Checks" permission. To receive the `requested` and
        `rerequested` event types, the app must have at least write-level access
        for the "Checks" permission. GitHub Apps with write-level access for the
        "Checks" permission are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the
        `completed` event types in repositories.


        **Note**: The API only looks for pushes in the repository where the
        check suite was created. Pushes to a branch in a forked repository are
        not detected and return an empty `pull_requests` array and a `null`
        value for `head_branch`.
      description: >-
        Someone requested to re-run the check runs in a check suite. For more
        information, see [the GraphQL API documentation for creating a check
        suite](https://docs.github.com/enterprise-server@3.9/graphql/reference/mutations#createchecksuite)
        or "[Create a check
        suite](https://docs.github.com/enterprise-server@3.9/rest/checks/suites#create-a-check-suite)"
        in the REST API documentation.
      operationId: check-suite/rerequested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#check_suite
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-rerequested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: check_suite
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-appeared-in-branch:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: >-
        A previously created code scanning alert appeared in another branch.
        This can happen when a branch is merged into or created from a branch
        with a pre-existing code scanning alert.
      operationId: code-scanning-alert/appeared-in-branch
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-code-scanning-alert-appeared-in-branch
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-closed-by-user:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: Someone closed a code scanning alert.
      operationId: code-scanning-alert/closed-by-user
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-closed-by-user'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-created:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: A code scanning alert was created in a repository.
      operationId: code-scanning-alert/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-fixed:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: A code scanning alert was fixed in a branch by a commit.
      operationId: code-scanning-alert/fixed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-fixed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: A previously fixed code scanning alert reappeared in a branch.
      operationId: code-scanning-alert/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  code-scanning-alert-reopened-by-user:
    post:
      summary: >-
        This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code
        scanning](https://docs.github.com/enterprise-server@3.9/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Code scanning alerts" repository permission.
      description: Someone reopened a code scanning alert.
      operationId: code-scanning-alert/reopened-by-user
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-code-scanning-alert-reopened-by-user
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: code_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  commit-comment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to commit comments.
        For more information about commit comments, see "[Commenting on a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request)."
        For information about the APIs to manage commit comments, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#commitcomment)
        or "[Commit
        comments](https://docs.github.com/enterprise-server@3.9/rest/commits/comments)"
        in the REST API documentation.


        For activity relating to comments on pull request reviews, use the
        `pull_request_review_comment` event. For activity relating to issue
        comments, use the `issue_comment` event. For activity relating to
        discussion comments, use the `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: Someone commented on a commit.
      operationId: commit-comment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#commit_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-commit-comment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: commit_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  create:
    post:
      summary: >-
        This event occurs when a Git branch or tag is created.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.


        **Notes**:

        - This event will not occur when more than three tags are created at
        once.

        - Payloads are capped at 25 MB. If an event generates a larger payload,
        GitHub will not deliver a payload for that webhook event. This may
        happen, for example, if many branches or tags are pushed at once. We
        suggest monitoring your payload size to ensure delivery.
      operationId: create
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#create
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-create'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: create
        supported-webhook-types:
          - repository
          - organization
          - app
  delete:
    post:
      summary: >-
        This event occurs when a Git branch or tag is deleted. To subscribe to
        all pushes to a repository, including

        branch and tag deletions, use the [`push`](#push) webhook event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.


        **Note**: This event will not occur when more than three tags are
        deleted at once.
      operationId: delete
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#delete
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-delete'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: delete
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-created:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: >-
        A manifest file change introduced a vulnerable dependency, or a GitHub
        Security Advisory was published and an existing dependency was found to
        be vulnerable.
      operationId: dependabot-alert/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-dismissed:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: A Dependabot alert was manually closed.
      operationId: dependabot-alert/dismissed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-dismissed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-fixed:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: A manifest file change removed a vulnerability.
      operationId: dependabot-alert/fixed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-fixed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-reintroduced:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: >-
        A manifest file change introduced a vulnerable dependency that had
        previously been fixed.
      operationId: dependabot-alert/reintroduced
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-reintroduced'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  dependabot-alert-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see
        "[Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/rest/dependabot/alerts)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Dependabot alerts" repository permission.


        **Note**: Webhook events for Dependabot alerts are currently in beta and
        subject to change.
      description: A Dependabot alert was manually reopened.
      operationId: dependabot-alert/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: dependabot_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  deploy-key-created:
    post:
      summary: >-
        This event occurs when there is activity relating to deploy keys. For
        more information, see "[Managing deploy
        keys](https://docs.github.com/enterprise-server@3.9/developers/overview/managing-deploy-keys)."
        For information about the APIs to manage deploy keys, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deploykey)
        or "[Deploy
        keys](https://docs.github.com/enterprise-server@3.9/rest/deploy-keys)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deploy key was created.
      operationId: deploy-key/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deploy_key
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deploy-key-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deploy_key
        supported-webhook-types:
          - repository
          - organization
          - app
  deploy-key-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to deploy keys. For
        more information, see "[Managing deploy
        keys](https://docs.github.com/enterprise-server@3.9/developers/overview/managing-deploy-keys)."
        For information about the APIs to manage deploy keys, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deploykey)
        or "[Deploy
        keys](https://docs.github.com/enterprise-server@3.9/rest/deploy-keys)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deploy key was deleted.
      operationId: deploy-key/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deploy_key
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deploy-key-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deploy_key
        supported-webhook-types:
          - repository
          - organization
          - app
  deployment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to deployments. For
        more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment status, use the `deployment_status`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deployment was created.
      operationId: deployment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment
        supported-webhook-types:
          - repository
          - organization
          - app
  deployment-review-approved:
    post:
      summary: >-
        This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment creation or deployment status, use
        the `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deployment review was approved.
      operationId: deployment-review/approved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-approved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment_review
        supported-webhook-types:
          - app
  deployment-review-rejected:
    post:
      summary: >-
        This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment creation or deployment status, use
        the `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deployment review was rejected.
      operationId: deployment-review/rejected
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-rejected'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment_review
        supported-webhook-types:
          - app
  deployment-review-requested:
    post:
      summary: >-
        This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment creation or deployment status, use
        the `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A deployment review was requested.
      operationId: deployment-review/requested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-requested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment_review
        supported-webhook-types:
          - app
  deployment-status-created:
    post:
      summary: >-
        This event occurs when there is activity relating to deployment
        statuses. For more information, see "[About
        deployments](https://docs.github.com/enterprise-server@3.9/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#deployment)
        or
        "[Deployments](https://docs.github.com/enterprise-server@3.9/rest/deployments/deployments)"
        in the REST API documentation.


        For activity relating to deployment creation, use the `deployment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Deployments" repository permission.
      description: A new deployment status was created.
      operationId: deployment-status/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#deployment_status
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-status-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: deployment_status
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-answered:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on the discussion was marked as the answer.
      operationId: discussion/answered
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-answered'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-category-changed:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: The category of a discussion was changed.
      operationId: discussion/category-changed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-category-changed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was closed.
      operationId: discussion/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: discussions
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.9.0
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-comment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on a
        discussion. For more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a
        discussion, use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on a discussion was created.
      operationId: discussion-comment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-comment-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on a
        discussion. For more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a
        discussion, use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on a discussion was deleted.
      operationId: discussion-comment/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-comment-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on a
        discussion. For more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a
        discussion, use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on a discussion was edited.
      operationId: discussion-comment/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was created.
      operationId: discussion/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was deleted.
      operationId: discussion/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: >-
        The title or body on a discussion was edited, or the category of the
        discussion was changed.
      operationId: discussion/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-labeled:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A label was added to a discussion.
      operationId: discussion/labeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-labeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-locked:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was locked.
      operationId: discussion/locked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-locked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-pinned:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was pinned.
      operationId: discussion/pinned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-pinned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was reopened.
      operationId: discussion/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: discussions
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.9.0
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-transferred:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was transferred to another repository.
      operationId: discussion/transferred
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-transferred'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-unanswered:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A comment on the discussion was unmarked as the answer.
      operationId: discussion/unanswered
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unanswered'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-unlabeled:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A label was removed from a discussion.
      operationId: discussion/unlabeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unlabeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-unlocked:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was unlocked.
      operationId: discussion/unlocked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unlocked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  discussion-unpinned:
    post:
      summary: >-
        This event occurs when there is activity relating to a discussion. For
        more information about discussions, see "[GitHub
        Discussions](https://docs.github.com/enterprise-server@3.9/discussions)."
        For information about the API to manage discussions, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the
        `discussion_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Discussions" repository permission.


        **Note**: Webhook events for GitHub Discussions are currently in beta
        and subject to change.
      description: A discussion was unpinned.
      operationId: discussion/unpinned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#discussion
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unpinned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
          - repository
          - organization
          - app
  enterprise-anonymous-access-disabled:
    post:
      summary: >-
        This event occurs when there is activity relating to anonymous Git read
        access in an enterprise. For more information, see "[Enforcing
        repository management policies in your
        enterprise](https://docs.github.com/enterprise-server@3.9/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#configuring-anonymous-git-read-access)."
      description: Anonymous Git read access was disabled.
      operationId: enterprise/anonymous-access-disabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#enterprise
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-enterprise-anonymous-access-disabled
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: enterprise
        supported-webhook-types:
          - business
  enterprise-anonymous-access-enabled:
    post:
      summary: >-
        This event occurs when there is activity relating to anonymous Git read
        access in an enterprise. For more information, see "[Enforcing
        repository management policies in your
        enterprise](https://docs.github.com/enterprise-server@3.9/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#configuring-anonymous-git-read-access)."
      description: Anonymous Git read access was enabled.
      operationId: enterprise/anonymous-access-enabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#enterprise
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-enterprise-anonymous-access-enabled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: enterprise
        supported-webhook-types:
          - business
  fork:
    post:
      summary: >-
        This event occurs when someone forks a repository. For more information,
        see "[Fork a
        repo](https://docs.github.com/enterprise-server@3.9/get-started/quickstart/fork-a-repo)."
        For information about the API to manage forks, see
        "[Forks](https://docs.github.com/enterprise-server@3.9/rest/repos/forks)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      operationId: fork
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#fork
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-fork'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: fork
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  github-app-authorization-revoked:
    post:
      summary: >-
        This event occurs when a user revokes their authorization of a GitHub
        App. For more information, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the API to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.


        A GitHub App receives this webhook by default and cannot unsubscribe
        from this event.


        Anyone can revoke their authorization of a GitHub App from their [GitHub
        account settings page](https://github.com/settings/apps/authorizations).
        Revoking the authorization of a GitHub App does not uninstall the GitHub
        App. You should program your GitHub App so that when it receives this
        webhook, it stops calling the API on behalf of the person who revoked
        the token. If your GitHub App continues to use a revoked access token,
        it will receive the `401 Bad Credentials` error. For details about
        requests with a user access token, which require GitHub App
        authorization, see "[Authenticating with a GitHub App on behalf of a
        user](https://docs.github.com/enterprise-server@3.9/apps/creating-github-apps/authenticating-with-a-github-app/authenticating-with-a-github-app-on-behalf-of-a-user)."
      description: Someone revoked their authorization of a GitHub App.
      operationId: github-app-authorization/revoked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#github_app_authorization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-github-app-authorization-revoked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: github_app_authorization
        supported-webhook-types:
          - app
  gollum:
    post:
      summary: >-
        This event occurs when someone creates or updates a wiki page. For more
        information, see "[About
        wikis](https://docs.github.com/enterprise-server@3.9/communities/documenting-your-project-with-wikis/about-wikis)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      operationId: gollum
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#gollum
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-gollum'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: gollum
        supported-webhook-types:
          - repository
          - organization
          - app
  installation-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: Someone installed a GitHub App on a user or organization account.
      operationId: installation/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  installation-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        Someone uninstalled a GitHub App from their user or organization
        account.
      operationId: installation/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  installation-new-permissions-accepted:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: Someone granted new permissions to a GitHub App.
      operationId: installation/new-permissions-accepted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-installation-new-permissions-accepted
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  installation-repositories-added:
    post:
      summary: >-
        This event occurs when there is activity relating to which repositories
        a GitHub App installation can access. All GitHub Apps receive this event
        by default. You cannot manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        A GitHub App installation was granted access to one or more
        repositories.
      operationId: installation-repositories/added
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation_repositories
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-repositories-added'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation_repositories
        supported-webhook-types:
          - app
  installation-repositories-removed:
    post:
      summary: >-
        This event occurs when there is activity relating to which repositories
        a GitHub App installation can access. All GitHub Apps receive this event
        by default. You cannot manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        Access to one or more repositories was revoked for a GitHub App
        installation.
      operationId: installation-repositories/removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation_repositories
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-repositories-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation_repositories
        supported-webhook-types:
          - app
  installation-suspend:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        Someone blocked access by a GitHub App to their user or organization
        account.
      operationId: installation/suspend
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-suspend'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  installation-target-renamed:
    post:
      summary: >-
        This event occurs when there is activity relating to the user or
        organization account that a GitHub App is installed on. For more
        information, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        Somebody renamed the user or organization account that a GitHub App is
        installed on.
      operationId: installation-target/renamed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation_target
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-target-renamed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation_target
        supported-webhook-types:
          - app
  installation-unsuspend:
    post:
      summary: >-
        This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot
        manually subscribe to this event.


        For more information about GitHub Apps, see "[About
        apps](https://docs.github.com/enterprise-server@3.9/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#app)
        or "[Apps](https://docs.github.com/enterprise-server@3.9/rest/apps)" in
        the REST API documentation.
      description: >-
        A GitHub App that was blocked from accessing a user or organization
        account was given access the account again.
      operationId: installation/unsuspend
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#installation
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-unsuspend'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
          - app
  issue-comment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on an
        issue or pull request. For more information about issues and pull
        requests, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the
        GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issuecomment)
        or "[Issue
        comments](https://docs.github.com/enterprise-server@3.9/rest/issues/comments)"
        in the REST API documentation.


        For activity relating to an issue as opposed to comments on an issue,
        use the `issue` event. For activity related to pull request reviews or
        pull request review comments, use the `pull_request_review` or
        `pull_request_review_comment` events. For more information about the
        different types of pull request comments, see "[Working with
        comments](https://docs.github.com/enterprise-server@3.9/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A comment on an issue or pull request was created.
      operationId: issue-comment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issue_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issue_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  issue-comment-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on an
        issue or pull request. For more information about issues and pull
        requests, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the
        GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issuecomment)
        or "[Issue
        comments](https://docs.github.com/enterprise-server@3.9/rest/issues/comments)"
        in the REST API documentation.


        For activity relating to an issue as opposed to comments on an issue,
        use the `issue` event. For activity related to pull request reviews or
        pull request review comments, use the `pull_request_review` or
        `pull_request_review_comment` events. For more information about the
        different types of pull request comments, see "[Working with
        comments](https://docs.github.com/enterprise-server@3.9/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A comment on an issue or pull request was deleted.
      operationId: issue-comment/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issue_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issue_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  issue-comment-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment on an
        issue or pull request. For more information about issues and pull
        requests, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the
        GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issuecomment)
        or "[Issue
        comments](https://docs.github.com/enterprise-server@3.9/rest/issues/comments)"
        in the REST API documentation.


        For activity relating to an issue as opposed to comments on an issue,
        use the `issue` event. For activity related to pull request reviews or
        pull request review comments, use the `pull_request_review` or
        `pull_request_review_comment` events. For more information about the
        different types of pull request comments, see "[Working with
        comments](https://docs.github.com/enterprise-server@3.9/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A comment on an issue or pull request was edited.
      operationId: issue-comment/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issue_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issue_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-assigned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was assigned to a user.
      operationId: issues/assigned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-assigned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was closed.
      operationId: issues/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was deleted.
      operationId: issues/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-demilestoned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was removed from a milestone.
      operationId: issues/demilestoned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-demilestoned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: The title or body on an issue was edited.
      operationId: issues/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-labeled:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A label was added to an issue.
      operationId: issues/labeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-labeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-locked:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        Conversation on an issue was locked. For more information, see "[Locking
        conversations](https://docs.github.com/enterprise-server@3.9/communities/moderating-comments-and-conversations/locking-conversations)."
      operationId: issues/locked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-locked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-milestoned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: An issue was added to a milestone.
      operationId: issues/milestoned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-milestoned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-opened:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        An issue was created. When a closed issue is reopened, the action will
        be `reopened` instead.
      operationId: issues/opened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-opened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-pinned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        An issue was pinned to a repository. For more information, see "[Pinning
        an issue to your
        repository](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository)."
      operationId: issues/pinned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-pinned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A closed issue was reopened.
      operationId: issues/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-transferred:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        An issue was transferred to another repository. For more information,
        see "[Transferring an issue to another
        repository](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/transferring-an-issue-to-another-repository)."
      operationId: issues/transferred
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-transferred'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-unassigned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A user was unassigned from an issue.
      operationId: issues/unassigned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unassigned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-unlabeled:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: A label was removed from an issue.
      operationId: issues/unlabeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unlabeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-unlocked:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        Conversation on an issue was locked. For more information, see "[Locking
        conversations](https://docs.github.com/enterprise-server@3.9/communities/moderating-comments-and-conversations/locking-conversations)."
      operationId: issues/unlocked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unlocked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  issues-unpinned:
    post:
      summary: >-
        This event occurs when there is activity relating to an issue. For more
        information about issues, see "[About
        issues](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/enterprise-server@3.9/rest/issues)"
        in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" repository permission.
      description: >-
        An issue was unpinned from a repository. For more information, see
        "[Pinning an issue to your
        repository](https://docs.github.com/enterprise-server@3.9/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository)."
      operationId: issues/unpinned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#issues
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unpinned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
          - repository
          - organization
          - app
  label-created:
    post:
      summary: >-
        This event occurs when there is activity relating to labels. For more
        information, see "[Managing
        labels](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#label)
        or
        "[Labels](https://docs.github.com/enterprise-server@3.9/rest/issues/labels)"
        in the REST API documentation.


        If you want to receive an event when a label is added to or removed from
        an issue, pull request, or discussion, use the `labeled` or `unlabeled`
        action type for the `issues`, `pull_request`, or `discussion` events
        instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A label was created.
      operationId: label/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#label
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: label
        supported-webhook-types:
          - repository
          - organization
          - app
  label-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to labels. For more
        information, see "[Managing
        labels](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#label)
        or
        "[Labels](https://docs.github.com/enterprise-server@3.9/rest/issues/labels)"
        in the REST API documentation.


        If you want to receive an event when a label is added to or removed from
        an issue, pull request, or discussion, use the `labeled` or `unlabeled`
        action type for the `issues`, `pull_request`, or `discussion` events
        instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A label was deleted.
      operationId: label/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#label
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: label
        supported-webhook-types:
          - repository
          - organization
          - app
  label-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to labels. For more
        information, see "[Managing
        labels](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#label)
        or
        "[Labels](https://docs.github.com/enterprise-server@3.9/rest/issues/labels)"
        in the REST API documentation.


        If you want to receive an event when a label is added to or removed from
        an issue, pull request, or discussion, use the `labeled` or `unlabeled`
        action type for the `issues`, `pull_request`, or `discussion` events
        instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A label's name, description, or color was changed.
      operationId: label/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#label
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: label
        supported-webhook-types:
          - repository
          - organization
          - app
  member-added:
    post:
      summary: >-
        This event occurs when there is activity relating to collaborators in a
        repository. For more information, see "[Adding outside collaborators to
        repositories in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repositorycollaboratorconnection)
        or
        "[Collaborators](https://docs.github.com/enterprise-server@3.9/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A GitHub user accepted an invitation to a repository.
      operationId: member/added
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#member
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-added'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: member
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  member-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to collaborators in a
        repository. For more information, see "[Adding outside collaborators to
        repositories in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repositorycollaboratorconnection)
        or
        "[Collaborators](https://docs.github.com/enterprise-server@3.9/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: Permissions were changed for a collaborator on a repository.
      operationId: member/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#member
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: member
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  member-removed:
    post:
      summary: >-
        This event occurs when there is activity relating to collaborators in a
        repository. For more information, see "[Adding outside collaborators to
        repositories in your
        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repositorycollaboratorconnection)
        or
        "[Collaborators](https://docs.github.com/enterprise-server@3.9/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A collaborator was removed from a repository.
      operationId: member/removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#member
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: member
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  membership-added:
    post:
      summary: >-
        This event occurs when there is activity relating to team membership.
        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."
        For more information about the APIs to manage team memberships, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#team)
        or "[Team
        members](https://docs.github.com/enterprise-server@3.9/rest/teams/members)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: An organization member was added to a team.
      operationId: membership/added
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#membership
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-membership-added'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: membership
        supported-webhook-types:
          - organization
          - business
          - app
  membership-removed:
    post:
      summary: >-
        This event occurs when there is activity relating to team membership.
        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."
        For more information about the APIs to manage team memberships, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#team)
        or "[Team
        members](https://docs.github.com/enterprise-server@3.9/rest/teams/members)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: An organization member was removed from a team.
      operationId: membership/removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#membership
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-membership-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: membership
        supported-webhook-types:
          - organization
          - business
          - app
  meta-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a webhook itself.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Meta" app permission.
      description: The webhook was deleted.
      operationId: meta/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#meta
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-meta-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: meta
        supported-webhook-types:
          - marketplace
          - business
          - repository
          - organization
          - app
  milestone-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was closed.
      operationId: milestone/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  milestone-created:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was created.
      operationId: milestone/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  milestone-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was deleted.
      operationId: milestone/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  milestone-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was edited.
      operationId: milestone/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  milestone-opened:
    post:
      summary: >-
        This event occurs when there is activity relating to milestones. For
        more information, see "[About
        milestones](https://docs.github.com/enterprise-server@3.9/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#milestone)
        or
        "[Milestones](https://docs.github.com/enterprise-server@3.9/rest/issues/milestones)"
        in the REST API documentation.


        If you want to receive an event when an issue or pull request is added
        to or removed from a milestone, use the `milestoned` or `demilestoned`
        action type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Issues" or "Pull requests" repository permissions.
      description: A milestone was opened.
      operationId: milestone/opened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#milestone
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-opened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: milestone
        supported-webhook-types:
          - repository
          - organization
          - app
  organization-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: An organization was deleted.
      operationId: organization/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  organization-member-added:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A member accepted an invitation to join an organization.
      operationId: organization/member-added
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-added'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  organization-member-invited:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A member was invited to join the organization.
      operationId: organization/member-invited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-invited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  organization-member-removed:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A member was removed from the organization.
      operationId: organization/member-removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  organization-renamed:
    post:
      summary: >-
        This event occurs when there is activity relating to an organization and
        its members. For more information, see "[About
        organizations](https://docs.github.com/enterprise-server@3.9/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#organization)
        or
        "[Organizations](https://docs.github.com/enterprise-server@3.9/rest/orgs)"
        in the REST API documentation.


        If you want to receive an event when a non-member is blocked or
        unblocked from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: The name of an organization was changed.
      operationId: organization/renamed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#organization
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-renamed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: organization
        supported-webhook-types:
          - organization
          - business
          - app
  package-published:
    post:
      summary: >-
        This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#package)
        or
        "[Packages](https://docs.github.com/enterprise-server@3.9/rest/packages)"
        in the REST API documentation.


        To install this event on a GitHub App, the app must have at least
        read-level access for the "Packages" repository permission.
      description: A package was published to a registry.
      operationId: package/published
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#package
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-package-published'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: package
        supported-webhook-types:
          - repository
          - organization
          - app
  package-updated:
    post:
      summary: >-
        This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#package)
        or
        "[Packages](https://docs.github.com/enterprise-server@3.9/rest/packages)"
        in the REST API documentation.


        To install this event on a GitHub App, the app must have at least
        read-level access for the "Packages" repository permission.
      description: A previously published package was updated.
      operationId: package/updated
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#package
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-package-updated'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: package
        supported-webhook-types:
          - repository
          - organization
          - app
  page-build:
    post:
      summary: >-
        This event occurs when there is an attempted build of a GitHub Pages
        site. This event occurs regardless of whether the build is successful.
        For more information, see "[Configuring a publishing source for your
        GitHub Pages
        site](https://docs.github.com/enterprise-server@3.9/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site)."
        For information about the API to manage GitHub Pages, see
        "[Pages](https://docs.github.com/enterprise-server@3.9/rest/pages)" in
        the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pages" repository permission.
      operationId: page-build
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#page_build
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-page-build'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: page_build
        supported-webhook-types:
          - repository
          - organization
          - app
  ping:
    post:
      summary: >-
        This event occurs when you create a new webhook. The ping event is a
        confirmation from GitHub that you configured the webhook correctly.
      operationId: ping
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#ping
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-ping'
            examples:
              default:
                $ref: '#/components/examples/ping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-ping-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/ping-form-encoded'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: ping
        supported-webhook-types:
          - repository
          - organization
          - app
          - business
          - marketplace
  project-card-converted:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A note in a project (classic) was converted to an issue.
      operationId: project-card/converted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-converted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-card-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A card was added to a project (classic).
      operationId: project-card/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-card-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A card on a project (classic) was deleted.
      operationId: project-card/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-card-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A note on a project (classic) was edited.
      operationId: project-card/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-card-moved:
    post:
      summary: >-
        This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a column on a project
        (classic), use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: >-
        A card on a project (classic) was moved to another column or to another
        position in its column.
      operationId: project-card/moved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_card
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-moved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_card
        supported-webhook-types:
          - repository
          - organization
          - app
  project-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A project (classic) was closed.
      operationId: project/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  project-column-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a card on a project
        (classic), use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A column was added to a project (classic).
      operationId: project-column/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_column
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_column
        supported-webhook-types:
          - repository
          - organization
          - app
  project-column-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a card on a project
        (classic), use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A column was deleted from a project (classic).
      operationId: project-column/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_column
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_column
        supported-webhook-types:
          - repository
          - organization
          - app
  project-column-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a card on a project
        (classic), use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: The name of a column on a project (classic) was changed.
      operationId: project-column/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_column
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_column
        supported-webhook-types:
          - repository
          - organization
          - app
  project-column-moved:
    post:
      summary: >-
        This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a project (classic) or a card on a project
        (classic), use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A column was moved to a new position on a project (classic).
      operationId: project-column/moved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project_column
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-moved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project_column
        supported-webhook-types:
          - repository
          - organization
          - app
  project-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A project (classic) was created.
      operationId: project/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  project-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A project (classic) was deleted.
      operationId: project/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  project-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: The name or description of a project (classic) was changed.
      operationId: project/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  project-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to a project
        (classic). For more information, see "[About projects
        (classic)](https://docs.github.com/enterprise-server@3.9/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#project)
        or "[Projects
        (classic)](https://docs.github.com/enterprise-server@3.9/rest/projects)"
        in the REST API documentation.


        For activity relating to a card or column on a project (classic), use
        the `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to
        the new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" repository or organization permission.
      description: A project (classic) was closed.
      operationId: project/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#project
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: project
        supported-webhook-types:
          - repository
          - organization
          - app
  projects-v2-closed:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A project in the organization was closed.
      operationId: projects-v2/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  projects-v2-created:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A project in the organization was created.
      operationId: projects-v2/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  projects-v2-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A project in the organization was deleted.
      operationId: projects-v2/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  projects-v2-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        The title, description, or README of a project in the organization was
        changed.
      operationId: projects-v2/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  projects-v2-item-archived:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        An item on an organization project was archived. For more information,
        see "[Archiving items from your
        project](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project)."
      operationId: projects-v2-item/archived
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-archived'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-converted:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A draft issue in an organization project was converted to an issue.
      operationId: projects-v2-item/converted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-converted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-created:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: An item was added to a project in the organization.
      operationId: projects-v2-item/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: An item was deleted from a project in the organization.
      operationId: projects-v2-item/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        The values or state of an item in an organization project were changed.
        For example, the value of a field was updated, the body of a draft issue
        was changed, or a draft issue was converted to an issue.
      operationId: projects-v2-item/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-reordered:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        The position of an item in an organization project was changed. For
        example, an item was moved above or below another item in the table or
        board layout.
      operationId: projects-v2-item/reordered
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-reordered'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-item-restored:
    post:
      summary: >-
        This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project),
        use the `projects_v2` event. For activity relating to Projects
        (classic), use the `project`, `project_card`, and `project_column`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: >-
        An archived item on an organization project was restored from the
        archive. For more information, see "[Archiving items from your
        project](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project)."
      operationId: projects-v2-item/restored
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2-item
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-restored'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
          - organization
  projects-v2-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to an
        organization-level project. For more information, see "[About
        Projects](https://docs.github.com/enterprise-server@3.9/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item`
        event. For activity relating to Projects (classic), use the `project`,
        `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Projects" organization permission.


        **Note**: Webhook events for projects are currently in beta and subject
        to change. To share feedback about projects webhooks with GitHub, see
        the [Projects webhook feedback
        discussion](https://github.com/orgs/community/discussions/17405).
      description: A project in the organization was reopened.
      operationId: projects-v2/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: project-v2
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: projects_v2
        supported-webhook-types:
          - organization
  public:
    post:
      summary: >-
        This event occurs when repository visibility changes from private to
        public. For more information, see "[Setting repository
        visibility](https://docs.github.com/enterprise-server@3.9/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/setting-repository-visibility)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      operationId: public
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#public
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-public'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: public
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-assigned:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A pull request was assigned to a user.
      operationId: pull-request/assigned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-assigned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-auto-merge-disabled:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Auto merge was disabled for a pull request. For more information, see
        "[Automatically merging a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)."
      operationId: pull-request/auto-merge-disabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-auto-merge-disabled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-auto-merge-enabled:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Auto merge was enabled for a pull request. For more information, see
        "[Automatically merging a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)."
      operationId: pull-request/auto-merge-enabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-auto-merge-enabled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-closed:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A pull request was closed. If `merged` is false in the webhook payload,
        the pull request was closed with unmerged commits. If `merged` is true
        in the webhook payload, the pull request was merged.
      operationId: pull-request/closed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-closed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-converted-to-draft:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A pull request was converted to a draft. For more information, see
        "[Changing the stage of a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request)."
      operationId: pull-request/converted-to-draft
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-converted-to-draft'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-demilestoned:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A pull request was removed from a milestone.
      operationId: pull-request/demilestoned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-demilestoned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-edited:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        The title or body of a pull request was edited, or the base branch of a
        pull request was changed.
      operationId: pull-request/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-labeled:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A label was added to a pull request.
      operationId: pull-request/labeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-labeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-locked:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Conversation on a pull request was locked. For more information, see
        "[Locking
        conversations](https://docs.github.com/enterprise-server@3.9/communities/moderating-comments-and-conversations/locking-conversations)."
      operationId: pull-request/locked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-locked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-milestoned:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A pull request was added to a milestone.
      operationId: pull-request/milestoned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-milestoned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-opened:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A pull request was created
      operationId: pull-request/opened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-opened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-ready-for-review:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A draft pull request was marked as ready for review. For more
        information, see "[Changing the stage of a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request)."
      operationId: pull-request/ready-for-review
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-ready-for-review'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-reopened:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A previously closed pull request was reopened.
      operationId: pull-request/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-comment-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull
        request's diff. For more information, see "[Commenting on a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or
        pull request review threads, use the `pull_request_review`,
        `issue_comment`, or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A comment on a pull request diff was created.
      operationId: pull-request-review-comment/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-comment-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull
        request's diff. For more information, see "[Commenting on a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or
        pull request review threads, use the `pull_request_review`,
        `issue_comment`, or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A comment on a pull request diff was deleted.
      operationId: pull-request-review-comment/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-comment-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull
        request's diff. For more information, see "[Commenting on a pull
        request](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments,
        see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or
        pull request review threads, use the `pull_request_review`,
        `issue_comment`, or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: The content of a comment on a pull request diff was changed.
      operationId: pull-request-review-comment/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_comment
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_comment
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-dismissed:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments
        in addition to a body comment and a state. For more information, see
        "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreview)
        or "[Pull request
        reviews](https://docs.github.com/enterprise-server@3.9/rest/pulls/reviews)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request review threads, use the
        `pull_request_review_comment`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A review on a pull request was dismissed.
      operationId: pull-request-review/dismissed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-dismissed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments
        in addition to a body comment and a state. For more information, see
        "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreview)
        or "[Pull request
        reviews](https://docs.github.com/enterprise-server@3.9/rest/pulls/reviews)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request review threads, use the
        `pull_request_review_comment`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: The body comment on a pull request review was edited.
      operationId: pull-request-review/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-request-removed:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A request for review by a person or team was removed from a pull
        request.
      operationId: pull-request/review-request-removed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-request-removed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-requested:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Review by a person or team was requested for a pull request. For more
        information, see "[Requesting a pull request
        review](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/requesting-a-pull-request-review)."
      operationId: pull-request/review-requested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-requested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-submitted:
    post:
      summary: >-
        This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments
        in addition to a body comment and a state. For more information, see
        "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreview)
        or "[Pull request
        reviews](https://docs.github.com/enterprise-server@3.9/rest/pulls/reviews)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request review threads, use the
        `pull_request_review_comment`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A review on a pull request was submitted.
      operationId: pull-request-review/submitted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-submitted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-thread-resolved:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment thread on
        a pull request. For more information, see "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewthread)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request reviews, use the
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A comment thread on a pull request was marked as resolved.
      operationId: pull-request-review-thread/resolved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_thread
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-thread-resolved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_thread
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-review-thread-unresolved:
    post:
      summary: >-
        This event occurs when there is activity relating to a comment thread on
        a pull request. For more information, see "[About pull request
        reviews](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequestreviewthread)
        or "[Pull request review
        comments](https://docs.github.com/enterprise-server@3.9/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request
        comments, or pull request reviews, use the
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A previously resolved comment thread on a pull request was marked as
        unresolved.
      operationId: pull-request-review-thread/unresolved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request_review_thread
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-pull-request-review-thread-unresolved
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request_review_thread
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-synchronize:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        A pull request's head branch was updated. For example, the head branch
        was updated from the base branch or new commits were pushed to the head
        branch.
      operationId: pull-request/synchronize
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-synchronize'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-unassigned:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A user was unassigned from a pull request.
      operationId: pull-request/unassigned
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unassigned'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-unlabeled:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: A label was removed from a pull request.
      operationId: pull-request/unlabeled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unlabeled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  pull-request-unlocked:
    post:
      summary: >-
        This event occurs when there is activity on a pull request. For more
        information, see "[About pull
        requests](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL
        API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#pullrequest)
        or
        "[Pulls](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request review
        comments, pull request comments, or pull request review threads, use the
        `pull_request_review`, `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Pull requests" repository permission.
      description: >-
        Conversation on a pull request was unlocked. For more information, see
        "[Locking
        conversations](https://docs.github.com/enterprise-server@3.9/communities/moderating-comments-and-conversations/locking-conversations)."
      operationId: pull-request/unlocked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#pull_request
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unlocked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: pull_request
        supported-webhook-types:
          - repository
          - organization
          - app
  push:
    post:
      summary: >-
        This event occurs when there is a push to a repository branch. This
        includes when a commit is pushed, when a commit tag is pushed,

        when a branch is deleted, when a tag is deleted, or when a repository is
        created from a template. To subscribe to only branch

        and tag deletions, use the [`delete`](#delete) webhook event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.


        **Note**: An event will not be created when more than three tags are
        pushed at once.
      operationId: push
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#push
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-push'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: push
        supported-webhook-types:
          - repository
          - organization
          - app
  registry-package-published:
    post:
      summary: >-
        This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#package)
        or
        "[Packages](https://docs.github.com/enterprise-server@3.9/rest/packages)"
        in the REST API documentation.


        To install this event on a GitHub App, the app must have at least
        read-level access for the "Packages" repository permission.


        **Note**: GitHub recommends that you use the newer `package` event
        instead.
      description: A package was published to a registry.
      operationId: registry-package/published
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#registry_package
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-registry-package-published'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: registry_package
        supported-webhook-types:
          - repository
          - organization
          - app
  registry-package-updated:
    post:
      summary: >-
        This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the
        GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#package)
        or
        "[Packages](https://docs.github.com/enterprise-server@3.9/rest/packages)"
        in the REST API documentation.


        To install this event on a GitHub App, the app must have at least
        read-level access for the "Packages" repository permission.


        **Note**: GitHub recommends that you use the newer `package` event
        instead.
      description: A package that was previously published to a registry was updated.
      operationId: registry-package/updated
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#registry_package
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-registry-package-updated'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: registry_package
        supported-webhook-types:
          - repository
          - organization
          - app
  release-created:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: >-
        A draft was saved, or a release or pre-release was published without
        previously being saved as a draft.
      operationId: release/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: A release, pre-release, or draft release was deleted.
      operationId: release/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: >-
        The details of a release, pre-release, or draft release were edited. For
        more information, see "[Managing releases in a
        repository](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/managing-releases-in-a-repository#editing-a-release)."
      operationId: release/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-prereleased:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: >-
        A release was created and identified as a pre-release. A pre-release is
        a release that is not ready for production and may be unstable.
      operationId: release/prereleased
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-prereleased'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-published:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: A release, pre-release, or draft of a release was published.
      operationId: release/published
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-published'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-released:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: A release was published, or a pre-release was changed to a release.
      operationId: release/released
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-released'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  release-unpublished:
    post:
      summary: >-
        This event occurs when there is activity relating to releases. For more
        information, see "[About
        releases](https://docs.github.com/enterprise-server@3.9/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#release)
        or
        "[Releases](https://docs.github.com/enterprise-server@3.9/rest/releases)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: A release or pre-release was unpublished.
      operationId: release/unpublished
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#release
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-unpublished'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: release
        supported-webhook-types:
          - repository
          - organization
          - app
  repository-anonymous-access-disabled:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        Someone disabled anonymous Git read access to the repository. For more
        information, see "[Enabling anonymous Git read access for a
        repository](/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/enabling-anonymous-git-read-access-for-a-repository)."
      operationId: repository/anonymous-access-disabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-anonymous-access-disabled
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - app
          - business
          - organization
          - repository
  repository-anonymous-access-enabled:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        Someone enabled anonymous Git read access to the repository. For more
        information, see "[Enabling anonymous Git read access for a
        repository](/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/enabling-anonymous-git-read-access-for-a-repository)."
      operationId: repository/anonymous-access-enabled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-anonymous-access-enabled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - app
          - business
          - organization
          - repository
  repository-archived:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A repository was archived.
      operationId: repository/archived
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-archived'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-created:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A repository was created.
      operationId: repository/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        A repository was deleted. GitHub Apps and repository webhooks will not
        receive this event.
      operationId: repository/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-dispatch-sample.collected:
    post:
      summary: >-
        This event occurs when a GitHub App sends a `POST` request to
        `/repos/{owner}/{repo}/dispatches`. For more information, see [the REST
        API documentation for creating a repository dispatch
        event](https://docs.github.com/enterprise-server@3.9/rest/repos/repos#create-a-repository-dispatch-event).


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      description: >-
        The `event_type` that was specified in the `POST
        /repos/{owner}/{repo}/dispatches` request body.
      operationId: repository-dispatch/sample.collected
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_dispatch
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-dispatch-sample'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_dispatch
        supported-webhook-types:
          - app
  repository-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        The topics, default branch, description, or homepage of a repository was
        changed.
      operationId: repository/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-privatized:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: The visibility of a repository was changed to `private`.
      operationId: repository/privatized
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-privatized'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-publicized:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: The visibility of a repository was changed to `public`.
      operationId: repository/publicized
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-publicized'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-renamed:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: The name of a repository was changed.
      operationId: repository/renamed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-renamed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-transferred:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: >-
        Ownership of the repository was transferred to a user or organization
        account. This event is only sent to the account where the ownership is
        transferred. To receive the `repository.transferred` event, the new
        owner account must have the GitHub App installed, and the App must be
        subscribed to "Repository" events.
      operationId: repository/transferred
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-transferred'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-unarchived:
    post:
      summary: >-
        This event occurs when there is activity relating to repositories. For
        more information, see "[About
        repositories](https://docs.github.com/enterprise-server@3.9/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#repository)
        or
        "[Repositories](https://docs.github.com/enterprise-server@3.9/rest/repos)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: A previously archived repository was unarchived.
      operationId: repository/unarchived
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-unarchived'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  repository-vulnerability-alert-create:
    post:
      summary: >-
        This event occurs when there is activity relating to a security
        vulnerability alert in a repository.


        **Note**: This event is deprecated. Use the `dependabot_alert` event
        instead.
      description: A repository vulnerability alert was created.
      operationId: repository-vulnerability-alert/create
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-vulnerability-alert-create
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
          - repository
          - organization
  repository-vulnerability-alert-dismiss:
    post:
      summary: >-
        This event occurs when there is activity relating to a security
        vulnerability alert in a repository.


        **Note**: This event is deprecated. Use the `dependabot_alert` event
        instead.
      description: A repository vulnerability alert was dismissed.
      operationId: repository-vulnerability-alert/dismiss
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-vulnerability-alert-dismiss
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
          - repository
          - organization
  repository-vulnerability-alert-reopen:
    post:
      summary: >-
        This event occurs when there is activity relating to a security
        vulnerability alert in a repository.


        **Note**: This event is deprecated. Use the `dependabot_alert` event
        instead.
      description: >-
        A previously dismissed or resolved repository vulnerability alert was
        reopened.
      operationId: repository-vulnerability-alert/reopen
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-vulnerability-alert-reopen
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
          - repository
          - organization
  repository-vulnerability-alert-resolve:
    post:
      summary: >-
        This event occurs when there is activity relating to a security
        vulnerability alert in a repository.


        **Note**: This event is deprecated. Use the `dependabot_alert` event
        instead.
      description: A repository vulnerability alert was marked as resolved.
      operationId: repository-vulnerability-alert/resolve
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-repository-vulnerability-alert-resolve
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_vulnerability_alert
        supported-webhook-types:
          - repository
          - organization
  secret-scanning-alert-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alert locations, use the
        `secret_scanning_alert_location` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: A secret scanning alert was created.
      operationId: secret-scanning-alert/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: secret_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  secret-scanning-alert-location-created:
    post:
      summary: >-
        This event occurs when there is activity relating to the locations of a
        secret in a secret scanning alert.


        For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alerts, use the
        `secret_scanning_alert` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: >-
        A new instance of a previously detected secret was detected in a
        repository, and the location of the secret was added to the existing
        alert.
      operationId: secret-scanning-alert-location/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert_location
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/webhook-secret-scanning-alert-location-created
            examples:
              default:
                $ref: '#/components/examples/secret-scanning-alert-location-created'
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/webhook-secret-scanning-alert-location-created-form-encoded
            examples:
              default:
                $ref: >-
                  #/components/examples/secret-scanning-alert-location-created-form-encoded
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: secret_scanning_alert_location
        supported-webhook-types:
          - repository
          - organization
          - app
  secret-scanning-alert-reopened:
    post:
      summary: >-
        This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alert locations, use the
        `secret_scanning_alert_location` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: A previously closed secret scanning alert was reopened.
      operationId: secret-scanning-alert/reopened
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-reopened'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: secret_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  secret-scanning-alert-resolved:
    post:
      summary: >-
        This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alert locations, use the
        `secret_scanning_alert_location` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: A secret scanning alert was closed.
      operationId: secret-scanning-alert/resolved
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-resolved'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: secret_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  secret-scanning-alert-revoked:
    post:
      summary: >-
        This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret
        scanning](https://docs.github.com/enterprise-server@3.9/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see
        "[Secret
        scanning](https://docs.github.com/enterprise-server@3.9/rest/secret-scanning)"
        in the REST API documentation.


        For activity relating to secret scanning alert locations, use the
        `secret_scanning_alert_location` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Secret scanning alerts" repository permission.
      description: A secret scanning alert was marked as revoked.
      operationId: secret-scanning-alert/revoked
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-revoked'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: secret_scanning_alert
        supported-webhook-types:
          - repository
          - organization
          - app
  security-advisory-published:
    post:
      summary: >-
        This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security
        advisory provides information about security vulnerabilities or malware
        that have been mapped to packages in ecosystems we support. For more
        information about global security advisories, see "[About global
        security
        advisories](https://docs.github.com/enterprise-server@3.9/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the
        REST API
        documentation](https://docs.github.com/enterprise-server@3.9/rest/security-advisories/global-advisories)
        or [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory
        dataset. For more information, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
      description: A security advisory was published to the GitHub community.
      operationId: security-advisory/published
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#security_advisory
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-published'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: security_advisory
        supported-webhook-types:
          - app
  security-advisory-updated:
    post:
      summary: >-
        This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security
        advisory provides information about security vulnerabilities or malware
        that have been mapped to packages in ecosystems we support. For more
        information about global security advisories, see "[About global
        security
        advisories](https://docs.github.com/enterprise-server@3.9/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the
        REST API
        documentation](https://docs.github.com/enterprise-server@3.9/rest/security-advisories/global-advisories)
        or [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory
        dataset. For more information, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
      description: The metadata or description of a security advisory was changed.
      operationId: security-advisory/updated
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#security_advisory
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-updated'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: security_advisory
        supported-webhook-types:
          - app
  security-advisory-withdrawn:
    post:
      summary: >-
        This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security
        advisory provides information about security vulnerabilities or malware
        that have been mapped to packages in ecosystems we support. For more
        information about global security advisories, see "[About global
        security
        advisories](https://docs.github.com/enterprise-server@3.9/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the
        REST API
        documentation](https://docs.github.com/enterprise-server@3.9/rest/security-advisories/global-advisories)
        or [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory
        dataset. For more information, see "[About Dependabot
        alerts](https://docs.github.com/enterprise-server@3.9/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
      description: A previously published security advisory was withdrawn.
      operationId: security-advisory/withdrawn
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#security_advisory
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-withdrawn'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: security_advisory
        supported-webhook-types:
          - app
  security-and-analysis:
    post:
      summary: >-
        This event occurs when code security and analysis features are enabled
        or disabled for a repository. For more information, see "[GitHub
        security
        features](https://docs.github.com/enterprise-server@3.9/code-security/getting-started/github-security-features)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Administration" repository permission.
      operationId: security-and-analysis
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#security_and_analysis
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-and-analysis'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: security_and_analysis
        supported-webhook-types:
          - repository
          - organization
          - app
  sponsorship-cancelled:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsorship was cancelled and the last billing cycle has ended.


        This event is only sent when a recurring (monthly) sponsorship is
        cancelled; it is not sent for one-time sponsorships.
      operationId: sponsorship/cancelled
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-cancelled'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-created:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsor created a sponsorship for a sponsored account. This event
        occurs once the payment is successfully processed.
      operationId: sponsorship/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A monthly sponsor changed who can see their sponsorship. If you
        recognize your sponsors publicly, you may want to update your sponsor
        recognition to reflect the change when this event occurs.
      operationId: sponsorship/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-pending-cancellation:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsor scheduled a cancellation for their sponsorship. The
        cancellation will become effective on their next billing date.


        This event is only sent when a recurring (monthly) sponsorship is
        cancelled; it is not sent for one-time sponsorships.
      operationId: sponsorship/pending-cancellation
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-pending-cancellation'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-pending-tier-change:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsor scheduled a downgrade to a lower sponsorship tier. The new
        tier will become effective on their next billing date.
      operationId: sponsorship/pending-tier-change
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-pending-tier-change'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  sponsorship-tier-changed:
    post:
      summary: >-
        This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub
        Sponsors](https://docs.github.com/enterprise-server@3.9/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more
        information, see "[Configuring webhooks for events in your sponsored
        account](https://docs.github.com/enterprise-server@3.9/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."
      description: >-
        A sponsor changed the tier of their sponsorship and the change has taken
        effect. If a sponsor upgraded their tier, the change took effect
        immediately. If a sponsor downgraded their tier, the change took effect
        at the beginning of the sponsor's next billing cycle.
      operationId: sponsorship/tier-changed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#sponsorship
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-tier-changed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sponsorship
        supported-webhook-types:
          - sponsors_listing
  star-created:
    post:
      summary: >-
        This event occurs when there is activity relating to repository stars.
        For more information about stars, see "[Saving repositories with
        stars](https://docs.github.com/enterprise-server@3.9/get-started/exploring-projects-on-github/saving-repositories-with-stars)."
        For information about the APIs to manage stars, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#starredrepositoryconnection)
        or
        "[Starring](https://docs.github.com/enterprise-server@3.9/rest/activity/starring)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: Someone starred a repository.
      operationId: star/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#star
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-star-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: star
        supported-webhook-types:
          - repository
          - organization
          - app
  star-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to repository stars.
        For more information about stars, see "[Saving repositories with
        stars](https://docs.github.com/enterprise-server@3.9/get-started/exploring-projects-on-github/saving-repositories-with-stars)."
        For information about the APIs to manage stars, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#starredrepositoryconnection)
        or
        "[Starring](https://docs.github.com/enterprise-server@3.9/rest/activity/starring)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: Someone unstarred the repository.
      operationId: star/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#star
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-star-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: star
        supported-webhook-types:
          - repository
          - organization
          - app
  status:
    post:
      summary: >-
        This event occurs when the status of a Git commit changes. For example,
        commits can be marked as `error`, `failure`, `pending`, or `success`.
        For more information, see "[About status
        checks](https://docs.github.com/enterprise-server@3.9/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks)."
        For information about the APIs to manage commit statuses, see [the
        GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#status)
        or "[Commit
        statuses](https://docs.github.com/enterprise-server@3.9/rest/commits/statuses)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Commit statuses" repository permission.
      operationId: status
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#status
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-status'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: status
        supported-webhook-types:
          - repository
          - organization
          - app
  team-add:
    post:
      summary: >-
        This event occurs when a team is added to a repository.

        For more information, see "[Managing teams and people with access to
        your
        repository](https://docs.github.com/enterprise-server@3.9/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/managing-teams-and-people-with-access-to-your-repository)."


        For activity relating to teams, see the `teams` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      operationId: team-add
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team_add
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-add'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team_add
        supported-webhook-types:
          - repository
          - organization
          - app
  team-added-to-repository:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A team was granted access to a repository.
      operationId: team/added-to-repository
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-added-to-repository'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  team-created:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A team was created.
      operationId: team/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  team-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A team was deleted.
      operationId: team/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  team-edited:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: The name, description, or visibility of a team was changed.
      operationId: team/edited
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-edited'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  team-removed-from-repository:
    post:
      summary: >-
        This event occurs when there is activity relating to teams in an
        organization.

        For more information, see "[About
        teams](https://docs.github.com/enterprise-server@3.9/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Members" organization permission.
      description: A team's access to a repository was removed.
      operationId: team/removed-from-repository
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#team
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-removed-from-repository'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: team
        supported-webhook-types:
          - organization
          - business
          - app
  user-created:
    post:
      summary: >-
        This event occurs when there is activity relating to user accounts in an
        enterprise.
      description: A user account was added to the enterprise.
      operationId: user/created
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#user
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-user-created'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: true
        category: webhooks
        subcategory: user
        supported-webhook-types:
          - business
  user-deleted:
    post:
      summary: >-
        This event occurs when there is activity relating to user accounts in an
        enterprise.
      description: A user account was removed from the enterprise.
      operationId: user/deleted
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#user
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-user-deleted'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: true
        category: webhooks
        subcategory: user
        supported-webhook-types:
          - business
  watch-started:
    post:
      summary: >-
        This event occurs when there is activity relating to watching, or
        subscribing to, a repository. For more information about watching, see
        "[Managing your
        subscriptions](https://docs.github.com/enterprise-server@3.9/account-and-profile/managing-subscriptions-and-notifications-on-github/managing-subscriptions-for-activity-on-github/managing-your-subscriptions)."
        For information about the APIs to manage watching, see
        "[Watching](https://docs.github.com/enterprise-server@3.9/rest/activity/watching)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Metadata" repository permission.
      description: Someone started watching the repository.
      operationId: watch/started
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#watch
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-watch-started'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: watch
        supported-webhook-types:
          - repository
          - organization
          - app
  workflow-dispatch:
    post:
      summary: >-
        This event occurs when a GitHub Actions workflow is manually triggered.
        For more information, see "[Manually running a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/managing-workflow-runs/manually-running-a-workflow)."


        For activity relating to workflow runs, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Contents" repository permission.
      operationId: workflow-dispatch
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_dispatch
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-dispatch'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_dispatch
        supported-webhook-types:
          - app
  workflow-job-completed:
    post:
      summary: >-
        This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow
        jobs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow
        run, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: >-
        A job in a workflow run finished. This event occurs when a job in a
        workflow is completed, regardless of whether the job was successful or
        unsuccessful.
      operationId: workflow-job/completed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_job
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-completed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_job
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-job-in-progress:
    post:
      summary: >-
        This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow
        jobs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow
        run, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A job in a workflow run started processing on a runner.
      operationId: workflow-job/in-progress
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_job
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-in-progress'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_job
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-job-queued:
    post:
      summary: >-
        This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow
        jobs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow
        run, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A job in a workflow run was created.
      operationId: workflow-job/queued
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_job
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-queued'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_job
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-job-waiting:
    post:
      summary: >-
        This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a
        workflow](https://docs.github.com/enterprise-server@3.9/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow
        jobs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow
        run, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A job in a workflow run was created and is waiting for approvals.
      operationId: workflow-job/waiting
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_job
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-waiting'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_job
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-run-completed:
    post:
      summary: >-
        This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About
        workflows](https://docs.github.com/enterprise-server@3.9/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#workflowrun)
        or "[Workflow
        runs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-runs)"
        in the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: >-
        A workflow run finished. This event occurs when a workflow run is
        completed, regardless of whether the workflow was successful or
        unsuccessful.
      operationId: workflow-run/completed
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-completed'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_run
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-run-in-progress:
    post:
      summary: >-
        This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About
        workflows](https://docs.github.com/enterprise-server@3.9/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#workflowrun)
        or "[Workflow
        runs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-runs)"
        in the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A workflow run started processing on a runner.
      operationId: workflow-run/in-progress
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-in-progress'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_run
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
  workflow-run-requested:
    post:
      summary: >-
        This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About
        workflows](https://docs.github.com/enterprise-server@3.9/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL
        documentation](https://docs.github.com/enterprise-server@3.9/graphql/reference/objects#workflowrun)
        or "[Workflow
        runs](https://docs.github.com/enterprise-server@3.9/rest/actions/workflow-runs)"
        in the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job`
        event.


        To subscribe to this event, a GitHub App must have at least read-level
        access for the "Actions" repository permission.
      description: A workflow run was triggered.
      operationId: workflow-run/requested
      externalDocs:
        url: >-
          https://docs.github.com/enterprise-server@3.9/webhooks/webhook-events-and-payloads#workflow_run
      parameters:
        - name: User-Agent
          in: header
          example: GitHub-Hookshot/123abc
          schema:
            type: string
        - name: X-Github-Hook-Id
          in: header
          example: 12312312
          schema:
            type: string
        - name: X-Github-Event
          in: header
          example: issues
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Id
          in: header
          example: 123123
          schema:
            type: string
        - name: X-Github-Hook-Installation-Target-Type
          in: header
          example: repository
          schema:
            type: string
        - name: X-GitHub-Delivery
          in: header
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          schema:
            type: string
        - name: X-Hub-Signature-256
          in: header
          example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
          schema:
            type: string
        - name: X-GitHub-Enterprise-Version
          in: header
          example: 3.1.9
          schema:
            type: string
        - name: X-GitHub-Enterprise-Host
          in: header
          example: ghes.github.com
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-requested'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: workflow_run
        supported-webhook-types:
          - business
          - repository
          - organization
          - app
components:
  schemas:
    ldap-mapping-user:
      title: Ldap Private User
      description: Ldap Private User
      type: object
      properties:
        ldap_dn:
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        name:
          type: string
          example: monalisa octocat
          nullable: true
        company:
          type: string
          example: GitHub
          nullable: true
        blog:
          type: string
          example: https://github.com/blog
          nullable: true
        location:
          type: string
          example: San Francisco
          nullable: true
        email:
          type: string
          format: email
          example: octocat@github.com
          nullable: true
        hireable:
          type: boolean
          nullable: true
        bio:
          type: string
          example: There once was...
          nullable: true
        twitter_username:
          type: string
          example: monalisa
          nullable: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        updated_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        private_gists:
          type: integer
          example: 81
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        disk_usage:
          type: integer
          example: 10000
        collaborators:
          type: integer
          example: 8
        two_factor_authentication:
          type: boolean
          example: true
        plan:
          type: object
          properties:
            collaborators:
              type: integer
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
          required:
            - collaborators
            - name
            - space
            - private_repos
        suspended_at:
          type: string
          format: date-time
          nullable: true
        business_plus:
          type: boolean
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
        - bio
        - blog
        - company
        - email
        - followers
        - following
        - hireable
        - location
        - name
        - public_gists
        - public_repos
        - created_at
        - updated_at
        - collaborators
        - disk_usage
        - owned_private_repos
        - private_gists
        - total_private_repos
        - two_factor_authentication
    authorization:
      title: Authorization
      description: >-
        The authorization for an OAuth app, GitHub App, or a Personal Access
        Token.
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
          format: uri
        scopes:
          description: A list of scopes that this authorization is in.
          type: array
          items:
            type: string
          nullable: true
        token:
          type: string
        token_last_eight:
          type: string
          nullable: true
        hashed_token:
          type: string
          nullable: true
        app:
          type: object
          properties:
            client_id:
              type: string
            name:
              type: string
            url:
              type: string
              format: uri
          required:
            - client_id
            - name
            - url
        note:
          type: string
          nullable: true
        note_url:
          type: string
          format: uri
          nullable: true
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        fingerprint:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        installation:
          $ref: '#/components/schemas/nullable-scoped-installation'
        expires_at:
          type: string
          format: date-time
          nullable: true
      required:
        - app
        - id
        - note
        - note_url
        - scopes
        - token
        - hashed_token
        - token_last_eight
        - fingerprint
        - url
        - created_at
        - updated_at
        - expires_at
    enterprise-user-overview:
      title: Enterprise User Stats
      type: object
      properties:
        total_users:
          type: integer
        admin_users:
          type: integer
        suspended_users:
          type: integer
      required:
        - total_users
        - admin_users
        - suspended_users
    private-user:
      title: Private User
      description: Private User
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        name:
          type: string
          example: monalisa octocat
          nullable: true
        company:
          type: string
          example: GitHub
          nullable: true
        blog:
          type: string
          example: https://github.com/blog
          nullable: true
        location:
          type: string
          example: San Francisco
          nullable: true
        email:
          type: string
          format: email
          example: octocat@github.com
          nullable: true
        hireable:
          type: boolean
          nullable: true
        bio:
          type: string
          example: There once was...
          nullable: true
        twitter_username:
          type: string
          example: monalisa
          nullable: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        updated_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        private_gists:
          type: integer
          example: 81
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        disk_usage:
          type: integer
          example: 10000
        collaborators:
          type: integer
          example: 8
        two_factor_authentication:
          type: boolean
          example: true
        plan:
          type: object
          properties:
            collaborators:
              type: integer
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
          required:
            - collaborators
            - name
            - space
            - private_repos
        suspended_at:
          type: string
          format: date-time
          nullable: true
        business_plus:
          type: boolean
        ldap_dn:
          type: string
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
        - bio
        - blog
        - company
        - email
        - followers
        - following
        - hireable
        - location
        - name
        - public_gists
        - public_repos
        - created_at
        - updated_at
        - collaborators
        - disk_usage
        - owned_private_repos
        - private_gists
        - total_private_repos
        - two_factor_authentication
    gpg-key:
      title: GPG Key
      description: A unique encryption key
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: Octocat's GPG Key
          nullable: true
        primary_key_id:
          type: integer
          nullable: true
        key_id:
          type: string
          example: 3262EFF25BA0D270
        public_key:
          type: string
          example: xsBNBFayYZ...
        emails:
          type: array
          example:
            - email: octocat@users.noreply.github.com
              verified: true
          items:
            type: object
            properties:
              email:
                type: string
              verified:
                type: boolean
        subkeys:
          type: array
          example:
            - id: 4
              primary_key_id: 3
              key_id: 4A595D4C72EE49C7
              public_key: zsBNBFayYZ...
              emails: []
              can_sign: false
              can_encrypt_comms: true
              can_encrypt_storage: true
              can_certify: false
              created_at: '2016-03-24T11:31:04-06:00'
              expires_at: null
              revoked: false
          items:
            type: object
            properties:
              id:
                type: integer
              primary_key_id:
                type: integer
              key_id:
                type: string
              public_key:
                type: string
              emails:
                type: array
                items:
                  type: object
                  properties:
                    email:
                      type: string
                    verified:
                      type: boolean
              subkeys:
                type: array
                items: {}
              can_sign:
                type: boolean
              can_encrypt_comms:
                type: boolean
              can_encrypt_storage:
                type: boolean
              can_certify:
                type: boolean
              created_at:
                type: string
              expires_at:
                type: string
                nullable: true
              raw_key:
                type: string
                nullable: true
              revoked:
                type: boolean
        can_sign:
          type: boolean
          example: true
        can_encrypt_comms:
          type: boolean
        can_encrypt_storage:
          type: boolean
        can_certify:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: '2016-03-24T11:31:04-06:00'
        expires_at:
          type: string
          format: date-time
          nullable: true
        revoked:
          type: boolean
          example: true
        raw_key:
          type: string
          nullable: true
      required:
        - id
        - primary_key_id
        - key_id
        - raw_key
        - public_key
        - created_at
        - expires_at
        - can_sign
        - can_encrypt_comms
        - can_encrypt_storage
        - can_certify
        - emails
        - subkeys
        - revoked
    key:
      title: Key
      description: Key
      type: object
      properties:
        key:
          type: string
        id:
          type: integer
        url:
          type: string
        title:
          type: string
        created_at:
          type: string
          format: date-time
        verified:
          type: boolean
        read_only:
          type: boolean
      required:
        - key
        - id
        - url
        - title
        - created_at
        - verified
        - read_only
    org-membership:
      title: Org Membership
      description: Org Membership
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/memberships/defunkt
        state:
          type: string
          description: >-
            The state of the member in the organization. The `pending` state
            indicates the user has not yet accepted an invitation.
          example: active
          enum:
            - active
            - pending
        role:
          type: string
          description: The user's membership type in the organization.
          example: admin
          enum:
            - admin
            - member
            - billing_manager
        organization_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat
        organization:
          $ref: '#/components/schemas/organization-simple'
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        permissions:
          type: object
          properties:
            can_create_repository:
              type: boolean
          required:
            - can_create_repository
      required:
        - state
        - role
        - organization_url
        - url
        - organization
        - user
    package:
      title: Package
      description: A software package
      type: object
      properties:
        id:
          description: Unique identifier of the package.
          type: integer
          example: 1
        name:
          description: The name of the package.
          type: string
          example: super-linter
        package_type:
          type: string
          example: docker
          enum:
            - npm
            - maven
            - rubygems
            - docker
            - nuget
            - container
        url:
          type: string
          example: https://api.github.com/orgs/github/packages/container/super-linter
        html_url:
          type: string
          example: >-
            https://github.com/orgs/github/packages/container/package/super-linter
        version_count:
          description: The number of versions of the package.
          type: integer
          example: 1
        visibility:
          type: string
          example: private
          enum:
            - private
            - public
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        repository:
          $ref: '#/components/schemas/nullable-minimal-repository'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - package_type
        - visibility
        - url
        - html_url
        - version_count
        - created_at
        - updated_at
    package-version:
      title: Package Version
      description: A version of a software package
      type: object
      properties:
        id:
          description: Unique identifier of the package version.
          type: integer
          example: 1
        name:
          description: The name of the package version.
          type: string
          example: latest
        url:
          type: string
          example: >-
            https://api.github.com/orgs/github/packages/container/super-linter/versions/786068
        package_html_url:
          type: string
          example: >-
            https://github.com/orgs/github/packages/container/package/super-linter
        html_url:
          type: string
          example: >-
            https://github.com/orgs/github/packages/container/super-linter/786068
        license:
          type: string
          example: MIT
        description:
          type: string
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        deleted_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        metadata:
          type: object
          title: Package Version Metadata
          properties:
            package_type:
              type: string
              example: docker
              enum:
                - npm
                - maven
                - rubygems
                - docker
                - nuget
                - container
            container:
              type: object
              title: Container Metadata
              properties:
                tags:
                  type: array
                  items:
                    type: string
              required:
                - tags
            docker:
              type: object
              title: Docker Metadata
              properties:
                tag:
                  type: array
                  items:
                    type: string
              required:
                - tags
          required:
            - package_type
      required:
        - id
        - name
        - url
        - package_html_url
        - created_at
        - updated_at
    ssh-signing-key:
      title: SSH Signing Key
      description: A public SSH key used to sign Git commits
      type: object
      properties:
        key:
          type: string
        id:
          type: integer
        title:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - key
        - id
        - title
        - created_at
    hovercard:
      title: Hovercard
      description: Hovercard
      type: object
      properties:
        contexts:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              octicon:
                type: string
            required:
              - message
              - octicon
      required:
        - contexts
    installation:
      title: Installation
      description: Installation
      type: object
      properties:
        id:
          description: The ID of the installation.
          type: integer
          example: 1
        account:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/simple-user'
            - $ref: '#/components/schemas/enterprise'
        repository_selection:
          description: >-
            Describe whether all repositories have been selected or there's a
            selection involved
          type: string
          enum:
            - all
            - selected
        access_tokens_url:
          type: string
          format: uri
          example: https://api.github.com/app/installations/1/access_tokens
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/installation/repositories
        html_url:
          type: string
          format: uri
          example: https://github.com/organizations/github/settings/installations/1
        app_id:
          type: integer
          example: 1
        target_id:
          description: The ID of the user or organization this token is being scoped to.
          type: integer
        target_type:
          type: string
          example: Organization
        permissions:
          $ref: '#/components/schemas/app-permissions'
        events:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        single_file_name:
          type: string
          example: config.yaml
          nullable: true
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
            - config.yml
            - .github/issue_TEMPLATE.md
        app_slug:
          type: string
          example: github-actions
        suspended_by:
          $ref: '#/components/schemas/nullable-simple-user'
        suspended_at:
          type: string
          format: date-time
          nullable: true
        contact_email:
          type: string
          example: '"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com"'
          nullable: true
      required:
        - id
        - app_id
        - app_slug
        - target_id
        - target_type
        - single_file_name
        - repository_selection
        - access_tokens_url
        - html_url
        - repositories_url
        - events
        - account
        - permissions
        - created_at
        - updated_at
        - suspended_by
        - suspended_at
